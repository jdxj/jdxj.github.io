<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>第5章 实现HTTP/2推送 on jdxj</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/</link><description>Recent content in 第5章 实现HTTP/2推送 on jdxj</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 25 Mar 2023 11:16:37 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/index.xml" rel="self" type="application/rss+xml"/><item><title>5.9 HTTP/2推送的其他应用场景</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.9/</link><pubDate>Mon, 27 Mar 2023 21:12:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.9/</guid><description>如果不再严格要求只针对具体的请求响应推送，HTTP/2推送是否可以代替WebSockets或者SSE？ 当资源更新时，HTTP/2推送是否可以</description></item><item><title>5.8 对比推送和预加载</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.8/</link><pubDate>Mon, 27 Mar 2023 21:11:21 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.8/</guid><description>图5.18 使用状态码103告诉Web服务器更早推送资源 图5.19 使用带有preload首部的103状态码代替HTTP/2推送</description></item><item><title>5.7 HTTP/2推送对性能的影响</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.7/</link><pubDate>Mon, 27 Mar 2023 21:03:22 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.7/</guid><description>高效使用HTTP/2推送的关键是利用连接未被使用时的空闲带宽。 图5.17 HTTP/2推送的资源和主动请求的资源响应时间不同</description></item><item><title>5.6 HTTP/2推送常见问题</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.6/</link><pubDate>Mon, 27 Mar 2023 20:59:53 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.6/</guid><description>你在使用HTTP/2吗？ 你的服务器支持HTTP/2推送吗？ 你的服务器在其他基础架构之后吗？如果你的服务器之前有负载均衡器，或者其他中断HTT</description></item><item><title>5.5 推送什么</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.5/</link><pubDate>Mon, 27 Mar 2023 20:49:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.5/</guid><description>5.5.1 你能推送什么 规范规定了一些HTTP/2推送的基本规则： 在SETTINGS帧中将SETTINGS_ENABLE_PUSH设置为0，客户端可以</description></item><item><title>5.4 如何实现条件推送</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.4/</link><pubDate>Mon, 27 Mar 2023 20:30:35 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.4/</guid><description>使用HTTP/2推送的风险是推送浏览器不需要的资源 5.4.1 在服务端跟踪推送的资源 需要记状态, 比较复杂 会遇到资源限制 负载均衡问题 5.4.2 使用HTTP条件请</description></item><item><title>5.3 HTTP/2推送在浏览器中如何运作</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.3/</link><pubDate>Sun, 26 Mar 2023 12:13:30 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.3/</guid><description>具体和实现有关, 服务器推送的资源, 大多数浏览器不会立即使用, 而是放到缓存中, 如果浏览器需要某资源先去缓存中查找. 5.3.1 查看推送缓存如何工作 推送的</description></item><item><title>5.2 如何推送</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.2/</link><pubDate>Sat, 25 Mar 2023 11:32:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.2/</guid><description>5.2.1 使用HTTP link首部推送 nginx 例子来源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 server { listen 443 ssl http2 default_server; ssl_certificate ssl/certificate.pem; ssl_certificate_key ssl/key.pem; root /var/www/html; http2_push_preload on; location = /demo.html { add_header Set-Cookie &amp;#34;session=1&amp;#34;; add_header Link $resources; } } map $http_cookie $resources {</description></item><item><title>5.1 什么是HTTP/2服务端推送</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.1/</link><pubDate>Sat, 25 Mar 2023 11:17:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.1/</guid><description>HTTP/2服务端推送（以下称为HTTP/2推送）允许服务器发回客户端未请求的额外资源。 HTTP/2多路复用技术允许在同一连接上并行请求所有</description></item></channel></rss>