<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Abhinav Gupta on jdxj</title><link>https://jdxj.github.io/posts/articles/abhinavg/</link><description>Recent content in Abhinav Gupta on jdxj</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 20 Dec 2022 11:38:48 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/posts/articles/abhinavg/index.xml" rel="self" type="application/rss+xml"/><item><title>Designing Go Libraries</title><link>https://jdxj.github.io/posts/articles/abhinavg/designing-go-libraries/</link><pubDate>Tue, 20 Dec 2022 10:17:23 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/abhinavg/designing-go-libraries/</guid><description>原文 1. Primary Concerns 1.1. Usability 建立惯例使库的特性可发现 潜在的错误使用 易于完成常见任务 Case Study: net/http 看起来有些繁琐 1 2 3 4 5 6 7 8 9 10 // import &amp;#34;net/http&amp;#34; req, err := http.NewRequest(http.MethodGet, &amp;#34;http://example.com&amp;#34;, nil /* body */) if err != nil</description></item></channel></rss>