<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Cmd on jdxj</title><link>https://jdxj.github.io/posts/cmd/</link><description>Recent content in Cmd on jdxj</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 16 Dec 2022 16:22:53 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/posts/cmd/index.xml" rel="self" type="application/rss+xml"/><item><title>nohup</title><link>https://jdxj.github.io/posts/cmd/nohup/</link><pubDate>Tue, 31 Oct 2023 14:38:48 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/nohup/</guid><description>nohup /dev/null 2&amp;gt;&amp;amp;1 含义详解</description></item><item><title>wrk</title><link>https://jdxj.github.io/posts/cmd/wrk/</link><pubDate>Sun, 01 Oct 2023 15:25:50 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/wrk/</guid><description>HTTP 性能测试工具</description></item><item><title>iperf</title><link>https://jdxj.github.io/posts/cmd/iperf/</link><pubDate>Sun, 01 Oct 2023 15:14:49 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/iperf/</guid><description>网络性能测试工具</description></item><item><title>ethtool</title><link>https://jdxj.github.io/posts/cmd/ethtool/</link><pubDate>Sun, 01 Oct 2023 15:02:10 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ethtool/</guid><description> 1 2 $ ethtool eth0 | grep Speed Speed: 1000Mb/s</description></item><item><title>ss</title><link>https://jdxj.github.io/posts/cmd/ss/</link><pubDate>Sun, 01 Oct 2023 14:35:06 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ss/</guid><description>查看套接字、网络栈、网络接口以及路由表的信息</description></item><item><title>ip</title><link>https://jdxj.github.io/posts/cmd/ip/</link><pubDate>Sun, 01 Oct 2023 14:28:42 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ip/</guid><description>1 2 3 4 5 6 7 8 9 10 11 $ ip -s addr show dev eth0 2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 78:0d:3a:07:cf:3a brd ff:ff:ff:ff:ff:ff inet 10.240.0.30/12 brd 10.255.255.255 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::20d:3aff:fe07:cf2a/64 scope link valid_lft forever preferred_lft forever RX: bytes packets errors dropped overrun mcast 9542432350 40809397 0 0 0 193 TX: bytes packets</description></item><item><title>find</title><link>https://jdxj.github.io/posts/cmd/find/</link><pubDate>Sun, 01 Oct 2023 14:18:40 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/find/</guid><description/></item><item><title>opensnoop</title><link>https://jdxj.github.io/posts/cmd/opensnoop/</link><pubDate>Sat, 30 Sep 2023 15:21:36 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/opensnoop/</guid><description>动态跟踪内核中的 open 系统调用</description></item><item><title>filetop</title><link>https://jdxj.github.io/posts/cmd/filetop/</link><pubDate>Sat, 30 Sep 2023 15:16:33 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/filetop/</guid><description>跟踪内核中文件的读写情况</description></item><item><title>lsof</title><link>https://jdxj.github.io/posts/cmd/lsof/</link><pubDate>Sat, 30 Sep 2023 14:04:57 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/lsof/</guid><description>用来查看进程打开文件列表</description></item><item><title>iotop</title><link>https://jdxj.github.io/posts/cmd/iotop/</link><pubDate>Sat, 30 Sep 2023 13:44:56 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/iotop/</guid><description>I/O性能分析</description></item><item><title>fio</title><link>https://jdxj.github.io/posts/cmd/fio/</link><pubDate>Sat, 30 Sep 2023 13:34:44 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/fio/</guid><description>文件系统和磁盘 I/O 性能基准测试工具</description></item><item><title>slabtop</title><link>https://jdxj.github.io/posts/cmd/slabtop/</link><pubDate>Sat, 30 Sep 2023 12:51:49 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/slabtop/</guid><description>找占用内存最多的缓存类型</description></item><item><title>memleak</title><link>https://jdxj.github.io/posts/cmd/memleak/</link><pubDate>Fri, 29 Sep 2023 12:17:15 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/memleak/</guid><description>检测内存泄漏</description></item><item><title>pcstat</title><link>https://jdxj.github.io/posts/cmd/pcstat/</link><pubDate>Fri, 29 Sep 2023 10:50:33 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/pcstat/</guid><description>查看文件在内存中的缓存大小以及缓存比例</description></item><item><title>cachetop</title><link>https://jdxj.github.io/posts/cmd/cachetop/</link><pubDate>Fri, 29 Sep 2023 10:46:52 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/cachetop/</guid><description>提供了每个进程的缓存命中情况</description></item><item><title>cachestat</title><link>https://jdxj.github.io/posts/cmd/cachestat/</link><pubDate>Fri, 29 Sep 2023 10:43:59 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/cachestat/</guid><description>提供了整个操作系统缓存的读写命中情况</description></item><item><title>sar</title><link>https://jdxj.github.io/posts/cmd/sar/</link><pubDate>Sun, 24 Sep 2023 14:29:39 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sar/</guid><description>系统活动报告工具，既可以实时查看系统的当前活动，又可以配置保存和报告历史统计数据</description></item><item><title>hping3</title><link>https://jdxj.github.io/posts/cmd/hping3/</link><pubDate>Sun, 24 Sep 2023 14:17:04 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/hping3/</guid><description>构造 TCP/IP 协议数据包的工具，可以对系统进行安全审计、防火墙测试等</description></item><item><title>strace</title><link>https://jdxj.github.io/posts/cmd/strace/</link><pubDate>Sun, 24 Sep 2023 12:38:19 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/strace/</guid><description>跟踪进程系统调用的工具</description></item><item><title>dstat</title><link>https://jdxj.github.io/posts/cmd/dstat/</link><pubDate>Sun, 24 Sep 2023 12:32:34 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/dstat/</guid><description>它吸收了 vmstat、iostat、ifstat 等几种工具的优点，可以同时观察系统的 CPU、磁盘 I/O、网络以及内存使用情况。</description></item><item><title>execsnoop</title><link>https://jdxj.github.io/posts/cmd/execsnoop/</link><pubDate>Sun, 24 Sep 2023 10:56:53 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/execsnoop/</guid><description>是一个专为短时进程设计的工具。它通过 ftrace 实时监控进程的 exec() 行为，并输出短时进程的基本信息，包括进程 PID、父进程 PID、命令行参数以及执行的结果。</description></item><item><title>pstree</title><link>https://jdxj.github.io/posts/cmd/pstree/</link><pubDate>Sun, 24 Sep 2023 10:45:57 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/pstree/</guid><description>用树状形式显示所有进程之间的关系</description></item><item><title>iostat</title><link>https://jdxj.github.io/posts/cmd/iostat/</link><pubDate>Sat, 23 Sep 2023 08:33:21 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/iostat/</guid><description>磁盘 I/O 性能观测工具</description></item><item><title>跟踪远程分支</title><link>https://jdxj.github.io/posts/cmd/git/%E8%B7%9F%E8%B8%AA%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</link><pubDate>Fri, 23 Jun 2023 14:42:18 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E8%B7%9F%E8%B8%AA%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</guid><description>第一种方法 1 2 $ git checkout -b foo o/main $ git pull/push 第二种方法 1 2 3 $ git branch -u o/main foo $ git commit $ git push</description></item><item><title>获取远程更新</title><link>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%96%B0/</link><pubDate>Fri, 23 Jun 2023 13:51:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%96%B0/</guid><description>git pull是git fetch; git merge的缩写 git pull --rebase是git fetch; git rebase的缩写</description></item><item><title>获取指定提交到当前分支</title><link>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E6%8F%90%E4%BA%A4%E5%88%B0%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF/</link><pubDate>Fri, 23 Jun 2023 12:00:41 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E6%8F%90%E4%BA%A4%E5%88%B0%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF/</guid><description>1 $ git cherry-pick &amp;lt;commit-id&amp;gt;...</description></item><item><title>撤销变更</title><link>https://jdxj.github.io/posts/cmd/git/%E6%92%A4%E9%94%80%E5%8F%98%E6%9B%B4/</link><pubDate>Fri, 23 Jun 2023 11:47:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E6%92%A4%E9%94%80%E5%8F%98%E6%9B%B4/</guid><description>reset 回退一步 revert 生成新commit来还原</description></item><item><title>移动分支头</title><link>https://jdxj.github.io/posts/cmd/git/%E7%A7%BB%E5%8A%A8%E5%88%86%E6%94%AF%E5%A4%B4/</link><pubDate>Fri, 23 Jun 2023 11:40:42 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E7%A7%BB%E5%8A%A8%E5%88%86%E6%94%AF%E5%A4%B4/</guid><description>1 $ git branch -f &amp;lt;branch-name&amp;gt; &amp;lt;commit-id&amp;gt;</description></item><item><title>tcpdump</title><link>https://jdxj.github.io/posts/cmd/tcpdump/</link><pubDate>Sat, 17 Jun 2023 12:14:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/tcpdump/</guid><description>-D 列举所有网卡设备 -i 选择网卡设备 -c 抓取多少条报文 &amp;ndash;time-stamp-precision 指定捕获时的时间精度, 默认micro, 可选nano -s 指定每条报文的最大字节数, 默认2621</description></item><item><title>seq</title><link>https://jdxj.github.io/posts/cmd/seq/</link><pubDate>Sun, 14 May 2023 10:50:15 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/seq/</guid><description>生成数字序列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # 生成1～5的数字序列 $ seq 1 5 1 2 3 4 5 # 指定使用空格为分隔符 $ seq -s&amp;#39; &amp;#39; 1 5 1 2</description></item><item><title>free</title><link>https://jdxj.github.io/posts/cmd/free/</link><pubDate>Sun, 14 May 2023 10:03:18 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/free/</guid><description>1 2 3 4 5 # 注意不同版本的free输出可能会有所不同 $ free total used free shared buff/cache available Mem: 8169348 263524 6875352 668 1030472 7611064 Swap: 0 0 0 total 是总内存大小 used 是已使用内存的大小，包含了共享内存</description></item><item><title>RANDOM</title><link>https://jdxj.github.io/posts/cmd/random/</link><pubDate>Wed, 26 Apr 2023 10:45:20 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/random/</guid><description>linux环境变量, 保存0~32767之间的随机整数 1 2 3 $ echo $RANDOM $ echo $[RANDOM%10+1] 9</description></item><item><title>ps</title><link>https://jdxj.github.io/posts/cmd/ps/</link><pubDate>Mon, 24 Apr 2023 14:57:08 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ps/</guid><description>1 2 3 4 $ ps aux | grep /app root 4009 0.0 0.0 4376 1008 pts/0 Ss+ 05:51 0:00 /app root 4287 0.6 0.4 37280 33660 pts/0 D+ 05:54 0:00 /app root 4288 0.6 0.4 37280 33668 pts/0 D+ 05:54 0:00 /app s 表示这个进程是一个会话的领导进程，而 + 表示前台进程组</description></item><item><title>cat</title><link>https://jdxj.github.io/posts/cmd/cat/</link><pubDate>Mon, 24 Apr 2023 14:56:23 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/cat/</guid><description>1 2 3 4 5 6 7 # 查看中断情况 # -d 参数表示高亮显示变化的区域 $ watch -d cat /proc/interrupts CPU0 CPU1 ... RES: 2450431 5279697 Rescheduling interrupts ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 $ cat /proc/zoneinfo ... Node 0, zone Normal pages free 227894 min 14896</description></item><item><title>netstat</title><link>https://jdxj.github.io/posts/cmd/netstat/</link><pubDate>Mon, 24 Apr 2023 10:51:20 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/netstat/</guid><description>1 2 3 4 5 6 7 8 9 10 11 # 列出listen/非listen套接字 $ netstat -a # 列出tcp套接字 $ netstat -at # 展示端口号 $ netstat -ltn # 展示进程 $ netstat -ltnp # 显示 8080 端口所</description></item><item><title>ab</title><link>https://jdxj.github.io/posts/cmd/ab/</link><pubDate>Fri, 21 Apr 2023 18:33:33 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ab/</guid><description>apache bench是一个常用的 HTTP 服务性能测试工具</description></item><item><title>perf</title><link>https://jdxj.github.io/posts/cmd/perf/</link><pubDate>Fri, 21 Apr 2023 18:17:21 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/perf/</guid><description>是Linux2.6.31以后内置的性能分析工具。它以性能事件采样为基础，不仅可以分析系统的各种事件和内核性能，还可以用来分析指定应用程序的性能问题。</description></item><item><title>sysbench</title><link>https://jdxj.github.io/posts/cmd/sysbench/</link><pubDate>Thu, 20 Apr 2023 11:31:53 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sysbench/</guid><description>一个多线程的基准测试工具，一般用来评估不同系统参数下的数据库负载情况</description></item><item><title>pidstat</title><link>https://jdxj.github.io/posts/cmd/pidstat/</link><pubDate>Thu, 20 Apr 2023 11:18:02 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/pidstat/</guid><description>一个常用的进程性能分析工具，用来实时查看进程的CPU、内存、I/O以及上下文切换等性能指标</description></item><item><title>mpstat</title><link>https://jdxj.github.io/posts/cmd/mpstat/</link><pubDate>Thu, 20 Apr 2023 11:14:42 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/mpstat/</guid><description>一个常用的多核CPU性能分析工具，用来实时查看每个CPU的性能指标，以及所有CPU的平均指标</description></item><item><title>vmstat</title><link>https://jdxj.github.io/posts/cmd/vmstat/</link><pubDate>Thu, 20 Apr 2023 11:07:18 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/vmstat/</guid><description>一个常用的系统性能分析工具，主要用来分析系统的内存使用情况，也常用来分析CPU上下文切换和中断的次数</description></item><item><title>sysstat</title><link>https://jdxj.github.io/posts/cmd/sysstat/</link><pubDate>Thu, 20 Apr 2023 10:04:11 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sysstat/</guid><description>sysstat 包含了常用的 Linux 性能工具，用来监控和分析系统的性能。 1 $ apt install sysstat 包含的命令 mpstat pidstat</description></item><item><title>stress</title><link>https://jdxj.github.io/posts/cmd/stress/</link><pubDate>Thu, 20 Apr 2023 09:55:35 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/stress/</guid><description>Linux系统压力测试工具</description></item><item><title>top</title><link>https://jdxj.github.io/posts/cmd/top/</link><pubDate>Tue, 18 Apr 2023 17:04:27 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/top/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 # 默认每3秒刷新一次 $ top top - 11:58:59 up 9 days, 22:47, 1 user, load average: 0.03, 0.02, 0.00 Tasks: 123 total, 1 running, 72 sleeping, 0 stopped, 0 zombie %Cpu(s): 0.3 us, 0.3 sy, 0.0 ni, 99.3 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st KiB Mem :</description></item><item><title>watch</title><link>https://jdxj.github.io/posts/cmd/watch/</link><pubDate>Tue, 18 Apr 2023 17:02:58 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/watch/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 # 观察软中断变化速率 $ watch -d cat /proc/softirqs CPU0 CPU1 HI: 0 0 TIMER: 1083906 2368646 NET_TX: 53 9 NET_RX: 1550643 1916776 BLOCK: 0 0 IRQ_POLL: 0 0 TASKLET: 333637 3930 SCHED: 963675 2293171 HRTIMER: 0 0 RCU: 1542111 1590625</description></item><item><title>直接展示结果到终端而不是pager</title><link>https://jdxj.github.io/posts/cmd/git/%E7%9B%B4%E6%8E%A5%E5%B1%95%E7%A4%BA%E7%BB%93%E6%9E%9C%E5%88%B0%E7%BB%88%E7%AB%AF%E8%80%8C%E4%B8%8D%E6%98%AFpager/</link><pubDate>Mon, 20 Mar 2023 16:18:51 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E7%9B%B4%E6%8E%A5%E5%B1%95%E7%A4%BA%E7%BB%93%E6%9E%9C%E5%88%B0%E7%BB%88%E7%AB%AF%E8%80%8C%E4%B8%8D%E6%98%AFpager/</guid><description>要不还得按&lt;code>q&lt;/code>退出</description></item><item><title>压缩其他分支提交到本分支</title><link>https://jdxj.github.io/posts/cmd/git/%E5%8E%8B%E7%BC%A9%E5%85%B6%E4%BB%96%E5%88%86%E6%94%AF%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%88%86%E6%94%AF/</link><pubDate>Sat, 07 Jan 2023 12:13:10 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E5%8E%8B%E7%BC%A9%E5%85%B6%E4%BB%96%E5%88%86%E6%94%AF%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%88%86%E6%94%AF/</guid><description>1 $ git merge --squash &amp;lt;branch&amp;gt;</description></item><item><title>terminal prompts disabled</title><link>https://jdxj.github.io/posts/cmd/git/terminal-prompts-disabled/</link><pubDate>Wed, 04 Jan 2023 21:55:38 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/terminal-prompts-disabled/</guid><description>解决could not read Username for &amp;lsquo;https://github.com&amp;rsquo;: terminal prompts disabled 1 $ git config --global --add url.&amp;#34;git@github.com:&amp;#34;.insteadOf &amp;#34;https://github.com/&amp;#34;</description></item><item><title>uptime</title><link>https://jdxj.github.io/posts/cmd/uptime/</link><pubDate>Wed, 28 Dec 2022 14:48:50 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/uptime/</guid><description> 1 2 $ uptime 08:38:29 up 37 min, 1 user, load average: 1.20, 1.25, 1.18</description></item><item><title>curl</title><link>https://jdxj.github.io/posts/cmd/curl/</link><pubDate>Tue, 06 Dec 2022 10:28:45 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/curl/</guid><description>官方文档 curl获取请求时间统计</description></item></channel></rss>