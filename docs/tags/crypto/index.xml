<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>crypto on jdxj</title><link>https://jdxj.github.io/tags/crypto/</link><description>Recent content in crypto on jdxj</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 22 Jun 2023 14:10:38 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/tags/crypto/index.xml" rel="self" type="application/rss+xml"/><item><title>随机数生成</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/</link><pubDate>Thu, 22 Jun 2023 14:10:38 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/</guid><description>Go密码学包crypto/rand提供了密码学级别的随机数生成器实现rand.Reader，在不同平台上rand.Reader使用的数据源有</description></item><item><title>数字签名</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</link><pubDate>Thu, 22 Jun 2023 13:55:03 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</guid><description>消息认证码虽然解决了消息发送者的身份认证问题，但由于采用消息认证码的通信双方共享密钥，因此对于一条通过了MAC验证的消息，通信双方依旧无法向</description></item><item><title>消息认证码</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81/</link><pubDate>Thu, 22 Jun 2023 13:45:53 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81/</guid><description>单向散列函数虽然能辨别出数据是否被篡改，但却无法辨别出数据是不是伪装的。因此，在这样的场合下，我们还需要对消息进行认证（Authentica</description></item><item><title>单向散列函数</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</link><pubDate>Thu, 22 Jun 2023 13:37:57 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</guid><description>除了输出长度固定、计算快速之外，密码学级别的单向散列函数还具有如下性质 强抗碰撞性：要找到散列值（摘要值）相同的两条不同的消息是非常困难的。 单</description></item><item><title>公钥密码</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81/</link><pubDate>Thu, 22 Jun 2023 12:49:30 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81/</guid><description>常见的密钥配送方案有事先共享密钥（事先以安全的方式将密钥交给通信方）、密钥分配中心（每个通信方要事先与密钥分配中心共享密钥）、Diffie-</description></item><item><title>分组密码算法</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 22 Jun 2023 01:07:56 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%AE%97%E6%B3%95/</guid><description>密码算法可以分为分组密码（block cipher）和流密码（stream cipher）两种。 分组密码是一种一次仅能处理固定长度数据块的算法。</description></item><item><title>Go密码学包</title><link>https://jdxj.github.io/posts/articles/jdxj/go/go%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8C%85/</link><pubDate>Thu, 22 Jun 2023 00:46:40 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/go%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8C%85/</guid><description>官方crypto包 src/crypto golang.org/x/crypto 分类 分组密码 cipher 五种分组模式 ECB CBC CFB OFB CTR des 对称密码 DES TDEA aes 对称密码 AES 公钥密码 tls TLS 1.2 TLS 1.3 x509 编码格式的密钥和证书的解析 rsa RSA elliptic 标准</description></item><item><title>Encrypting Data With SSH Keys and Golang</title><link>https://jdxj.github.io/posts/articles/earthly/encrypting-data-with-ssh-keys-and-golang/</link><pubDate>Mon, 19 Jun 2023 13:38:03 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/earthly/encrypting-data-with-ssh-keys-and-golang/</guid><description>原文</description></item></channel></rss>