<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>GDT on jdxj</title><link>https://jdxj.github.io/tags/gdt/</link><description>Recent content in GDT on jdxj</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 01 Sep 2023 12:33:21 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/tags/gdt/index.xml" rel="self" type="application/rss+xml"/><item><title>保护模式</title><link>https://jdxj.github.io/posts/articles/jdxj/x86/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/</link><pubDate>Fri, 01 Sep 2023 12:33:21 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/x86/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/</guid><description>全局描述符表 在保护模式下，对内存的访问仍然使用段地址和偏移地址，但是，在每个段能够访问之前，必须先进行登记。 当你访问的偏移地址超出段的界限时</description></item></channel></rss>