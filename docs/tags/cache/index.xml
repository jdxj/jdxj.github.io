<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>cache on jdxj</title><link>https://jdxj.github.io/tags/cache/</link><description>Recent content in cache on jdxj</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 27 Nov 2023 19:23:31 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/tags/cache/index.xml" rel="self" type="application/rss+xml"/><item><title>避免缓存雪崩 击穿 穿透</title><link>https://jdxj.github.io/posts/articles/xiaolincoding/%E9%81%BF%E5%85%8D%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</link><pubDate>Mon, 27 Nov 2023 19:23:31 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/xiaolincoding/%E9%81%BF%E5%85%8D%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</guid><description>原文</description></item><item><title>Golang本地缓存选型对比及原理总结</title><link>https://jdxj.github.io/posts/articles/weixin/golang%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94%E5%8F%8A%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 25 Jun 2023 20:09:23 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/golang%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94%E5%8F%8A%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</guid><description>原文 比较的库 freecache bigcache fastcache offheap groupcache ristretto go-cache 实现零GC的方案 无GC：分配堆外内存(Mmap) 避免GC：map非指针优化(map[uint64]uint32)或</description></item><item><title>CPU缓存</title><link>https://jdxj.github.io/posts/articles/jdxj/cpu%E7%BC%93%E5%AD%98/</link><pubDate>Tue, 20 Jun 2023 19:54:09 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/cpu%E7%BC%93%E5%AD%98/</guid><description>三级缓存要比一、二级缓存大许多倍，这是因为当下的 CPU 都是多核心的，每个核心都有自己的一、二级缓存，但三级缓存却是一颗 CPU 上所有核心共享的。 CPU 会区</description></item><item><title>缓存更新的套路</title><link>https://jdxj.github.io/posts/articles/coolshell/%E7%BC%93%E5%AD%98%E6%9B%B4%E6%96%B0%E7%9A%84%E5%A5%97%E8%B7%AF/</link><pubDate>Tue, 13 Jun 2023 13:07:26 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/coolshell/%E7%BC%93%E5%AD%98%E6%9B%B4%E6%96%B0%E7%9A%84%E5%A5%97%E8%B7%AF/</guid><description>原文 更新缓存的的Design Pattern有四种： Cache aside Read through Write through Write behind caching</description></item><item><title>缓存与数据库一致性问题深度剖析</title><link>https://jdxj.github.io/posts/articles/cnblogs/rude3knife/%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</link><pubDate>Thu, 16 Feb 2023 16:32:16 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/cnblogs/rude3knife/%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</guid><description>原文</description></item></channel></rss>