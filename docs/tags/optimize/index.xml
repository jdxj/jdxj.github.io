<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>optimize on jdxj</title><link>https://jdxj.github.io/tags/optimize/</link><description>Recent content in optimize on jdxj</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 24 Sep 2023 14:57:29 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/tags/optimize/index.xml" rel="self" type="application/rss+xml"/><item><title>cpu优化</title><link>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/cpu%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 24 Sep 2023 14:57:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/cpu%E4%BC%98%E5%8C%96/</guid><description>CPU 性能指标 性能工具 迅速分析 CPU 的性能瓶颈</description></item><item><title>sar</title><link>https://jdxj.github.io/posts/cmd/sar/</link><pubDate>Sun, 24 Sep 2023 14:29:39 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sar/</guid><description>系统活动报告工具，既可以实时查看系统的当前活动，又可以配置保存和报告历史统计数据</description></item><item><title>hping3</title><link>https://jdxj.github.io/posts/cmd/hping3/</link><pubDate>Sun, 24 Sep 2023 14:17:04 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/hping3/</guid><description>构造 TCP/IP 协议数据包的工具，可以对系统进行安全审计、防火墙测试等</description></item><item><title>strace</title><link>https://jdxj.github.io/posts/cmd/strace/</link><pubDate>Sun, 24 Sep 2023 12:38:19 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/strace/</guid><description>跟踪进程系统调用的工具</description></item><item><title>dstat</title><link>https://jdxj.github.io/posts/cmd/dstat/</link><pubDate>Sun, 24 Sep 2023 12:32:34 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/dstat/</guid><description>它吸收了 vmstat、iostat、ifstat 等几种工具的优点，可以同时观察系统的 CPU、磁盘 I/O、网络以及内存使用情况。</description></item><item><title>execsnoop</title><link>https://jdxj.github.io/posts/cmd/execsnoop/</link><pubDate>Sun, 24 Sep 2023 10:56:53 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/execsnoop/</guid><description>是一个专为短时进程设计的工具。它通过 ftrace 实时监控进程的 exec() 行为，并输出短时进程的基本信息，包括进程 PID、父进程 PID、命令行参数以及执行的结果。</description></item><item><title>pstree</title><link>https://jdxj.github.io/posts/cmd/pstree/</link><pubDate>Sun, 24 Sep 2023 10:45:57 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/pstree/</guid><description>用树状形式显示所有进程之间的关系</description></item><item><title>iostat</title><link>https://jdxj.github.io/posts/cmd/iostat/</link><pubDate>Sat, 23 Sep 2023 08:33:21 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/iostat/</guid><description/></item><item><title>tcpdump</title><link>https://jdxj.github.io/posts/cmd/tcpdump/</link><pubDate>Sat, 17 Jun 2023 12:14:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/tcpdump/</guid><description>-D 列举所有网卡设备 -i 选择网卡设备 -c 抓取多少条报文 &amp;ndash;time-stamp-precision 指定捕获时的时间精度, 默认micro, 可选nano -s 指定每条报文的最大字节数, 默认2621</description></item><item><title>ps</title><link>https://jdxj.github.io/posts/cmd/ps/</link><pubDate>Mon, 24 Apr 2023 14:57:08 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ps/</guid><description>1 2 3 4 $ ps aux | grep /app root 4009 0.0 0.0 4376 1008 pts/0 Ss+ 05:51 0:00 /app root 4287 0.6 0.4 37280 33660 pts/0 D+ 05:54 0:00 /app root 4288 0.6 0.4 37280 33668 pts/0 D+ 05:54 0:00 /app s 表示这个进程是一个会话的领导进程，而 + 表示前台进程组</description></item><item><title>cat</title><link>https://jdxj.github.io/posts/cmd/cat/</link><pubDate>Mon, 24 Apr 2023 14:56:23 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/cat/</guid><description>1 2 3 4 5 6 7 # 查看中断情况 # -d 参数表示高亮显示变化的区域 $ watch -d cat /proc/interrupts CPU0 CPU1 ... RES: 2450431 5279697 Rescheduling interrupts ...</description></item><item><title>ab</title><link>https://jdxj.github.io/posts/cmd/ab/</link><pubDate>Fri, 21 Apr 2023 18:33:33 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ab/</guid><description>apache bench是一个常用的 HTTP 服务性能测试工具</description></item><item><title>perf</title><link>https://jdxj.github.io/posts/cmd/perf/</link><pubDate>Fri, 21 Apr 2023 18:17:21 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/perf/</guid><description>是Linux2.6.31以后内置的性能分析工具。它以性能事件采样为基础，不仅可以分析系统的各种事件和内核性能，还可以用来分析指定应用程序的性能问题。</description></item><item><title>sysbench</title><link>https://jdxj.github.io/posts/cmd/sysbench/</link><pubDate>Thu, 20 Apr 2023 11:31:53 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sysbench/</guid><description>一个多线程的基准测试工具，一般用来评估不同系统参数下的数据库负载情况</description></item><item><title>pidstat</title><link>https://jdxj.github.io/posts/cmd/pidstat/</link><pubDate>Thu, 20 Apr 2023 11:18:02 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/pidstat/</guid><description>一个常用的进程性能分析工具，用来实时查看进程的CPU、内存、I/O以及上下文切换等性能指标</description></item><item><title>mpstat</title><link>https://jdxj.github.io/posts/cmd/mpstat/</link><pubDate>Thu, 20 Apr 2023 11:14:42 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/mpstat/</guid><description>一个常用的多核CPU性能分析工具，用来实时查看每个CPU的性能指标，以及所有CPU的平均指标</description></item><item><title>vmstat</title><link>https://jdxj.github.io/posts/cmd/vmstat/</link><pubDate>Thu, 20 Apr 2023 11:07:18 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/vmstat/</guid><description>一个常用的系统性能分析工具，主要用来分析系统的内存使用情况，也常用来分析CPU上下文切换和中断的次数</description></item><item><title>stress</title><link>https://jdxj.github.io/posts/cmd/stress/</link><pubDate>Thu, 20 Apr 2023 09:55:35 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/stress/</guid><description>Linux系统压力测试工具</description></item><item><title>top</title><link>https://jdxj.github.io/posts/cmd/top/</link><pubDate>Tue, 18 Apr 2023 17:04:27 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/top/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 # 默认每3秒刷新一次 $ top top - 11:58:59 up 9 days, 22:47, 1 user, load average: 0.03, 0.02, 0.00 Tasks: 123 total, 1 running, 72 sleeping, 0 stopped, 0 zombie %Cpu(s): 0.3 us, 0.3 sy, 0.0 ni, 99.3 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st KiB Mem :</description></item><item><title>watch</title><link>https://jdxj.github.io/posts/cmd/watch/</link><pubDate>Tue, 18 Apr 2023 17:02:58 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/watch/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 # 观察软中断变化速率 $ watch -d cat /proc/softirqs CPU0 CPU1 HI: 0 0 TIMER: 1083906 2368646 NET_TX: 53 9 NET_RX: 1550643 1916776 BLOCK: 0 0 IRQ_POLL: 0 0 TASKLET: 333637 3930 SCHED: 963675 2293171 HRTIMER: 0 0 RCU: 1542111 1590625</description></item><item><title>uptime</title><link>https://jdxj.github.io/posts/cmd/uptime/</link><pubDate>Wed, 28 Dec 2022 14:48:50 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/uptime/</guid><description> 1 2 $ uptime 08:38:29 up 37 min, 1 user, load average: 1.20, 1.25, 1.18</description></item></channel></rss>