<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Content on jdxj</title><link>https://jdxj.github.io/</link><description>Recent content in Content on jdxj</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 20 Dec 2022 11:14:03 +0800</lastBuildDate><atom:link href="https://jdxj.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>第2章 C语言基本概念</title><link>https://jdxj.github.io/posts/books/c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E7%AC%AC2%E7%AB%A0-c%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link><pubDate>Fri, 30 Jun 2023 16:27:01 +0800</pubDate><guid>https://jdxj.github.io/posts/books/c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E7%AC%AC2%E7%AB%A0-c%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid><description>2.1 编写一个简单的C程序 1 2 3 4 5 6 #include &amp;lt;stdio.h&amp;gt; int main(void) { printf(&amp;#34;To C, or not to C: that is the question.\n&amp;#34;); return 0; } 2.1.1 编译和链接 对于C程序来说, 把程序转化为机器可以执行的形式通常包含下列</description></item><item><title>第1章 C语言概述</title><link>https://jdxj.github.io/posts/books/c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E7%AC%AC1%E7%AB%A0-c%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</link><pubDate>Fri, 30 Jun 2023 16:20:08 +0800</pubDate><guid>https://jdxj.github.io/posts/books/c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E7%AC%AC1%E7%AB%A0-c%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</guid><description>1.1 C语言的历史 1.1.1 起源 Unix一开始是用汇编写的 C语言基于B语言 1.1.2 标准化 经典C: The C Programming Language, K&amp;amp;R C89或C90: ANSI标准X3.159-1989,</description></item><item><title>Go 大杀器之性能剖析 PProf（上）</title><link>https://jdxj.github.io/posts/articles/eddycjy/pprof/</link><pubDate>Tue, 27 Jun 2023 20:29:54 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/eddycjy/pprof/</guid><description>原文</description></item><item><title>profile</title><link>https://jdxj.github.io/posts/articles/pkg/profile/</link><pubDate>Tue, 27 Jun 2023 19:58:29 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/pkg/profile/</guid><description>Simple profiling support package for Go</description></item><item><title>Golang中的热重启</title><link>https://jdxj.github.io/posts/articles/weixin/golang%E4%B8%AD%E7%9A%84%E7%83%AD%E9%87%8D%E5%90%AF/</link><pubDate>Sun, 25 Jun 2023 21:35:58 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/golang%E4%B8%AD%E7%9A%84%E7%83%AD%E9%87%8D%E5%90%AF/</guid><description>原文 热重启的原理 监听重启信号； 收到重启信号时fork子进程，同时需要将服务监听的socket文件描述符传递给子进程； 子进程接收并监听父进程传</description></item><item><title>在 golang 中是如何对 epoll 进行封装的？</title><link>https://jdxj.github.io/posts/articles/weixin/go%E5%B0%81%E8%A3%85epoll/</link><pubDate>Sun, 25 Jun 2023 20:41:59 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/go%E5%B0%81%E8%A3%85epoll/</guid><description>原文 简单来说就是封装非阻塞fd, 用户代码在调用非阻塞fd时, 由go来实现调度, 将本goroutine阻塞, 但是不阻塞该线程.</description></item><item><title>Golang本地缓存选型对比及原理总结</title><link>https://jdxj.github.io/posts/articles/weixin/golang%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94%E5%8F%8A%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 25 Jun 2023 20:09:23 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/golang%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94%E5%8F%8A%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</guid><description>原文 比较的库 freecache bigcache fastcache offheap groupcache ristretto go-cache 实现零GC的方案 无GC：分配堆外内存(Mmap) 避免GC：map非指针优化(map[uint64]uint32)或</description></item><item><title>跟踪远程分支</title><link>https://jdxj.github.io/posts/cmd/git/%E8%B7%9F%E8%B8%AA%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</link><pubDate>Fri, 23 Jun 2023 14:42:18 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E8%B7%9F%E8%B8%AA%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</guid><description>第一种方法 1 2 $ git checkout -b foo o/main $ git pull/push 第二种方法 1 2 3 $ git branch -u o/main foo $ git commit $ git push</description></item><item><title>获取远程更新</title><link>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%96%B0/</link><pubDate>Fri, 23 Jun 2023 13:51:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%96%B0/</guid><description>git pull是git fetch; git merge的缩写 git pull --rebase是git fetch; git rebase的缩写</description></item><item><title>获取指定提交到当前分支</title><link>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E6%8F%90%E4%BA%A4%E5%88%B0%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF/</link><pubDate>Fri, 23 Jun 2023 12:00:41 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E6%8F%90%E4%BA%A4%E5%88%B0%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF/</guid><description>1 $ git cherry-pick &amp;lt;commit-id&amp;gt;...</description></item><item><title>撤销变更</title><link>https://jdxj.github.io/posts/cmd/git/%E6%92%A4%E9%94%80%E5%8F%98%E6%9B%B4/</link><pubDate>Fri, 23 Jun 2023 11:47:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E6%92%A4%E9%94%80%E5%8F%98%E6%9B%B4/</guid><description>reset 回退一步 revert 生成新commit来还原</description></item><item><title>移动分支头</title><link>https://jdxj.github.io/posts/cmd/git/%E7%A7%BB%E5%8A%A8%E5%88%86%E6%94%AF%E5%A4%B4/</link><pubDate>Fri, 23 Jun 2023 11:40:42 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E7%A7%BB%E5%8A%A8%E5%88%86%E6%94%AF%E5%A4%B4/</guid><description>1 $ git branch -f &amp;lt;branch-name&amp;gt; &amp;lt;commit-id&amp;gt;</description></item><item><title>优化TLS</title><link>https://jdxj.github.io/posts/articles/jdxj/%E4%BC%98%E5%8C%96tls/</link><pubDate>Thu, 22 Jun 2023 19:20:42 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E4%BC%98%E5%8C%96tls/</guid><description>提升对称加密算法的性能 AES 是我们的首选对称加密算法 AES 只支持 3 种不同的密钥长度，分别是 128 位、192 位和 256 位，它们的安全性依次升高，运算时间也更长</description></item><item><title>随机数生成</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/</link><pubDate>Thu, 22 Jun 2023 14:10:38 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/</guid><description>Go密码学包crypto/rand提供了密码学级别的随机数生成器实现rand.Reader，在不同平台上rand.Reader使用的数据源有</description></item><item><title>数字签名</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</link><pubDate>Thu, 22 Jun 2023 13:55:03 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</guid><description>消息认证码虽然解决了消息发送者的身份认证问题，但由于采用消息认证码的通信双方共享密钥，因此对于一条通过了MAC验证的消息，通信双方依旧无法向</description></item><item><title>消息认证码</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81/</link><pubDate>Thu, 22 Jun 2023 13:45:53 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81/</guid><description>单向散列函数虽然能辨别出数据是否被篡改，但却无法辨别出数据是不是伪装的。因此，在这样的场合下，我们还需要对消息进行认证（Authentica</description></item><item><title>单向散列函数</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</link><pubDate>Thu, 22 Jun 2023 13:37:57 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E5%8D%95%E5%90%91%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0/</guid><description>除了输出长度固定、计算快速之外，密码学级别的单向散列函数还具有如下性质 强抗碰撞性：要找到散列值（摘要值）相同的两条不同的消息是非常困难的。 单</description></item><item><title>公钥密码</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81/</link><pubDate>Thu, 22 Jun 2023 12:49:30 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81/</guid><description>常见的密钥配送方案有事先共享密钥（事先以安全的方式将密钥交给通信方）、密钥分配中心（每个通信方要事先与密钥分配中心共享密钥）、Diffie-</description></item><item><title>分组密码算法</title><link>https://jdxj.github.io/posts/articles/jdxj/go/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 22 Jun 2023 01:07:56 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%AE%97%E6%B3%95/</guid><description>密码算法可以分为分组密码（block cipher）和流密码（stream cipher）两种。 分组密码是一种一次仅能处理固定长度数据块的算法。</description></item><item><title>Go密码学包</title><link>https://jdxj.github.io/posts/articles/jdxj/go/go%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8C%85/</link><pubDate>Thu, 22 Jun 2023 00:46:40 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/go/go%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8C%85/</guid><description>官方crypto包 src/crypto golang.org/x/crypto 分类 分组密码 cipher 五种分组模式 ECB CBC CFB OFB CTR des 对称密码 DES TDEA aes 对称密码 AES 公钥密码 tls TLS 1.2 TLS 1.3 x509 编码格式的密钥和证书的解析 rsa RSA elliptic 标准</description></item><item><title>TCP缓冲区</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E7%BC%93%E5%86%B2%E5%8C%BA/</link><pubDate>Wed, 21 Jun 2023 23:10:17 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E7%BC%93%E5%86%B2%E5%8C%BA/</guid><description>滑动窗口是怎样影响传输速度的？ TCP 报文发出去后，并不能立刻从内存中删除，因为重发时还需要用到它。由于 TCP 是由内核实现的，所以报文存放在内核缓冲区</description></item><item><title>事件驱动</title><link>https://jdxj.github.io/posts/articles/jdxj/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/</link><pubDate>Wed, 21 Jun 2023 13:03:10 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/</guid><description>事件是怎么产生的？ 读事件表示有到达的消息需要处理 写事件表示可以发送消息（TCP 连接的写缓冲区中有可用空间）。 tcp握手 在建立好的 TCP 连接上收发</description></item><item><title>一对多通讯</title><link>https://jdxj.github.io/posts/articles/jdxj/%E4%B8%80%E5%AF%B9%E5%A4%9A%E9%80%9A%E8%AE%AF/</link><pubDate>Wed, 21 Jun 2023 12:31:18 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E4%B8%80%E5%AF%B9%E5%A4%9A%E9%80%9A%E8%AE%AF/</guid><description>分布式系统的服务发现，使用人工配置既容易出错，速度也慢，而用广播就可以轻松实现自动化服务发现。 广播是怎么实现的？ 广播要改用 UDP 协议 网络设备天然</description></item><item><title>锁</title><link>https://jdxj.github.io/posts/articles/jdxj/%E9%94%81/</link><pubDate>Wed, 21 Jun 2023 11:20:01 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E9%94%81/</guid><description>互斥锁 当你无法判断锁住的代码会执行多久时，应该首选互斥锁 对于 99% 的线程级互斥锁而言，阻塞都是由操作系统内核实现的 线程获取锁失败时，增加了两次上</description></item><item><title>协程</title><link>https://jdxj.github.io/posts/articles/jdxj/%E5%8D%8F%E7%A8%8B/</link><pubDate>Wed, 21 Jun 2023 10:02:01 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E5%8D%8F%E7%A8%8B/</guid><description>无论基于多进程还是多线程，都难以实现高并发，这由两个原因所致 单个线程消耗的内存过多，比如，64 位的 Linux 为每个线程的栈分配了 8MB 的内存，还预分配了</description></item><item><title>DMA零拷贝技术</title><link>https://jdxj.github.io/posts/articles/zhihu/dma/</link><pubDate>Wed, 21 Jun 2023 00:18:03 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/zhihu/dma/</guid><description>原文 你可以在你的 Linux 系统通过下面这个命令，查看网卡是否支持 scatter-gather 特性： 1 $ ethtool -k eth0 | grep scatter-gather scatter-gather: on</description></item><item><title>零拷贝</title><link>https://jdxj.github.io/posts/articles/jdxj/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</link><pubDate>Tue, 20 Jun 2023 23:32:32 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</guid><description>// todo: 用go整一个 在内核态和用户态之间来回切换 要想提升传输文件的性能，需要从降低上下文切换的频率和内存拷贝次数两个方向入手。 零拷贝如何提升文件</description></item><item><title>索引</title><link>https://jdxj.github.io/posts/articles/jdxj/%E7%B4%A2%E5%BC%95/</link><pubDate>Tue, 20 Jun 2023 23:05:17 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E7%B4%A2%E5%BC%95/</guid><description>索引有很多，哈希表、红黑树、B 树都可以在内存中使用，如果我们需要数据规模上亿后还能提供微秒级的访问速度，那么作为最快的索引，哈希表是第一选择</description></item><item><title>内存分配</title><link>https://jdxj.github.io/posts/articles/jdxj/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</link><pubDate>Tue, 20 Jun 2023 22:28:08 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</guid><description>内存申请流程 几乎所有程序都在使用 C 库内存池分配出的内存。C 库内存池影响着系统下依赖它的所有进程。 // todo: go 如何向系统申请内存? 选择 Ptmalloc2 还是 TCMa</description></item><item><title>CPU缓存</title><link>https://jdxj.github.io/posts/articles/jdxj/cpu%E7%BC%93%E5%AD%98/</link><pubDate>Tue, 20 Jun 2023 19:54:09 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/cpu%E7%BC%93%E5%AD%98/</guid><description>三级缓存要比一、二级缓存大许多倍，这是因为当下的 CPU 都是多核心的，每个核心都有自己的一、二级缓存，但三级缓存却是一颗 CPU 上所有核心共享的。 CPU 会区</description></item><item><title>DDD中聚合、聚合根的含义以及作用</title><link>https://jdxj.github.io/posts/articles/courage129/ddd%E8%81%9A%E5%90%88/</link><pubDate>Tue, 20 Jun 2023 14:07:30 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/courage129/ddd%E8%81%9A%E5%90%88/</guid><description>原文 聚合 让实体和值对象协同工作的组织就是聚合, 它用来确保这些领域对象在实现共同的业务逻辑时，能保证数据的一致性。 聚合根 如果把聚合比作组织，那</description></item><item><title>DDD中实体与值对象是干什么的</title><link>https://jdxj.github.io/posts/articles/courage129/ddd%E4%B8%AD%E5%AE%9E%E4%BD%93%E4%B8%8E%E5%80%BC%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%B9%B2%E4%BB%80%E4%B9%88%E7%9A%84/</link><pubDate>Tue, 20 Jun 2023 13:25:51 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/courage129/ddd%E4%B8%AD%E5%AE%9E%E4%BD%93%E4%B8%8E%E5%80%BC%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%B9%B2%E4%BB%80%E4%B9%88%E7%9A%84/</guid><description>原文 实体 实体拥有唯一标识符, 且标识符在经历过各种状态变更后仍能保持一致。对这些对象而言, 重要的不是其属性，而是其延续性和标识，对象的延续性和</description></item><item><title>DDD中限界上下文与通用语言的作用</title><link>https://jdxj.github.io/posts/articles/courage129/ddd%E4%B8%AD%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E9%80%9A%E7%94%A8%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BD%9C%E7%94%A8/</link><pubDate>Tue, 20 Jun 2023 12:32:49 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/courage129/ddd%E4%B8%AD%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%8E%E9%80%9A%E7%94%A8%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BD%9C%E7%94%A8/</guid><description>原文 通用语言确定了项目团队内部交流的统一语言，而这个语言所在的语义环境则是由限界上下文来限定的，以确保语义的唯一性。而领域专家、架构师和开发</description></item><item><title>DDD划分领域、子域、核心域、支撑域的目的</title><link>https://jdxj.github.io/posts/articles/courage129/ddd%E5%88%92%E5%88%86%E9%A2%86%E5%9F%9F/</link><pubDate>Tue, 20 Jun 2023 12:10:11 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/courage129/ddd%E5%88%92%E5%88%86%E9%A2%86%E5%9F%9F/</guid><description>原文 核心域、支撑域和通用域的主要目标是：通过领域划分，区分不同子域在公司内的不同功能属性和重要性，从而公司可对不同子域采取不同的资源投入和建</description></item><item><title>第1章 软件复杂度剖析</title><link>https://jdxj.github.io/posts/books/%E8%A7%A3%E6%9E%84%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E7%AC%AC%E4%B8%80%E7%AF%87-%E5%BC%80%E7%AF%87/%E7%AC%AC1%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%89%96%E6%9E%90/</link><pubDate>Mon, 19 Jun 2023 19:33:05 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%A7%A3%E6%9E%84%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E7%AC%AC%E4%B8%80%E7%AF%87-%E5%BC%80%E7%AF%87/%E7%AC%AC1%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%89%96%E6%9E%90/</guid><description>1.1 什么是复杂系统 由大量相互作用的部分组成的系统。与整个系统比起来，这些组成部分相对简单，没有中央控制，组成部分之间也没有全局性的通信，并且组</description></item><item><title>Counting Set Bits in an Interesting Way</title><link>https://jdxj.github.io/posts/articles/robalni/counting-set-bits-in-an-interesting-way/</link><pubDate>Mon, 19 Jun 2023 16:41:53 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/robalni/counting-set-bits-in-an-interesting-way/</guid><description>原文 1 2 3 4 5 6 7 8 unsigned popcnt(unsigned x) { unsigned diff = x; while (x) { x &amp;gt;&amp;gt;= 1; diff -= x; } return diff; }</description></item><item><title>Gotchas in the Go Network Packages Defaults</title><link>https://jdxj.github.io/posts/articles/baillie/gotchas-in-the-go-network-packages-defaults/</link><pubDate>Mon, 19 Jun 2023 14:10:11 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/baillie/gotchas-in-the-go-network-packages-defaults/</guid><description>原文 Timeouts Client timeouts 1 2 3 4 5 6 7 8 9 10 c := &amp;amp;http.Client{ Timeout: 5 * time.Second, Transport: &amp;amp;http.Transport{ DialContext: (&amp;amp;net.Dialer{ // This is the TCP connect timeout in this instance. Timeout: 2500 * time.Millisecond, }).DialContext, TLSHandshakeTimeout: 2500 * time.Millisecond, }, } Server timeouts 1 2 3 4 s := &amp;amp;http.Server{ ReadTimeout: 2500 * time.Millisecond, WriteTimeout: 5 * time.Second, } HTTP Response Bodies 1 2</description></item><item><title>Encrypting Data With SSH Keys and Golang</title><link>https://jdxj.github.io/posts/articles/earthly/encrypting-data-with-ssh-keys-and-golang/</link><pubDate>Mon, 19 Jun 2023 13:38:03 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/earthly/encrypting-data-with-ssh-keys-and-golang/</guid><description>原文</description></item><item><title>Don't defer Close() on writable files</title><link>https://jdxj.github.io/posts/articles/joeshaw/dont-defer-close-on-writable-files/</link><pubDate>Mon, 19 Jun 2023 13:11:20 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/joeshaw/dont-defer-close-on-writable-files/</guid><description>原文 Write()为了性能使用异步方式, 操作系统同步数据到磁盘的一个时机在Close(), 如果不捕获可能造成数据丢失. 安全的Close 1 2 3</description></item><item><title>ICMP</title><link>https://jdxj.github.io/posts/articles/jdxj/ip/icmp/</link><pubDate>Sun, 18 Jun 2023 20:05:18 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/ip/icmp/</guid><description/></item><item><title>LVS</title><link>https://jdxj.github.io/posts/articles/jdxj/ip/lvs/</link><pubDate>Sun, 18 Jun 2023 19:19:39 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/ip/lvs/</guid><description>三种工作模式 nat工作模式</description></item><item><title>Nat/Napt</title><link>https://jdxj.github.io/posts/articles/jdxj/ip/nat/</link><pubDate>Sun, 18 Jun 2023 19:18:03 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/ip/nat/</guid><description>nat napt 双向nat nat性能不好</description></item><item><title>ARP/RARP</title><link>https://jdxj.github.io/posts/articles/jdxj/ip/arp/</link><pubDate>Sun, 18 Jun 2023 18:59:19 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/ip/arp/</guid><description>2.5层协议</description></item><item><title>网络层</title><link>https://jdxj.github.io/posts/articles/jdxj/ip/ip/</link><pubDate>Sun, 18 Jun 2023 18:34:08 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/ip/ip/</guid><description>功能 ip寻址 选路 封装打包 分片 如何传输ip报文 直接传输 本地网络间接传输 内部选路协议 RIP OSPF 公网间接传输 外部选路协议 BGP 路由表</description></item><item><title>TCP Keep Alive</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-keep-alive/</link><pubDate>Sun, 18 Jun 2023 16:27:43 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-keep-alive/</guid><description>发送心跳周期 net.ipv4.tcp_keepalive_time = 7200 7200s 没数据交互时, 启动探测 探测包发送间隔 net.ipv4.tcp_keepalive_intvl = 75 探测包重试次数 net.ipv4.tcp_keepalive_probes = 9</description></item><item><title>TCP分手优化</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E5%88%86%E6%89%8B%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 18 Jun 2023 16:17:20 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E5%88%86%E6%89%8B%E4%BC%98%E5%8C%96/</guid><description>net.ipv4.tcp_tw_reuse = 1 开启后, 作为客户端时新连接可以使用仍然处于TIME-WAIT状态的端口 由于timestamp的存在, 操作系统可以拒绝迟到的报文, net.ipv4.tcp_timestamps = 1</description></item><item><title>不建议开启tcp fast open功能</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E4%B8%8D%E5%BB%BA%E8%AE%AE%E5%BC%80%E5%90%AFtfo/</link><pubDate>Sat, 17 Jun 2023 16:37:34 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E4%B8%8D%E5%BB%BA%E8%AE%AE%E5%BC%80%E5%90%AFtfo/</guid><description>原文</description></item><item><title>TCP握手优化</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E6%8F%A1%E6%89%8B%E4%BC%98%E5%8C%96/</link><pubDate>Sat, 17 Jun 2023 14:48:40 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E6%8F%A1%E6%89%8B%E4%BC%98%E5%8C%96/</guid><description>延长syn, accept队列 应用层connect超时时间 操作系统内核 服务器端syn_rcv状态 net.ipv4.tcp_max_syn_backlog: syn_rcvd状态连接的最大个数 net.ipv4.tcp_synack_retries: 被动建立</description></item><item><title>Berkeley Packet Filters</title><link>https://jdxj.github.io/posts/articles/ibm/berkeley-packet-filters/</link><pubDate>Sat, 17 Jun 2023 12:23:28 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/ibm/berkeley-packet-filters/</guid><description>原文</description></item><item><title>tcpdump</title><link>https://jdxj.github.io/posts/cmd/tcpdump/</link><pubDate>Sat, 17 Jun 2023 12:14:07 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/tcpdump/</guid><description>-D 列举所有网卡设备 -i 选择网卡设备 -c 抓取多少条报文 &amp;ndash;time-stamp-precision 指定捕获时的时间精度, 默认micro, 可选nano -s 指定每条报文的最大字节数, 默认2621</description></item><item><title>UDP Header</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/udp-header/</link><pubDate>Sat, 17 Jun 2023 11:23:15 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/udp-header/</guid><description/></item><item><title>IP Header</title><link>https://jdxj.github.io/posts/articles/jdxj/ip/ip-header/</link><pubDate>Sat, 17 Jun 2023 11:10:16 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/ip/ip-header/</guid><description>IPv4 Header IHL 头部长度, word(4byte) TL 总长度, byte Id 分片表示 Flags 分片控制 DF = 1 不能分片 MF = 1 中间分片 FO 分片内偏移, 8byte TTL 路由器跳数生存期 Protocol 承载协议 HC 校验和</description></item><item><title>TCP/IP协议层</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-ip%E5%88%86%E5%B1%82/</link><pubDate>Sat, 17 Jun 2023 10:47:33 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-ip%E5%88%86%E5%B1%82/</guid><description/></item><item><title>程序员进阶</title><link>https://jdxj.github.io/posts/articles/it-blog-cn/</link><pubDate>Wed, 14 Jun 2023 12:26:47 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/it-blog-cn/</guid><description>主页</description></item><item><title>使用随机端口</title><link>https://jdxj.github.io/posts/articles/learnku/%E4%BD%BF%E7%94%A8%E9%9A%8F%E6%9C%BA%E7%AB%AF%E5%8F%A3/</link><pubDate>Wed, 14 Jun 2023 12:07:06 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/learnku/%E4%BD%BF%E7%94%A8%E9%9A%8F%E6%9C%BA%E7%AB%AF%E5%8F%A3/</guid><description>原文 listen的地址填:0</description></item><item><title>缓存更新的套路</title><link>https://jdxj.github.io/posts/articles/coolshell/%E7%BC%93%E5%AD%98%E6%9B%B4%E6%96%B0%E7%9A%84%E5%A5%97%E8%B7%AF/</link><pubDate>Tue, 13 Jun 2023 13:07:26 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/coolshell/%E7%BC%93%E5%AD%98%E6%9B%B4%E6%96%B0%E7%9A%84%E5%A5%97%E8%B7%AF/</guid><description>原文 更新缓存的的Design Pattern有四种： Cache aside Read through Write through Write behind caching</description></item><item><title>Trie树</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/trie%E6%A0%91/</link><pubDate>Tue, 13 Jun 2023 11:06:55 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/trie%E6%A0%91/</guid><description>Trie 树，也叫“字典树” how，hi，her，hello，so，see组成的trie树 存储结构 1 2 3 4 class TrieNode { char data; TrieNode children[26]; } 1 2 3 4 5 6 7 8 9 10 11 12 13</description></item><item><title>图</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%9B%BE/</link><pubDate>Mon, 12 Jun 2023 17:00:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%9B%BE/</guid><description>Graph</description></item><item><title>堆</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%A0%86/</link><pubDate>Mon, 12 Jun 2023 16:24:58 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%A0%86/</guid><description>堆排序是一种原地的、时间复杂度为 O(nlogn) 的排序算法。 堆是一个完全二叉树； 堆中每一个节点的值都必须大于等于（或小于等于）其子树中每个节点的值。 用数组</description></item><item><title>递归树</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%80%92%E5%BD%92%E6%A0%91/</link><pubDate>Mon, 12 Jun 2023 15:38:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%80%92%E5%BD%92%E6%A0%91/</guid><description>一棵斐波那契数列的递归树 归并排序递归树 因为每次分解都是一分为二，所以代价很低，我们把时间上的消耗记作常量 1。 我们只需要知道这棵树的高度 h，用</description></item><item><title>二叉树</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Mon, 12 Jun 2023 14:13:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>链式存储法 基于数组的顺序存储法 左子节点: 2*i 右子节点: 2*i+1 遍历 前序遍历是指，对于树中的任意节点来说，先打印这个节点，然后再打印它的左子树，最后打</description></item><item><title>散列表</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%95%A3%E5%88%97%E8%A1%A8/</link><pubDate>Mon, 12 Jun 2023 11:58:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%95%A3%E5%88%97%E8%A1%A8/</guid><description>散列表用的是数组支持按照下标随机访问数据的特性，所以散列表其实就是数组的一种扩展，由数组演化而来。 散列函数设计的基本要求 散列函数计算得到的散</description></item><item><title>跳表</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E8%B7%B3%E8%A1%A8/</link><pubDate>Mon, 12 Jun 2023 11:13:35 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E8%B7%B3%E8%A1%A8/</guid><description>Skip List</description></item><item><title>二分查找</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Mon, 12 Jun 2023 10:52:33 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>Binary Search</description></item><item><title>基数排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Jun 2023 14:39:19 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</guid><description>Radix Sort</description></item><item><title>计数排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Jun 2023 14:28:09 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/</guid><description>Counting Sort</description></item><item><title>桶排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%A1%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Jun 2023 14:22:09 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%A1%B6%E6%8E%92%E5%BA%8F/</guid><description>Bucket Sort</description></item><item><title>快速排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Jun 2023 12:37:06 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid><description>Quicksort</description></item><item><title>归并排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Jun 2023 11:36:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid><description>Merge Sort</description></item><item><title>Channel</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/channel/</link><pubDate>Fri, 09 Jun 2023 11:49:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/channel/</guid><description>Channel 的应用场景 数据交流：当作并发的 buffer 或者 queue，解决生产者 - 消费者问题。多个 goroutine 可以并发当作生产者（Producer）和消费者（Consum</description></item><item><title>Atomic</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/atomic/</link><pubDate>Tue, 06 Jun 2023 22:50:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/atomic/</guid><description>对于无符号的整数和 uinptr 类型来说，怎么实现减去一个值呢？ 1 AddUint32(&amp;amp;x, ^uint32(c-1)). CAS (CompareAndSwap) 1 func CompareAndSwapInt32(addr *int32, old, new int32) (swapped bool) Lock-Free queue 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28</description></item><item><title>熔断</title><link>https://jdxj.github.io/posts/articles/oschina/%E7%86%94%E6%96%AD/</link><pubDate>Tue, 06 Jun 2023 22:33:05 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/oschina/%E7%86%94%E6%96%AD/</guid><description>原文</description></item><item><title>Context</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/context/</link><pubDate>Tue, 06 Jun 2023 18:32:59 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/context/</guid><description>在使用 Context 的时候，有一些约定俗成的规则。 一般函数使用 Context 的时候，会把这个参数放在第一个参数的位置。 从来不把 nil 当做 Context 类型的参数值，可以使用 context.Background() 创建一</description></item><item><title>中介模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E4%B8%AD%E4%BB%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 14:22:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E4%B8%AD%E4%BB%8B%E6%A8%A1%E5%BC%8F/</guid><description>Mediator Pattern</description></item><item><title>解释器模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 14:16:12 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid><description>Interpreter Pattern</description></item><item><title>命令模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 13:41:20 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</guid><description>Command Pattern</description></item><item><title>备忘录模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 13:18:23 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</guid><description>Memento Pattern</description></item><item><title>访问者模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 12:52:39 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>Visitor Pattern</description></item><item><title>迭代器模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 12:15:27 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid><description>Iterator Pattern</description></item><item><title>状态模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 11:47:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</guid><description>Stat Pattern</description></item><item><title>职责链模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 11:23:49 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</guid><description>Chain of Responsibility Pattern</description></item><item><title>策略模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 10:52:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid><description>Strategy Pattern</description></item><item><title>模板模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 06 Jun 2023 10:42:03 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</guid><description>Template Method</description></item><item><title>Pool</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/pool/</link><pubDate>Tue, 06 Jun 2023 00:16:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/pool/</guid><description>sync.Pool 数据类型用来保存一组可独立访问的临时对象。 sync.Pool 本身就是线程安全的 sync.Pool 不可在使用之后再复制使用 Get 方法的返回值还可能会是一个 nil（Pool.Ne</description></item><item><title>观察者模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 15:45:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A1%8C%E4%B8%BA%E5%9E%8B/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>Observer Pattern</description></item><item><title>享元模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 15:18:16 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</guid><description>Flyweight Pattern</description></item><item><title>组合模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 15:06:22 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</guid><description>Composite Pattern</description></item><item><title>外观/门面模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 14:50:58 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F/</guid><description>Facade Pattern</description></item><item><title>适配器模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 13:18:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid><description>Adapter Pattern</description></item><item><title>装饰器模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 12:37:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid><description>Decorator Pattern</description></item><item><title>桥接模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 11:18:27 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</guid><description>Bridge Pattern</description></item><item><title>代理模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 05 Jun 2023 10:50:51 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid><description>Proxy Pattern</description></item><item><title>Redis中常见的四种统计模式</title><link>https://jdxj.github.io/posts/articles/jdxj/redis/redis%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Sun, 04 Jun 2023 23:23:45 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/redis/redis%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>聚合统计 集合的交, 差, 并集 SUNIONSTORE SDIFFSTORE SINTERSTORE 这些命令复杂度较高 排序统计 可以使用sorted set保证分页时, 元素不会串 ZRANGEBYSCORE 二值状态统计 bitmap SETBIT BITOP BITCOUNT 基数统计 指统</description></item><item><title>过多的使用String键会造成内存浪费</title><link>https://jdxj.github.io/posts/articles/jdxj/redis/%E9%81%BF%E5%85%8D%E8%BF%87%E5%A4%9A%E4%BD%BF%E7%94%A8string/</link><pubDate>Sun, 04 Jun 2023 19:45:35 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/redis/%E9%81%BF%E5%85%8D%E8%BF%87%E5%A4%9A%E4%BD%BF%E7%94%A8string/</guid><description>占用内存的元数据过多 全局hash表一个项是dictEntry 封装底层编码的RedisObject 如果想节约内存, 可以考虑使用底层编码为zip</description></item><item><title>Go 1.18 泛型全面讲解：一篇讲清泛型的全部</title><link>https://jdxj.github.io/posts/articles/segmentfault/go-generics/</link><pubDate>Sun, 04 Jun 2023 15:54:05 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/segmentfault/go-generics/</guid><description>原文</description></item><item><title>map</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/map/</link><pubDate>Sun, 04 Jun 2023 15:16:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/map/</guid><description>key必须是可比较的 不可比较的类型 如果 struct 的某个字段值修改了，查询 map 时无法获取它 add 进去的值 有序的map orderedmap 不能并发读写 实现线程安全map 加读写锁</description></item><item><title>选择排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link><pubDate>Sun, 04 Jun 2023 14:05:50 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid><description>Selection Sort</description></item><item><title>插入排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link><pubDate>Sun, 04 Jun 2023 13:27:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid><description>Insertion Sort</description></item><item><title>冒泡排序</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link><pubDate>Sun, 04 Jun 2023 12:29:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid><description>Bubble Sort</description></item><item><title>如何分析排序算法</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 04 Jun 2023 12:21:41 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>排序算法的执行效率 最好情况、最坏情况、平均情况时间复杂度 时间复杂度的系数、常数 、低阶 比较次数和交换（或移动）次数 排序算法的内存消耗 原地排序 排</description></item><item><title>原型模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Sun, 04 Jun 2023 10:12:53 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid><description>Prototype Pattern</description></item><item><title>建造者模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Sun, 04 Jun 2023 09:30:48 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>Builder Pattern</description></item><item><title>工厂模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 03 Jun 2023 18:12:51 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid><description>Factory Pattern</description></item><item><title>Once</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/once/</link><pubDate>Tue, 30 May 2023 15:12:18 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/once/</guid><description>Once 的使用场景 1 func (o *Once) Do(f func()) Once 常常用来初始化单例资源，或者并发访问只需初始化一次的共享资源，或者在测试的时候初始化一次测试资源。 如何实现一个 On</description></item><item><title>Cond 条件变量</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/cond/</link><pubDate>Tue, 30 May 2023 12:49:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/cond/</guid><description>Go 标准库提供 Cond 原语的目的是，为等待/通知场景下的并发问题提供支持。 Cond 的基本用法 1 2 3 4 5 type Cond func NeWCond(l Locker) *Cond func (c *Cond) Broadcast() func (c *Cond) Signal() func (c *Cond) Wait() Cond 关联的 Locker 实例可</description></item><item><title>递归</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%80%92%E5%BD%92/</link><pubDate>Mon, 29 May 2023 18:11:59 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%80%92%E5%BD%92/</guid><description>递归需要满足的三个条件 一个问题的解可以分解为几个子问题的解 这个问题与分解之后的子问题，除了数据规模不同，求解思路完全一样 存在递归终止条件 注意</description></item><item><title>单例模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 29 May 2023 15:20:14 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid><description>Singleton Pattern</description></item><item><title>WaitGroup</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/waitgroup/</link><pubDate>Fri, 26 May 2023 17:23:30 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/waitgroup/</guid><description>WaitGroup 的实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type WaitGroup struct { // 避免复制使用的一个技巧，可以告诉vet工具违反了复制使用的规则 noCopy noCopy // 64bit(8</description></item><item><title>队列</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%98%9F%E5%88%97/</link><pubDate>Fri, 26 May 2023 15:49:38 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%98%9F%E5%88%97/</guid><description>先进者先出，这就是典型的“队列”。 循环队列 要想写出没有 bug 的循环队列的实现代码最关键的是，确定好队空和队满的判定条件。 队空 head == tail 队满 head == (tail+1)%n 阻塞</description></item><item><title>栈</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%A0%88/</link><pubDate>Fri, 26 May 2023 15:29:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%A0%88/</guid><description>栈是一种“操作受限”的线性表</description></item><item><title>规范</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%A7%84%E8%8C%83/</link><pubDate>Thu, 25 May 2023 23:24:45 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%A7%84%E8%8C%83/</guid><description>命名 命名长度 作用域大的长点 作用域小的短点 利用上下文简化命令 属性名可以不加user 1 2 3 4 5 6 public class User { private String userName; private String userPassword; private String userAvatarUrl; //... } 函数参数 1 2 3 public void</description></item><item><title>重构</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%87%8D%E6%9E%84/</link><pubDate>Wed, 24 May 2023 18:51:38 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%87%8D%E6%9E%84/</guid><description>为什么要重构（why）？ 保证代码质量 对工程师本身技术成长有意义 到底重构什么（what）？ 大型重构指的是对顶层代码设计的重构，包括：系统、模块</description></item><item><title>LOD</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/lod/</link><pubDate>Wed, 24 May 2023 14:51:55 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/lod/</guid><description>Law of Demeter, 迪米特法则 另外一个更加达意的名字: 最小知识原则, The Least Knowledge Principle 每个模块（unit）只应该了解那些与它关系密切的模块（units: only units “clo</description></item><item><title>DRY</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/dry/</link><pubDate>Wed, 24 May 2023 13:38:09 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/dry/</guid><description>Don’t Repeat Yourself。 考虑几方面 实现逻辑重复 功能语义重复 代码执行重复 怎么提高代码复用性？ 减少代码耦合 满足单一职责原则 模块化 业务与非业</description></item><item><title>YAGNI</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/yagni/</link><pubDate>Wed, 24 May 2023 13:35:32 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/yagni/</guid><description>You Ain’t Gonna Need It。你不会需要它. 不要做过度设计。</description></item><item><title>KISS</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/kiss/</link><pubDate>Wed, 24 May 2023 13:24:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/kiss/</guid><description>Keep It Simple and Stupid. Keep It Short and Simple. Keep It Simple and Straightforward. 如果在 code review 的时候，同事对你的代码有很多疑问，那就说明你的代码有可能不够“简单”</description></item><item><title>SRP</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/srp/</link><pubDate>Tue, 23 May 2023 18:30:05 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/srp/</guid><description>Single Responsibility Principle 单一职责原则</description></item><item><title>OCP</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/ocp/</link><pubDate>Tue, 23 May 2023 18:30:04 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/ocp/</guid><description>Open Closed Principle 开闭原则</description></item><item><title>LSP</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/lsp/</link><pubDate>Tue, 23 May 2023 18:30:03 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/lsp/</guid><description>Liskov Substitution Principle 里式替换原则</description></item><item><title>ISP</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/isp/</link><pubDate>Tue, 23 May 2023 18:30:02 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/isp/</guid><description>Interface Segregation Principle 接口隔离原则</description></item><item><title>DIP</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/dip/</link><pubDate>Tue, 23 May 2023 18:30:01 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/solid/dip/</guid><description>Dependency Inversion Principle 依赖反转原则/依赖倒置原则</description></item><item><title>贫血模型与充血模型</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E8%B4%AB%E8%A1%80%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%85%85%E8%A1%80%E6%A8%A1%E5%9E%8B/</link><pubDate>Tue, 23 May 2023 15:14:01 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E8%B4%AB%E8%A1%80%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%85%85%E8%A1%80%E6%A8%A1%E5%9E%8B/</guid><description>贫血模型(Anemic Domain Model)将数据与操作分离，破坏了面向对象的封装特性，是一种典型的面向过程的编程风格。 充血模型(Rich Domain Mode</description></item><item><title>接口与抽象类的区别</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Mon, 22 May 2023 17:19:50 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>抽象类的特性 (代码复用, 多态特性) 不允许实例化, 只能被继承 可以包含属性和方法 子类继承抽象类, 必须实现抽象方法 接口的特性 (代码复用, 解耦) 不能</description></item><item><title>哪些代码看似是面向对象 实际是面向过程</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E5%93%AA%E4%BA%9B%E4%BB%A3%E7%A0%81%E7%9C%8B%E4%BC%BC%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-%E5%AE%9E%E9%99%85%E6%98%AF%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</link><pubDate>Mon, 22 May 2023 16:49:11 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E5%93%AA%E4%BA%9B%E4%BB%A3%E7%A0%81%E7%9C%8B%E4%BC%BC%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-%E5%AE%9E%E9%99%85%E6%98%AF%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</guid><description>滥用getter, setter违反封装特性 是否公开了不应该公开的 滥用全局变量和全局方法违反封装特性 是否有必要放到全局 定义数据和方法分离的类 MVC</description></item><item><title>第二节 精选个股做组合</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E7%B2%BE%E9%80%89%E4%B8%AA%E8%82%A1%E5%81%9A%E7%BB%84%E5%90%88/</link><pubDate>Mon, 22 May 2023 13:29:32 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E7%B2%BE%E9%80%89%E4%B8%AA%E8%82%A1%E5%81%9A%E7%BB%84%E5%90%88/</guid><description>一、股票组合搭建步骤 每个月或每个季度定期调整组合，在选股时要综合考虑几点因素 宏观环境和经济周期导向，如货币政策宽松时可适当多配成长风格类个股</description></item><item><title>第一节 打造个人专属股票池</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E8%8A%82-%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E8%82%A1%E7%A5%A8%E6%B1%A0/</link><pubDate>Mon, 22 May 2023 13:08:43 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E8%8A%82-%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E8%82%A1%E7%A5%A8%E6%B1%A0/</guid><description>一、构建股票池的意义 A股近4000只股票，多数股票仅适合短线投机，只有少部分好股才有长期持有价值。经过层层筛选的股票基本面可靠程度较高，踩雷</description></item><item><title>第三节 再融资对个股的影响</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF/%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%86%8D%E8%9E%8D%E8%B5%84%E5%AF%B9%E4%B8%AA%E8%82%A1%E7%9A%84%E5%BD%B1%E5%93%8D/</link><pubDate>Mon, 22 May 2023 12:43:21 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF/%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%86%8D%E8%9E%8D%E8%B5%84%E5%AF%B9%E4%B8%AA%E8%82%A1%E7%9A%84%E5%BD%B1%E5%93%8D/</guid><description>再融资是指上市公司通过配股、增发和发债等方式，在证券市场上进行直接融资。 一、公开增发／定向增发 IPO是上市公司首次公开发行股票向市场募资，增</description></item><item><title>第二节 业绩披露对个股的影响</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E4%B8%9A%E7%BB%A9%E6%8A%AB%E9%9C%B2%E5%AF%B9%E4%B8%AA%E8%82%A1%E7%9A%84%E5%BD%B1%E5%93%8D/</link><pubDate>Mon, 22 May 2023 12:23:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E4%B8%9A%E7%BB%A9%E6%8A%AB%E9%9C%B2%E5%AF%B9%E4%B8%AA%E8%82%A1%E7%9A%84%E5%BD%B1%E5%93%8D/</guid><description>一、业绩报告 季报、半年报和年报等定期财报公开披露，是对短线股价影响最明显的一大消息类型。一季报的集中披露期在4月，半年报在7—8月，三季报在</description></item><item><title>第一节 消息的分类及其对市场的影响</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF/%E7%AC%AC%E4%B8%80%E8%8A%82-%E6%B6%88%E6%81%AF%E7%9A%84%E5%88%86%E7%B1%BB%E5%8F%8A%E5%BD%B1%E5%93%8D/</link><pubDate>Sun, 21 May 2023 18:28:16 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E6%B6%88%E6%81%AF/%E7%AC%AC%E4%B8%80%E8%8A%82-%E6%B6%88%E6%81%AF%E7%9A%84%E5%88%86%E7%B1%BB%E5%8F%8A%E5%BD%B1%E5%93%8D/</guid><description>一、真消息与假消息 对消息真假的判断要结合来源是否权威、内容是否符合逻辑、市场有无异动等因素综合考虑。 一般真消息曝出前后综合指数、行业指数或个</description></item><item><title>第四节 K线技术简介及示例(上)</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E5%9B%9B%E8%8A%82-k%E7%BA%BF%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B%E5%8F%8A%E7%A4%BA%E4%BE%8B/</link><pubDate>Sun, 21 May 2023 18:09:13 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E5%9B%9B%E8%8A%82-k%E7%BA%BF%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B%E5%8F%8A%E7%A4%BA%E4%BE%8B/</guid><description>一、K线的基本原理 图7-8 标准K线的结构 以日K线为例讲解K线基本原理 当日收盘价高于开盘价时收阳线，低于开盘价时收阴线。 对阳线而言，最高价高于</description></item><item><title>第三节 分时技术简介及示例</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%86%E6%97%B6%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B%E5%8F%8A%E7%A4%BA%E4%BE%8B/</link><pubDate>Sun, 21 May 2023 16:37:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%86%E6%97%B6%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B%E5%8F%8A%E7%A4%BA%E4%BE%8B/</guid><description>看懂分时图的含义是解读市场和个股行情，展开各类技术分析的必经之路。很多超短线高手仅靠盘口数据和分时图形就能观察多空交战情况，判断主力动向，进</description></item><item><title>第二节 技术分析方法的五大流派</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95%E7%9A%84%E4%BA%94%E5%A4%A7%E6%B5%81%E6%B4%BE/</link><pubDate>Sun, 21 May 2023 16:15:51 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95%E7%9A%84%E4%BA%94%E5%A4%A7%E6%B5%81%E6%B4%BE/</guid><description>一、K线流 K线流旨在用图形的方式记录指数和个股价格在每个时间段的变化，注重研究K线及其组合形态的规律，借以判断市场中多空力量的对比，并凭此预</description></item><item><title>第一节 技术分析对股票投资的意义</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E4%B8%80%E8%8A%82-%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</link><pubDate>Sun, 21 May 2023 13:45:50 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8A%80%E6%9C%AF/%E7%AC%AC%E4%B8%80%E8%8A%82-%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</guid><description>如果因为个人能力问题无法驾驭好一匹马，怎么能对马破口大骂，而不反躬自省？ 一、技术分析及量价时空 技术分析是以K线、均线、切线和波浪等图形为主要</description></item><item><title>第七节 绝对估值法介绍</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%B8%83%E8%8A%82-%E7%BB%9D%E5%AF%B9%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sun, 21 May 2023 13:01:33 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%B8%83%E8%8A%82-%E7%BB%9D%E5%AF%B9%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid><description>一、绝对估值法的逻辑基础 上市公司的内在价值，是将预期未来现金流，按照反映其风险的折现率，进行折现后的现值加总。 对估值法的分支有很多，其中使用</description></item><item><title>第六节 指数分位估值法介绍</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E5%85%AD%E8%8A%82-%E6%8C%87%E6%95%B0%E5%88%86%E4%BD%8D%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sun, 21 May 2023 12:52:30 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E5%85%AD%E8%8A%82-%E6%8C%87%E6%95%B0%E5%88%86%E4%BD%8D%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid><description>很多人喜欢用指数点位来判断当前时点是否存在泡沫、是否值得出手投资。客观讲，这种思路可能并不适用于所有个股的买卖择时。 将指数分位值理解为对某一</description></item><item><title>第五节 市销率估值法介绍</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%B8%82%E9%94%80%E7%8E%87%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sun, 21 May 2023 12:05:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%B8%82%E9%94%80%E7%8E%87%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid><description>处于亏损阶段的企业，市盈率基本不适用, 应使用市销率</description></item><item><title>第四节 市盈率估值法介绍</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E5%B8%82%E7%9B%88%E7%8E%87%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 20 May 2023 13:56:22 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E5%B8%82%E7%9B%88%E7%8E%87%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid><description>公司总市值=每股股价×公司总股本 公司净利润=每股净利润×公司总股本 市盈率=公司总市值/公司净利润 市盈率=公司总市值/公司净利润=每股股价/每</description></item><item><title>第三节 市净率估值法介绍</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%B8%82%E5%87%80%E7%8E%87%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 20 May 2023 12:12:19 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%B8%82%E5%87%80%E7%8E%87%E4%BC%B0%E5%80%BC%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid><description>一、市净率是什么 公司总市值=每股股价×公司总股本 公司净资产=每股净资产×公司总股本 市净率=公司总市值/公司净资产 市净率=公司总市值/公司净资</description></item><item><title>第二节 估值方法的分类</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E4%BC%B0%E5%80%BC%E6%96%B9%E6%B3%95%E7%9A%84%E5%88%86%E7%B1%BB/</link><pubDate>Sat, 20 May 2023 12:04:43 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E4%BC%B0%E5%80%BC%E6%96%B9%E6%B3%95%E7%9A%84%E5%88%86%E7%B1%BB/</guid><description>没有任何一种估值工具是完美的、能在所有环境下都完全生效的。 灵活运用多种估值方法，不要固守某一种方法。 绝对估值法是指，在上市公司基本面分析，以</description></item><item><title>第一节 估值对股票投资的意义</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%B8%80%E8%8A%82-%E4%BC%B0%E5%80%BC%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</link><pubDate>Fri, 19 May 2023 19:11:46 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E4%BC%B0%E5%80%BC/%E7%AC%AC%E4%B8%80%E8%8A%82-%E4%BC%B0%E5%80%BC%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</guid><description>脱离价值谈论价格是没有意义的。</description></item><item><title>第七节 财务指标的综合分析</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%B8%83%E8%8A%82-%E8%B4%A2%E5%8A%A1%E6%8C%87%E6%A0%87%E7%9A%84%E7%BB%BC%E5%90%88%E5%88%86%E6%9E%90/</link><pubDate>Fri, 19 May 2023 16:54:22 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%B8%83%E8%8A%82-%E8%B4%A2%E5%8A%A1%E6%8C%87%E6%A0%87%E7%9A%84%E7%BB%BC%E5%90%88%E5%88%86%E6%9E%90/</guid><description>一、三张表之间的关系 总的来说，这三张报表是站在两个不同的视角来看待企业：一是风险视角，通过现金流量表可审视企业能否继续存活；二是收益视角，资</description></item><item><title>第六节 上市公司的供血站——现金流量表</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E5%85%AD%E8%8A%82-%E7%8E%B0%E9%87%91%E6%B5%81%E9%87%8F%E8%A1%A8/</link><pubDate>Fri, 19 May 2023 15:47:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E5%85%AD%E8%8A%82-%E7%8E%B0%E9%87%91%E6%B5%81%E9%87%8F%E8%A1%A8/</guid><description>现金流量表是反映在一定时间内企业经营、投资和筹资活动对其现金及现金等价物流入和流出所产生影响的财务报表。它区别于利润表和资产负债表的一个重要</description></item><item><title>第9章 数据库</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC9%E7%AB%A0-%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Fri, 19 May 2023 13:45:40 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC9%E7%AB%A0-%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>9.1 服务器中的数据库 redis.h/redisServer 1 2 3 4 5 6 7 8 9 struct redisServer { // ... //一个数组，保存着服务器中的所有数据库 redisDb *db; // ... //服务器的数据库数量 int dbnum; // ... }; dbnum属</description></item><item><title>第8章 对象</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC8%E7%AB%A0-%E5%AF%B9%E8%B1%A1/</link><pubDate>Thu, 18 May 2023 17:47:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC8%E7%AB%A0-%E5%AF%B9%E8%B1%A1/</guid><description>Redis并没有直接使用这些数据结构来实现键值对数据库，而是基于这些数据结构创建了一个对象系统，这个系统包含字符串对象、列表对象、哈希对象、</description></item><item><title>第五节 上市公司的成绩单——利润表</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%88%A9%E6%B6%A6%E8%A1%A8/</link><pubDate>Thu, 18 May 2023 14:01:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%88%A9%E6%B6%A6%E8%A1%A8/</guid><description>一、利润表的要素和结构 净利润=收入－成本－费用±其他 基本表现形式主要有多步式和单步式两种，按照企业会计制度的规定，我国利润表主要采用多步式结</description></item><item><title>第四节 上市公司的家底——资产负债表</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E8%B5%84%E4%BA%A7%E8%B4%9F%E5%80%BA%E8%A1%A8/</link><pubDate>Wed, 17 May 2023 16:02:37 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E8%B5%84%E4%BA%A7%E8%B4%9F%E5%80%BA%E8%A1%A8/</guid><description>一、审计报告 审计类型共有五种，分别表达了会计师的五种态度 表5-1 会计师出具意见与真实意图对照 二、资产负债表的要素和结构 资产负债表主要是用来反</description></item><item><title>第三节 不可轻视的定性分析</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%B8%89%E8%8A%82-%E4%B8%8D%E5%8F%AF%E8%BD%BB%E8%A7%86%E7%9A%84%E5%AE%9A%E6%80%A7%E5%88%86%E6%9E%90/</link><pubDate>Wed, 17 May 2023 15:16:26 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%B8%89%E8%8A%82-%E4%B8%8D%E5%8F%AF%E8%BD%BB%E8%A7%86%E7%9A%84%E5%AE%9A%E6%80%A7%E5%88%86%E6%9E%90/</guid><description>一、公司业务概要 这一部分将对公司主营业务、经营模式、业务发展情况及目标，乃至企业核心竞争力等内容进行全方位的阐述。 年报每年都在更新，通过对比</description></item><item><title>第二节 财务报告的基本结构</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E8%B4%A2%E5%8A%A1%E6%8A%A5%E5%91%8A%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</link><pubDate>Wed, 17 May 2023 14:38:32 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E8%B4%A2%E5%8A%A1%E6%8A%A5%E5%91%8A%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</guid><description>一、财报的获取渠道 上海证券交易所和深圳证券交易所官网 巨潮资讯网 第三方软件和网站 二、财报的公布时间 从披露时间上来说，一季报、三季报是要求在季度</description></item><item><title>第一节 财报分析的意义</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%B8%80%E8%8A%82-%E8%B4%A2%E6%8A%A5%E5%88%86%E6%9E%90%E7%9A%84%E6%84%8F%E4%B9%89/</link><pubDate>Wed, 17 May 2023 13:53:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%B4%A2%E6%8A%A5/%E7%AC%AC%E4%B8%80%E8%8A%82-%E8%B4%A2%E6%8A%A5%E5%88%86%E6%9E%90%E7%9A%84%E6%84%8F%E4%B9%89/</guid><description>一、个股基本面的两个方向 主要分为定性研究和定量研究两个方向, 对应要解决的两个核心问题，分别是上市公司质地是否健康以及赚钱能力究竟是强还是弱。</description></item><item><title>第七节 重视行业中的龙头</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%B8%83%E8%8A%82-%E9%87%8D%E8%A7%86%E8%A1%8C%E4%B8%9A%E4%B8%AD%E7%9A%84%E9%BE%99%E5%A4%B4/</link><pubDate>Tue, 16 May 2023 16:05:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%B8%83%E8%8A%82-%E9%87%8D%E8%A7%86%E8%A1%8C%E4%B8%9A%E4%B8%AD%E7%9A%84%E9%BE%99%E5%A4%B4/</guid><description>一、行业龙头的优势 行业龙头由于自身实力或其他原因（如行政垄断），往往在其行业中有举足轻重的地位。 行业龙头更容易享受到政策红利，很多时候在行业</description></item><item><title>第六节 医疗行业及细分赛道</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E5%85%AD%E8%8A%82-%E5%8C%BB%E7%96%97%E8%A1%8C%E4%B8%9A%E5%8F%8A%E7%BB%86%E5%88%86%E8%B5%9B%E9%81%93/</link><pubDate>Tue, 16 May 2023 15:28:34 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E5%85%AD%E8%8A%82-%E5%8C%BB%E7%96%97%E8%A1%8C%E4%B8%9A%E5%8F%8A%E7%BB%86%E5%88%86%E8%B5%9B%E9%81%93/</guid><description>迈瑞医疗、药明康德、恒瑞医药和爱尔眼科 医疗行业是一个强政策主导的行业。对它的研究离不开对政策的了解，需要密切关注国家医保局、国家药品监督管理</description></item><item><title>第五节 科技行业及细分赛道</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%BA%94%E8%8A%82-%E7%A7%91%E6%8A%80%E8%A1%8C%E4%B8%9A%E5%8F%8A%E7%BB%86%E5%88%86%E8%B5%9B%E9%81%93/</link><pubDate>Tue, 16 May 2023 12:35:45 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%BA%94%E8%8A%82-%E7%A7%91%E6%8A%80%E8%A1%8C%E4%B8%9A%E5%8F%8A%E7%BB%86%E5%88%86%E8%B5%9B%E9%81%93/</guid><description>一、科技行业的特性 科技行业具备成长性、周期性和易泡沫化三大典型特征，这让它相对于稳定性和确定性都更高的消费行业，投资难度要大不少。 成长性, 做</description></item><item><title>第四节 消费行业及细分赛道</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A%E5%8F%8A%E7%BB%86%E5%88%86%E8%B5%9B%E9%81%93/</link><pubDate>Mon, 15 May 2023 13:12:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A%E5%8F%8A%E7%BB%86%E5%88%86%E8%B5%9B%E9%81%93/</guid><description>赛道通常是指行业里面的某个细分行业或领域 一、牛股辈出的消费行业 这一行业最大的特征就是需求稳定，背后的底层逻辑就是人口——只要社会仍在发展、人</description></item><item><title>第三节 主要行业及其投资要点</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%B8%89%E8%8A%82-%E4%B8%BB%E8%A6%81%E8%A1%8C%E4%B8%9A%E5%8F%8A%E5%85%B6%E6%8A%95%E8%B5%84%E8%A6%81%E7%82%B9/</link><pubDate>Mon, 15 May 2023 11:47:51 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%B8%89%E8%8A%82-%E4%B8%BB%E8%A6%81%E8%A1%8C%E4%B8%9A%E5%8F%8A%E5%85%B6%E6%8A%95%E8%B5%84%E8%A6%81%E7%82%B9/</guid><description>投资圈使用较多的是申银万国、中信和万得等机构编制的行业分类标准。最常用的申万行业分类分为三级，一级分类有28个行业，二级分类有104个行业，</description></item><item><title>第二节 行业分析的方法</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E8%A1%8C%E4%B8%9A%E5%88%86%E6%9E%90%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 15 May 2023 11:10:08 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E8%A1%8C%E4%B8%9A%E5%88%86%E6%9E%90%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>一、把握宏观环境与行业发展趋势的关系 一看行业与经济环境的相关性，二看行业未来发展趋势。 在选行业时结合总体经济形势，把握行业政策、发展趋势和发</description></item><item><title>第一节 行业分析对股票投资的意义</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%B8%80%E8%8A%82-%E8%A1%8C%E4%B8%9A%E5%88%86%E6%9E%90%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</link><pubDate>Sun, 14 May 2023 15:43:17 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%A1%8C%E4%B8%9A/%E7%AC%AC%E4%B8%80%E8%8A%82-%E8%A1%8C%E4%B8%9A%E5%88%86%E6%9E%90%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</guid><description>一、行业分析的定义 投资中的行业分析则是对行业的发展历史、现状与格局等进行分析，从而找出行业的特征和结构，来对行业的市场容量、发展趋势等进行预</description></item><item><title>第八节 经济周期与股市、行业的关系</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E5%85%AB%E8%8A%82-%E7%BB%8F%E6%B5%8E%E5%91%A8%E6%9C%9F%E4%B8%8E%E8%82%A1%E5%B8%82-%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%85%B3%E7%B3%BB/</link><pubDate>Sun, 14 May 2023 13:56:55 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E5%85%AB%E8%8A%82-%E7%BB%8F%E6%B5%8E%E5%91%A8%E6%9C%9F%E4%B8%8E%E8%82%A1%E5%B8%82-%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%85%B3%E7%B3%BB/</guid><description>一、四大周期理论 基钦周期 整个周期的时间大约是5年，且往往是企业的存货（可简单理解为卖剩的东西）发生变化、起伏所导致的，所以又叫存货周期或库存</description></item><item><title>第七节 与货币政策相关的指标与概念（下）</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%B8%83%E8%8A%82-%E8%B4%A7%E5%B8%81%E6%94%BF%E7%AD%96%E7%9B%B8%E5%85%B3%E6%8C%87%E6%A0%87/</link><pubDate>Sun, 14 May 2023 13:11:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%B8%83%E8%8A%82-%E8%B4%A7%E5%B8%81%E6%94%BF%E7%AD%96%E7%9B%B8%E5%85%B3%E6%8C%87%E6%A0%87/</guid><description>一、基础货币与货币乘数 货币政策是货币管理当局为实现其特定的经济目标而采用的各种调节和控制货币供应量的方针、政策和措施的总称。 基础货币是由央行</description></item><item><title>东方财富 数据中心</title><link>https://jdxj.github.io/posts/data/eastmoney/</link><pubDate>Sun, 14 May 2023 12:39:52 +0800</pubDate><guid>https://jdxj.github.io/posts/data/eastmoney/</guid><description>主页</description></item><item><title>seq</title><link>https://jdxj.github.io/posts/cmd/seq/</link><pubDate>Sun, 14 May 2023 10:50:15 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/seq/</guid><description>生成数字序列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # 生成1～5的数字序列 $ seq 1 5 1 2 3 4 5 # 指定使用空格为分隔符 $ seq -s&amp;#39; &amp;#39; 1 5 1 2</description></item><item><title>第六节 与货币政策相关的指标与概念（上）</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E5%85%AD%E8%8A%82-%E8%B4%A7%E5%B8%81%E6%94%BF%E7%AD%96%E7%9B%B8%E5%85%B3%E6%8C%87%E6%A0%87/</link><pubDate>Sat, 13 May 2023 18:27:47 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E5%85%AD%E8%8A%82-%E8%B4%A7%E5%B8%81%E6%94%BF%E7%AD%96%E7%9B%B8%E5%85%B3%E6%8C%87%E6%A0%87/</guid><description>“通货”一词的本义正是“流通中的货币” 一、货币分层与M0/M1/M2 作为金融学名词，流动性是指某一资产或金融工具在不影响到其价格的情况下，在</description></item><item><title>第五节 最重要的通货膨胀观察指标——CPI和PPI</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%BA%94%E8%8A%82-cpi-ppi/</link><pubDate>Sat, 13 May 2023 17:40:44 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%BA%94%E8%8A%82-cpi-ppi/</guid><description>一、CPI和PPI的概念 CPI全称Consumer Price Index，中文译为消费者价格指数，是用以反映与居民生活有关的消费品及服务价格水平变动情</description></item><item><title>中采咨询</title><link>https://jdxj.github.io/posts/data/pmiii/</link><pubDate>Sat, 13 May 2023 17:27:20 +0800</pubDate><guid>https://jdxj.github.io/posts/data/pmiii/</guid><description>主页</description></item><item><title>第四节 最受市场关注的先行指标——PMI</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E5%9B%9B%E8%8A%82-pmi/</link><pubDate>Sat, 13 May 2023 16:48:58 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E5%9B%9B%E8%8A%82-pmi/</guid><description>一、PMI的概念 Purchasing Manager&amp;rsquo;s Index，中文译为采购经理指数, 通过对企业采购经理的月度调查结果统计编制而成的综合指数。它涵盖制造业和非制造企业的采购</description></item><item><title>第三节 最核心的宏观经济指标——GDP</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%B8%89%E8%8A%82-gdp/</link><pubDate>Thu, 27 Apr 2023 12:10:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%B8%89%E8%8A%82-gdp/</guid><description>一、GDP的概念 GDP(Gross Domestic Product)国内生产总值, 指一个国家或地区所有常住单位在一定时期内（一般考察一个季度或一年）生产经营活动产出的全部产</description></item><item><title>第二节 如何正确解读宏观指标</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E8%A7%A3%E8%AF%BB%E5%AE%8F%E8%A7%82%E6%8C%87%E6%A0%87/</link><pubDate>Thu, 27 Apr 2023 11:35:21 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E8%A7%A3%E8%AF%BB%E5%AE%8F%E8%A7%82%E6%8C%87%E6%A0%87/</guid><description>注意事项 解读数据要同时关注存量（基数）、增量和增速。以GDP为例，2007年后我国整体经济增速明显放缓，这是由于改革开放后经济高速发展，GD</description></item><item><title>第一节 宏观经济分析对股票投资的意义</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%B8%80%E8%8A%82-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%88%86%E6%9E%90%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</link><pubDate>Wed, 26 Apr 2023 15:07:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E/%E7%AC%AC%E4%B8%80%E8%8A%82-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%88%86%E6%9E%90%E5%AF%B9%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E7%9A%84%E6%84%8F%E4%B9%89/</guid><description>图3-1 宏观经济研究的范围和对象 一、对宏观分析的傲慢与偏见 连高善文自己也曾戏谑式地创作过一副对联，上联是“解释过去头头是道，似乎有理”，下联</description></item><item><title>第六节 重要股市指数介绍</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E5%85%AD%E8%8A%82-%E9%87%8D%E8%A6%81%E8%82%A1%E5%B8%82%E6%8C%87%E6%95%B0%E4%BB%8B%E7%BB%8D/</link><pubDate>Wed, 26 Apr 2023 14:50:18 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E5%85%AD%E8%8A%82-%E9%87%8D%E8%A6%81%E8%82%A1%E5%B8%82%E6%8C%87%E6%95%B0%E4%BB%8B%E7%BB%8D/</guid><description>上证综指 深证成指 创业板指 上证50指数 沪深300指数 中证500指数 中证1000指数 道琼斯工业指数 标准普尔指数 纳斯达克指数 恒生指数</description></item><item><title>链表实现LRU</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0lru/</link><pubDate>Wed, 26 Apr 2023 12:48:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0lru/</guid><description>维护一个有序单链表，越靠近链表尾部的结点是越早之前访问的。当有一个新的数据被访问时，我们从链表头开始顺序遍历链表。 如果此数据之前已经被缓存在</description></item><item><title>链表</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%93%BE%E8%A1%A8/</link><pubDate>Wed, 26 Apr 2023 12:00:48 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E9%93%BE%E8%A1%A8/</guid><description>单向链表 插入, 删除操作时间复杂度为O(1) 链表随机访问的性能没有数组好，需要 O(n) 的时间复杂度。 循环链表 双向链表 双向链表可以支持 O(1) 时间复杂度的情</description></item><item><title>第7章 压缩列表</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC7%E7%AB%A0-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</link><pubDate>Wed, 26 Apr 2023 11:47:42 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC7%E7%AB%A0-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</guid><description>7.1 压缩列表的构成 图7-1 压缩列表的各个组成部分 表7-1 压缩列表各个组成部分的详细说明 图7-2 包含三个节点的压缩列表 7.2 压缩列表节点的构成 个压缩</description></item><item><title>RANDOM</title><link>https://jdxj.github.io/posts/cmd/random/</link><pubDate>Wed, 26 Apr 2023 10:45:20 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/random/</guid><description>linux环境变量, 保存0~32767之间的随机整数 1 2 3 $ echo $RANDOM $ echo $[RANDOM%10+1] 9</description></item><item><title>面向对象编程相比面向过程编程有哪些优势</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E7%9B%B8%E6%AF%94%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E5%8A%BF/</link><pubDate>Wed, 26 Apr 2023 09:10:48 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E7%9B%B8%E6%AF%94%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E5%8A%BF/</guid><description>面向对象与面向过程不是对立的 OOP 更加能够应对大规模复杂程序的开发 面向过程是线性的思维方式, 思考大规模程序的网状结构会吃力 面向对象先建模为类, 再</description></item><item><title>什么是面向过程编程</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B/</link><pubDate>Wed, 26 Apr 2023 09:00:42 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B/</guid><description>面向过程编程也是一种编程范式或编程风格。它以过程（可以理解为方法、函数、操作）作为组织代码的基本单元，以数据（可以理解为成员变量、属性）与方</description></item><item><title>什么是面向对象编程</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</link><pubDate>Wed, 26 Apr 2023 09:00:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</guid><description>面向对象编程是一种编程范式或编程风格。它以类或对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性，作为代码设计和实现的基石 。</description></item><item><title>第五节 初入江湖需了解的股市行话</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%88%9D%E5%85%A5%E6%B1%9F%E6%B9%96%E9%9C%80%E4%BA%86%E8%A7%A3%E7%9A%84%E8%82%A1%E5%B8%82%E8%A1%8C%E8%AF%9D/</link><pubDate>Mon, 24 Apr 2023 18:52:23 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%88%9D%E5%85%A5%E6%B1%9F%E6%B9%96%E9%9C%80%E4%BA%86%E8%A7%A3%E7%9A%84%E8%82%A1%E5%B8%82%E8%A1%8C%E8%AF%9D/</guid><description>一、有关参与者的行话 多头（多方）：对股市未来行情乐观，预计股价还会继续节节攀升的人。 空头（空方）：对股市前景悲观，预计股价会下跌的人。 大户：</description></item><item><title>第四节 股市江湖各大投资门派简介</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E8%82%A1%E5%B8%82%E6%B1%9F%E6%B9%96%E5%90%84%E5%A4%A7%E6%8A%95%E8%B5%84%E9%97%A8%E6%B4%BE%E7%AE%80%E4%BB%8B/</link><pubDate>Mon, 24 Apr 2023 18:20:15 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E8%82%A1%E5%B8%82%E6%B1%9F%E6%B9%96%E5%90%84%E5%A4%A7%E6%8A%95%E8%B5%84%E9%97%A8%E6%B4%BE%E7%AE%80%E4%BB%8B/</guid><description>一、技术分析派 根据所持“武器”的不同，技术分析派内部可细分为K线流、切线流、形态流、指标流和波浪流等，在我国还异化出了以“缠论”为代表的一批</description></item><item><title>第三节 股市博弈的主要参与力量</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%B8%89%E8%8A%82-%E8%82%A1%E5%B8%82%E5%8D%9A%E5%BC%88%E7%9A%84%E4%B8%BB%E8%A6%81%E5%8F%82%E4%B8%8E%E5%8A%9B%E9%87%8F/</link><pubDate>Mon, 24 Apr 2023 17:39:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%B8%89%E8%8A%82-%E8%82%A1%E5%B8%82%E5%8D%9A%E5%BC%88%E7%9A%84%E4%B8%BB%E8%A6%81%E5%8F%82%E4%B8%8E%E5%8A%9B%E9%87%8F/</guid><description>一、各路资金齐聚A股 龙虎榜 通常只有日内股票价格涨跌幅7%以上、股票价格日内换手率超过20%、股票价格日内上行振幅15%以上，或者连续三日内涨</description></item><item><title>第6章 整数集合</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC6%E7%AB%A0-%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</link><pubDate>Mon, 24 Apr 2023 16:32:01 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC6%E7%AB%A0-%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</guid><description>查看底层编码 1 2 3 4 redis&amp;gt; SADD numbers 1 3 5 7 9 (integer) 5 redis&amp;gt; OBJECT ENCODING numbers &amp;#34;intset&amp;#34; 6.1 整数集合的实现 intset.h/intset 1 2 3 4 5 6 7 8 typedef struct intset { //编码方式 uint32_t encoding; //集合包含的元素数量 uint32_t length; //保</description></item><item><title>软链接 硬链接</title><link>https://jdxj.github.io/posts/articles/jdxj/linux/%E8%BD%AF%E9%93%BE%E6%8E%A5-%E7%A1%AC%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 24 Apr 2023 13:31:34 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/linux/%E8%BD%AF%E9%93%BE%E6%8E%A5-%E7%A1%AC%E9%93%BE%E6%8E%A5/</guid><description>Linux系统中的文件链接分为软链接和硬链接两种。 软链接创建后，如果源文件被删除，则软链接将无法继续使用，可以跨分区和磁盘创建软链接。 硬链接</description></item><item><title>中断</title><link>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/%E4%B8%AD%E6%96%AD/</link><pubDate>Mon, 24 Apr 2023 12:28:18 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/%E4%B8%AD%E6%96%AD/</guid><description>为了解决中断处理程序执行过长和中断丢失的问题，Linux 将中断处理过程分成了两个阶段，也就是上半部和下半部： 上半部用来快速处理中断(硬中断)</description></item><item><title>rwMutex</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/rwmutex/</link><pubDate>Mon, 24 Apr 2023 11:16:15 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/rwmutex/</guid><description>RWMutex 一般都是基于互斥锁、条件变量（condition variables）或者信号量（semaphores）等并发原语来实现。Go 标准库中的 RWMutex 是</description></item><item><title>netstat</title><link>https://jdxj.github.io/posts/cmd/netstat/</link><pubDate>Mon, 24 Apr 2023 10:51:20 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/netstat/</guid><description>1 2 3 4 5 6 7 8 9 10 11 # 列出listen/非listen套接字 $ netstat -a # 列出tcp套接字 $ netstat -at # 展示端口号 $ netstat -ltn # 展示进程 $ netstat -ltnp # 显示 8080 端口所</description></item><item><title>Ab</title><link>https://jdxj.github.io/posts/cmd/ab/</link><pubDate>Fri, 21 Apr 2023 18:33:33 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/ab/</guid><description>ab（apache bench）是一个常用的 HTTP 服务性能测试工具 安装 1 $ apt install apache2-utils 使用 1 2 3 4 5 6 7 8 # 并发10个请求测试Nginx性能，总共测试1</description></item><item><title>perf</title><link>https://jdxj.github.io/posts/cmd/perf/</link><pubDate>Fri, 21 Apr 2023 18:17:21 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/perf/</guid><description>perf 是 Linux 2.6.31 以后内置的性能分析工具。它以性能事件采样为基础，不仅可以分析系统的各种事件和内核性能，还可以用来分析指定应用程序的性能问 题。 安装 1 $</description></item><item><title>CPU使用率</title><link>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/cpu%E4%BD%BF%E7%94%A8%E7%8E%87/</link><pubDate>Fri, 21 Apr 2023 17:16:41 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/cpu%E4%BD%BF%E7%94%A8%E7%8E%87/</guid><description>CPU 使用率，就是除了空闲时间外的其他时间占总 CPU 时间的百分比 查看cpu节拍数 单位是USER_HZ(10ms, 100HZ) 1 $ cat /proc/stat | grep ^cpu 也可以用每一个场景的</description></item><item><title>Redis内部编码</title><link>https://jdxj.github.io/posts/articles/jdxj/redis%E5%86%85%E9%83%A8%E7%BC%96%E7%A0%81/</link><pubDate>Fri, 21 Apr 2023 16:30:47 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/redis%E5%86%85%E9%83%A8%E7%BC%96%E7%A0%81/</guid><description>查看某key的内部编码 1 2 3 4 redis&amp;gt; RPUSH lst 1 3 5 10086 &amp;#34;hello&amp;#34; &amp;#34;world&amp;#34; (integer)6 redis&amp;gt; OBJECT ENCODING lst &amp;#34;ziplist&amp;#34; raw embstr hashtable linkedlist ziplist intset skiplist</description></item><item><title>第5章 跳跃表</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC5%E7%AB%A0-%E8%B7%B3%E8%B7%83%E8%A1%A8/</link><pubDate>Fri, 21 Apr 2023 16:26:08 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC5%E7%AB%A0-%E8%B7%B3%E8%B7%83%E8%A1%A8/</guid><description>5.1 跳跃表的实现 图5-1 一个跳跃表 图片最左边的是zskiplist结构 header：指向跳跃表的表头节点 tail：指向跳跃表的表尾节点 leve</description></item><item><title>第4章 字典</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC4%E7%AB%A0-%E5%AD%97%E5%85%B8/</link><pubDate>Fri, 21 Apr 2023 13:29:08 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC4%E7%AB%A0-%E5%AD%97%E5%85%B8/</guid><description>4.1 字典的实现 4.1.1 哈希表 dict.h/dictht 1 2 3 4 5 6 7 8 9 10 11 typedef struct dictht { //哈希表数组 dictEntry **table; //哈希表大小 unsigned long size; //哈希表大小掩码，用于计算索引值 //总是等于si</description></item><item><title>死锁</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/%E6%AD%BB%E9%94%81/</link><pubDate>Fri, 21 Apr 2023 12:41:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/%E6%AD%BB%E9%94%81/</guid><description>两个或两个以上的进程（或线程，goroutine）在执行过程中，因争夺共享资源而处于一种互相等待的状态，如果没有外部干涉，它们都将无法推进下</description></item><item><title>mutex</title><link>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/mutex/</link><pubDate>Fri, 21 Apr 2023 10:38:19 +0800</pubDate><guid>https://jdxj.github.io/posts/books/go%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE/mutex/</guid><description>演化过程 初版 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 // CAS操作，当时还没有抽象出atomic包 func cas(val *int32, old, new int32) bool</description></item><item><title>第二节 股票的概念, 特点及分类</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E8%82%A1%E7%A5%A8%E7%9A%84%E6%A6%82%E5%BF%B5-%E7%89%B9%E7%82%B9%E5%8F%8A%E5%88%86%E7%B1%BB/</link><pubDate>Thu, 20 Apr 2023 18:52:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E8%82%A1%E7%A5%A8%E7%9A%84%E6%A6%82%E5%BF%B5-%E7%89%B9%E7%82%B9%E5%8F%8A%E5%88%86%E7%B1%BB/</guid><description>一、股票的概念 股票是有价证券的一种，是股份公司在筹集资本时公开或不公开向出资人发行的，用以证明出资人股东身份和权利，并根据股东所持股份数享有</description></item><item><title>第一节 中国证券市场概况</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%B8%80%E8%8A%82-%E4%B8%AD%E5%9B%BD%E8%AF%81%E5%88%B8%E5%B8%82%E5%9C%BA%E6%A6%82%E5%86%B5/</link><pubDate>Thu, 20 Apr 2023 18:02:03 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%9F%BA%E7%A1%80/%E7%AC%AC%E4%B8%80%E8%8A%82-%E4%B8%AD%E5%9B%BD%E8%AF%81%E5%88%B8%E5%B8%82%E5%9C%BA%E6%A6%82%E5%86%B5/</guid><description>一、金融市场的分类 根据金融交易的期限 一年以内的短期市场为货币市场，满足买卖双方短线资金流动性需求； 一年以上的长期市场就是我们经常在财经新闻中</description></item><item><title>第2章 人工智能, 很人工, 很智能的脚本</title><link>https://jdxj.github.io/posts/books/linux-shell%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/%E7%AC%AC2%E7%AB%A0-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%84%9A%E6%9C%AC/</link><pubDate>Thu, 20 Apr 2023 16:45:11 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux-shell%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/%E7%AC%AC2%E7%AB%A0-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%84%9A%E6%9C%AC/</guid><description>2.1 智能化脚本的基础之测试 条件判断的方式 [[ expr ]] [ expr ] test expr 不管使用哪种方式进行条件判断，系统默认都不会有任何输出结果，可以通过echo $?命令，</description></item><item><title>数组</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 20 Apr 2023 15:03:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E6%95%B0%E7%BB%84/</guid><description>数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。 随机访问 数组支持随机访问，根据下标随机访问的时</description></item><item><title>面向对象四大特性</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/</link><pubDate>Thu, 20 Apr 2023 13:17:06 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/</guid><description>封装（Encapsulation） 仅暴露必要的操作 抽象（Abstraction） 只关注功能点不关注实现的设计思路 继承（Inheritance</description></item><item><title>sysbench</title><link>https://jdxj.github.io/posts/cmd/sysbench/</link><pubDate>Thu, 20 Apr 2023 11:31:53 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sysbench/</guid><description>sysbench 是一个多线程的基准测试工具，一般用来评估不同系统参数下的数据库负载情况。 1 $ apt install sysbench 使用 1 2 # 以10个线程运行5分钟的基准测试，模拟多线程切</description></item><item><title>pidstat</title><link>https://jdxj.github.io/posts/cmd/pidstat/</link><pubDate>Thu, 20 Apr 2023 11:18:02 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/pidstat/</guid><description>pidstat 是一个常用的进程性能分析工具，用来实时查看进程的 CPU、内存、I/O 以及上下文切换等性能指标。 使用 1 2 3 4 # 间隔5秒后输出一组数据 $ pidstat -u 5</description></item><item><title>mpstat</title><link>https://jdxj.github.io/posts/cmd/mpstat/</link><pubDate>Thu, 20 Apr 2023 11:14:42 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/mpstat/</guid><description>mpstat 是一个常用的多核 CPU 性能分析工具，用来实时查看每个 CPU 的性能指标，以及所有 CPU 的平均指标。 使用 1 2 3 4 5 6 7 # -P ALL 表示监控所有CPU，后面数字5</description></item><item><title>vmstat</title><link>https://jdxj.github.io/posts/cmd/vmstat/</link><pubDate>Thu, 20 Apr 2023 11:07:18 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/vmstat/</guid><description>vmstat 是一个常用的系统性能分析工具，主要用来分析系统的内存使用情况，也常用来分析 CPU 上下文切换和中断的次数。 1 2 3 4 5 # 每隔5秒输出1组数据 $ vmstat 5</description></item><item><title>上下文切换</title><link>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2/</link><pubDate>Thu, 20 Apr 2023 10:08:37 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2/</guid><description>进行竞争CPU也会导致负载升高 CPU上下文 寄存器 程序计数器(Program Counter, PC) CPU 上下文切换，就是先把前一个任务的 CPU 上下文保存起来，然后加载新</description></item><item><title>sysstat</title><link>https://jdxj.github.io/posts/cmd/sysstat/</link><pubDate>Thu, 20 Apr 2023 10:04:11 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/sysstat/</guid><description>sysstat 包含了常用的 Linux 性能工具，用来监控和分析系统的性能。 1 $ apt install sysstat 包含的命令 mpstat pidstat</description></item><item><title>stress</title><link>https://jdxj.github.io/posts/cmd/stress/</link><pubDate>Thu, 20 Apr 2023 09:55:35 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/stress/</guid><description>stress 是一个 Linux 系统压力测试工具 1 $ apt install stress 使用 1 2 3 $ stress --cpu 1 --timeout 600 $ stress -i 1 --timeout 600 $ stress -c 8 --timeout 600</description></item><item><title>第七节 新手股民常犯的错误</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%B8%83%E8%8A%82-%E6%96%B0%E6%89%8B%E8%82%A1%E6%B0%91%E5%B8%B8%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/</link><pubDate>Wed, 19 Apr 2023 20:21:33 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%B8%83%E8%8A%82-%E6%96%B0%E6%89%8B%E8%82%A1%E6%B0%91%E5%B8%B8%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/</guid><description>一、股民常犯的错 毫无准备，仓促上阵 入市的准备应该是多方面的，包括规划资金、储备投资知识、了解目标股基本情况等。 在买入标的上，优先选择流动性好</description></item><item><title>第六节 好股长持, 静待花开</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E5%85%AD%E8%8A%82-%E5%A5%BD%E8%82%A1%E9%95%BF%E6%8C%81-%E9%9D%99%E5%BE%85%E8%8A%B1%E5%BC%80/</link><pubDate>Wed, 19 Apr 2023 19:33:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E5%85%AD%E8%8A%82-%E5%A5%BD%E8%82%A1%E9%95%BF%E6%8C%81-%E9%9D%99%E5%BE%85%E8%8A%B1%E5%BC%80/</guid><description>一、何为好股 先拉一个“负面投资清单”，将爆出财务造假、业绩急速下滑、实控人或高管层道德品质瑕疵等丑闻的“雷股”，以及行业红利期已过、业绩常年</description></item><item><title>第五节 多数股票或许只适合投机</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%A4%9A%E6%95%B0%E8%82%A1%E7%A5%A8%E6%88%96%E8%AE%B8%E5%8F%AA%E9%80%82%E5%90%88%E6%8A%95%E6%9C%BA/</link><pubDate>Wed, 19 Apr 2023 19:05:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%BA%94%E8%8A%82-%E5%A4%9A%E6%95%B0%E8%82%A1%E7%A5%A8%E6%88%96%E8%AE%B8%E5%8F%AA%E9%80%82%E5%90%88%E6%8A%95%E6%9C%BA/</guid><description>一、投资和投机的区别 在英文语境中，投资（investment）本身就有买进买入的含义，投机可以被包括在广义的“投资”一词中；而投机（spec</description></item><item><title>Introducing the Go Race Detector</title><link>https://jdxj.github.io/posts/articles/go/go-race-detector/</link><pubDate>Wed, 19 Apr 2023 16:08:33 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/go/go-race-detector/</guid><description>原文</description></item><item><title>复杂度分析</title><link>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/</link><pubDate>Wed, 19 Apr 2023 10:59:41 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/</guid><description>大 O 复杂度表示法 1 2 3 4 5 6 7 8 int cal(int n) { int sum = 0; int i = 1; for (; i &amp;lt;= n; ++i) { sum = sum + i; } return sum; } T(n) = (2n+2)*unit_time 1 2 3 4 5 6 7 8 9 10 11 int cal(int n) { int sum = 0; int i = 1;</description></item><item><title>第四节 股票组合投资的必要性</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E8%82%A1%E7%A5%A8%E7%BB%84%E5%90%88%E6%8A%95%E8%B5%84%E7%9A%84%E5%BF%85%E8%A6%81%E6%80%A7/</link><pubDate>Tue, 18 Apr 2023 21:13:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E5%9B%9B%E8%8A%82-%E8%82%A1%E7%A5%A8%E7%BB%84%E5%90%88%E6%8A%95%E8%B5%84%E7%9A%84%E5%BF%85%E8%A6%81%E6%80%A7/</guid><description>一、组合投资是平衡收益和风险的艺术 股票与其他投资品种一样，也是有风险的，其风险程度较存款、理财等防守型品种更大。股票投资的风险既包括市场整体</description></item><item><title>第三节 稳健致富需树立资产配置理念(下)</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%B8%89%E8%8A%82-%E7%A8%B3%E5%81%A5%E8%87%B4%E5%AF%8C%E9%9C%80%E6%A0%91%E7%AB%8B%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E7%90%86%E5%BF%B5-%E4%B8%8B/</link><pubDate>Tue, 18 Apr 2023 20:30:37 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%B8%89%E8%8A%82-%E7%A8%B3%E5%81%A5%E8%87%B4%E5%AF%8C%E9%9C%80%E6%A0%91%E7%AB%8B%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E7%90%86%E5%BF%B5-%E4%B8%8B/</guid><description>制订资产配置计划，则是根据具体的理财目标配置不同比例的各类资产。 一、主要资产分类 进攻型资产 进攻型资产大多是牺牲较多安全性和流动性来提高收益的</description></item><item><title>第二节 稳健致富需树立资产配置理念(上)</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E7%A8%B3%E5%81%A5%E8%87%B4%E5%AF%8C%E9%9C%80%E6%A0%91%E7%AB%8B%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E7%90%86%E5%BF%B5-%E4%B8%8A/</link><pubDate>Tue, 18 Apr 2023 20:05:19 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%BA%8C%E8%8A%82-%E7%A8%B3%E5%81%A5%E8%87%B4%E5%AF%8C%E9%9C%80%E6%A0%91%E7%AB%8B%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E7%90%86%E5%BF%B5-%E4%B8%8A/</guid><description>股票只是各大类资产中的一部分，要想稳健致富，需要依靠配置在各类市场环境中表现不一的资产，实现平滑风险、“东边不亮西边亮”的效果。 过去很长一段</description></item><item><title>第一节 股市并非零和博弈</title><link>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%B8%80%E8%8A%82-%E8%82%A1%E5%B8%82%E5%B9%B6%E9%9D%9E%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88/</link><pubDate>Tue, 18 Apr 2023 19:40:06 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8-%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%AE%9E%E6%88%98/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%90%86%E5%BF%B5/%E7%AC%AC%E4%B8%80%E8%8A%82-%E8%82%A1%E5%B8%82%E5%B9%B6%E9%9D%9E%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88/</guid><description>一、短线交易是“负和”游戏 “零和博弈”是博弈论（Game Theory）中的一个经典概念，意指参与博弈的各方，在残酷竞争下，一方的收益必然意味</description></item><item><title>平均负载</title><link>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/%E5%B9%B3%E5%9D%87%E8%B4%9F%E8%BD%BD/</link><pubDate>Tue, 18 Apr 2023 16:35:14 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/cpu/%E5%B9%B3%E5%9D%87%E8%B4%9F%E8%BD%BD/</guid><description>平均负载 平均负载(load average)是指单位时间内，系统处于可运行状态和不可中断状态的平均进程数，也就是平均活跃进程数 可运行状态的进程</description></item><item><title>第3章 链表</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC3%E7%AB%A0-%E9%93%BE%E8%A1%A8/</link><pubDate>Tue, 18 Apr 2023 16:05:43 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC3%E7%AB%A0-%E9%93%BE%E8%A1%A8/</guid><description>3.1 链表和链表节点的实现 adlist.h/listNode 1 2 3 4 5 6 7 8 typedef struct listNode { // 前置节点 struct listNode * prev; // 后置节点 struct listNode * next; //节点的值 void * value; }listNode; 图3-1 由多个listNode组成的</description></item><item><title>第2章 简单动态字符串 Simple Dynamic String</title><link>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC2%E7%AB%A0-%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Tue, 18 Apr 2023 13:09:02 +0800</pubDate><guid>https://jdxj.github.io/posts/books/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/%E7%AC%AC2%E7%AB%A0-%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>2.1 SDS的定义 sds.h/sdshdr 1 2 3 4 5 6 7 8 9 struct sdshdr { //记录buf数组中已使用字节的数量 //等于SDS所保存字符串的长度 int len; //记录buf数组中未使用字</description></item><item><title>面向对象、设计原则、设计模式、编程规范和代码重构五者之间的联系</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E4%BA%94%E8%80%85%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB/</link><pubDate>Tue, 18 Apr 2023 12:41:26 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E4%BA%94%E8%80%85%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB/</guid><description>面向对象编程因为其具有丰富的特性（封装、抽象、继承、多态），可以实现很多复杂的设计思路，是很多设计原则、设计模式等编码实现的基础。 设计原则是</description></item><item><title>何时应用设计模式</title><link>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E4%BD%95%E6%97%B6%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 18 Apr 2023 12:31:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/%E4%BD%95%E6%97%B6%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>设计思想、设计原则、设计模式一个最重要的应用场景就是在重构的时候。</description></item><item><title>第1章 从这里开始, 起飞了</title><link>https://jdxj.github.io/posts/books/linux-shell%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/%E7%AC%AC1%E7%AB%A0-%E4%BB%8E%E8%BF%99%E9%87%8C%E5%BC%80%E5%A7%8B-%E8%B5%B7%E9%A3%9E%E4%BA%86/</link><pubDate>Tue, 18 Apr 2023 09:11:27 +0800</pubDate><guid>https://jdxj.github.io/posts/books/linux-shell%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/%E7%AC%AC1%E7%AB%A0-%E4%BB%8E%E8%BF%99%E9%87%8C%E5%BC%80%E5%A7%8B-%E8%B5%B7%E9%A3%9E%E4%BA%86/</guid><description>1.1 脚本文件的书写格式 多行注释, &amp;lt;&amp;lt;后的字符串区分大小写 1 2 3 4 #!/usr/bin/env bash &amp;lt;&amp;lt;comment something comment 1.2 脚本文件的各种执行方式 脚本文件自身没有可执行权限 1 2 $</description></item><item><title>HTTP 代理原理及实现（一）</title><link>https://jdxj.github.io/posts/articles/imququ/http%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86%E5%8F%8A%E5%AE%9E%E7%8E%B0/</link><pubDate>Mon, 17 Apr 2023 17:44:43 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/imququ/http%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86%E5%8F%8A%E5%AE%9E%E7%8E%B0/</guid><description>原文 普通代理 代理服务器解析客户端req, 之后代理服务器向目标服务器发送该req 隧道代理 代理服务器监听CONNECT方法, 之后转发客户端发来的</description></item><item><title>Go语言高性能编程手册</title><link>https://jdxj.github.io/posts/articles/weixin/go%E8%AF%AD%E8%A8%80%E9%AB%98%E6%80%A7%E8%83%BD%E7%BC%96%E7%A8%8B%E6%89%8B%E5%86%8C/</link><pubDate>Mon, 17 Apr 2023 14:54:26 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/go%E8%AF%AD%E8%A8%80%E9%AB%98%E6%80%A7%E8%83%BD%E7%BC%96%E7%A8%8B%E6%89%8B%E5%86%8C/</guid><description>原文 少使用反射 优先使用 strconv 而不是 fmt 少量的重复不比反射差 慎用 binary.Read 和 binary.Write 避免重复的字符串到字节切片的转换 指定容器容量 行内拼接字符串推荐使用运算符+ 非行</description></item><item><title>SSH 安全加固的一些措施</title><link>https://jdxj.github.io/posts/articles/zzz/ssh%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</link><pubDate>Mon, 17 Apr 2023 14:39:37 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/zzz/ssh%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</guid><description>原文 可用的简单配置 # 禁用旧版本的有漏洞的 SSH 协议 # (旧版本的 sshd 默认允许新旧版本(2,1)的协议，新版本的 sshd 默认只接受新版本(2)的协议） Protocol 2 #</description></item><item><title>安装K8s</title><link>https://jdxj.github.io/posts/articles/jdxj/k8s/</link><pubDate>Mon, 17 Apr 2023 13:38:15 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/k8s/</guid><description>安装Docker Install Docker Engine on Debian 配置containerd 1 2 3 4 $ containerd config default | tee /etc/containerd/config.toml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 $ vim /etc/containerd/config.toml SystemdCgroup = true $ systemctl restart containerd 安装K8s 关闭交换 1 2 $ swapoff -a $ vim /etc/fstab 官方安装教</description></item><item><title>延迟确认</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E5%BB%B6%E8%BF%9F%E7%A1%AE%E8%AE%A4/</link><pubDate>Tue, 11 Apr 2023 20:34:56 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E5%BB%B6%E8%BF%9F%E7%A1%AE%E8%AE%A4/</guid><description>延迟确认在很多 linux 机器上是没有办法关闭的 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 static void __tcp_ack_snd_check(struct sock *sk, int ofo_possible) { struct tcp_sock *tp = tcp_sk(sk); /* More than one full frame received... */ if (((tp-&amp;gt;rcv_nxt - tp-&amp;gt;rcv_wup) &amp;gt; tp-&amp;gt;ack.rcv_mss /* ...</description></item><item><title>Nagle</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/nagle/</link><pubDate>Tue, 11 Apr 2023 20:07:52 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/nagle/</guid><description>减少发送端频繁的发送小包给对方。 算法思路 if there is new data to send if the window size &amp;gt;= MSS and available data is &amp;gt;= MSS send complete MSS segment now else if there is unconfirmed data still in the pipe enqueue data in the buffer until an acknowledge is received else send data immediately end if</description></item><item><title>拥塞控制</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 10 Apr 2023 21:01:57 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</guid><description>todo: 找一个完整的拥塞控制图</description></item><item><title>滑动窗口</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link><pubDate>Sun, 09 Apr 2023 11:43:02 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</guid><description>TCP 包状态分类 粉色部分#1 (Bytes Sent and Acknowledged)：表示已发送且已收到 ACK 确认的数据包。 蓝色部分#2 (Bytes Sent but Not Yet Acknowledged)</description></item><item><title>超时重传</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E8%B6%85%E6%97%B6%E9%87%8D%E4%BC%A0/</link><pubDate>Sun, 09 Apr 2023 11:08:12 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E8%B6%85%E6%97%B6%E9%87%8D%E4%BC%A0/</guid><description>Retransmission TimeOut，RTO 计算RTO 经典方法 适用 RTT 波动较小的情况 取平均值 Smoothed round trip time，SRTT α 是平滑因子，建议值是0.8 ~ 0.9 SRTT = ( α * SRTT )</description></item><item><title>快速重传与SACK</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E5%BF%AB%E9%80%9F%E9%87%8D%E4%BC%A0/</link><pubDate>Sun, 09 Apr 2023 10:51:53 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E5%BF%AB%E9%80%9F%E9%87%8D%E4%BC%A0/</guid><description>当发送端收到 3 个或以上重复 ACK，就意识到之前发的包可能丢了，于是马上进行重传，不用傻傻的等到超时再重传。</description></item><item><title>Socket Options</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/socket-options/</link><pubDate>Sun, 09 Apr 2023 10:05:58 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/socket-options/</guid><description>SO_LINGER SO_LINGER 参数是一个 linger 结构体 1 2 3 4 struct linger { int l_onoff; /* linger active */ int l_linger; /* how many seconds to linger for */ }; l_onoff 用来表示是否启用 linger 特性，非 0 为启用，0 为禁用 ，linux 内核默认为禁</description></item><item><title>发生RST的情景</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E5%B8%B8%E8%A7%81rst/</link><pubDate>Sun, 09 Apr 2023 09:58:47 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E5%B8%B8%E8%A7%81rst/</guid><description>端口未监听 断电丢失连接 设置SO_LINGER为true 如果设置 SO_LINGER 为 true，linger 设置为 0，当调用 socket.close() 时， close 函数会立即返回，同时丢弃缓冲</description></item><item><title>第3章 银行的中间业务</title><link>https://jdxj.github.io/posts/books/%E7%9C%8B%E9%80%8F%E9%93%B6%E8%A1%8C-%E6%8A%95%E8%B5%84%E9%93%B6%E8%A1%8C%E8%82%A1%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/%E7%AC%AC3%E7%AB%A0-%E9%93%B6%E8%A1%8C%E7%9A%84%E4%B8%AD%E9%97%B4%E4%B8%9A%E5%8A%A1/</link><pubDate>Sat, 08 Apr 2023 13:47:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E7%9C%8B%E9%80%8F%E9%93%B6%E8%A1%8C-%E6%8A%95%E8%B5%84%E9%93%B6%E8%A1%8C%E8%82%A1%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/%E7%AC%AC3%E7%AB%A0-%E9%93%B6%E8%A1%8C%E7%9A%84%E4%B8%AD%E9%97%B4%E4%B8%9A%E5%8A%A1/</guid><description>3.1 中间业务概述 什么是中间业务 商业银行的中间业务广义上是指“不构成商业银行表内资产、表内负债，形成银行非利息收入的业务” 中间业务可以分成两大类</description></item><item><title>MSL</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/msl/</link><pubDate>Sat, 08 Apr 2023 11:06:58 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/msl/</guid><description>Max Segment Lifetime MSL（报文最大生存时间）是 TCP 报文在网络中的最大生存时间。这个值与 IP 报文头的 TTL 字段有密切的关系。 TTL: IP 报文最大可经过的路由数 Linux 的套接字实</description></item><item><title>Linux内核参数优化及原理</title><link>https://jdxj.github.io/posts/articles/code2life/tcp%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</link><pubDate>Sat, 08 Apr 2023 10:06:49 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/code2life/tcp%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</guid><description>原文 修改内核参数的方法 编辑/etc/sysctl.conf添加配置 执行sysctl -p立即生效</description></item><item><title>一些关于BBR的文章</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/bbr%E5%88%86%E6%9E%90/</link><pubDate>Sat, 08 Apr 2023 09:56:37 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/bbr%E5%88%86%E6%9E%90/</guid><description>TCP拥塞控制及BBR原理分析 BBR TCP</description></item><item><title>Debian11开启BBR</title><link>https://jdxj.github.io/posts/articles/ahlxjg/bbr/</link><pubDate>Sat, 08 Apr 2023 09:11:45 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/ahlxjg/bbr/</guid><description>Debian11应该默认开启了, 验证 lsmod | grep bbr #或成功则会出现类似的内容 tcp_bbr 20480 1 参考 Debian11开启bbr</description></item><item><title>TCP Fast Open</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tfo/</link><pubDate>Wed, 05 Apr 2023 11:27:57 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tfo/</guid><description>TFO</description></item><item><title>SYN Cookie</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/syn-cookie/</link><pubDate>Wed, 05 Apr 2023 11:12:14 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/syn-cookie/</guid><description>用来解决 SYN Flood 攻击的，现在服务器上的 tcp_syncookies 都是默认等于 1，表示连接队列满时启用，等于 0 表示禁用，等于 2 表示始终启用。由 /proc/sys/net/</description></item><item><title>SYN Flood 攻击</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/syn-flood/</link><pubDate>Wed, 05 Apr 2023 11:06:54 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/syn-flood/</guid><description>客户端大量伪造 IP 发送 SYN 包，服务端回复的 ACK+SYN 去到了一个「未知」的 IP 地址，势必会造成服务端大量的连接处于 SYN_RCVD 状态，而服务器的 半连接队列大小也是有限的</description></item><item><title>连接队列</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E8%BF%9E%E6%8E%A5%E9%98%9F%E5%88%97/</link><pubDate>Wed, 05 Apr 2023 10:21:38 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E8%BF%9E%E6%8E%A5%E9%98%9F%E5%88%97/</guid><description>半连接队列（Incomplete connection queue），又称 SYN 队列 全连接队列（Completed connection queue），又称 Accept 队列 半连接队列（SYN Queu</description></item><item><title>如何在工作中学习</title><link>https://jdxj.github.io/posts/articles/plantegg/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%AD%A6%E4%B9%A0/</link><pubDate>Sun, 02 Apr 2023 18:53:40 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/plantegg/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%AD%A6%E4%B9%A0/</guid><description>原文 学习要结合实践</description></item><item><title>连接状态转换</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2/</link><pubDate>Sun, 02 Apr 2023 17:44:43 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2/</guid><description>完整的状态转换 三次握手的状态变化 同时打开的状态变化 自连接的状态变化 其实就是同时打开, 步骤5, 6在原文当中是window update包, 所以s</description></item><item><title>MSS</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/mss/</link><pubDate>Sun, 02 Apr 2023 12:09:48 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/mss/</guid><description>MSS TCP 为了避免被发送方分片，会主动把数据分割成小段再交给网络层，最大的分段大小称之为 MSS（Max Segment Size）。 MSS = MTU - IP header头大小 -</description></item><item><title>MTU</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/mtu/</link><pubDate>Sun, 02 Apr 2023 11:38:53 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/mtu/</guid><description>MTU 数据链路层传输的帧大小是有限制的，不能把一个太大的包直接塞给链路层，这个限制被称为「最大传输单元（Maximum Transmission Unit, MTU）」 MTU是指整</description></item><item><title>TCP Options</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-options/</link><pubDate>Sat, 01 Apr 2023 21:16:50 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-options/</guid><description>可选项格式 时间戳选项 TCP Timestamps Option，TSopt 由4部分组成 类别（kind） 长度（Length） 发送方时间戳（TS value） 回显时间戳（T</description></item><item><title>TCP窗口大小</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-window-size/</link><pubDate>Sat, 01 Apr 2023 21:10:57 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-window-size/</guid><description>window size只有16位, 起初表示最大窗口为65535B 后来不够用就引入了TCP窗口缩放选项, 范围为0~14 0: 不缩放 !=0: 窗口大小为 windowSize * 2^n 窗口缩放在</description></item><item><title>TCP Flags</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-flags/</link><pubDate>Sat, 01 Apr 2023 21:07:11 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-flags/</guid><description>这些标记可以组合使用，比如 SYN+ACK，FIN+ACK 等 SYN（Synchronize）：用于发起连接数据包同步双方的初始序列号 ACK（A</description></item><item><title>TCP序列号/确认号</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E5%BA%8F%E5%88%97%E5%8F%B7/tcp%E5%BA%8F%E5%88%97%E5%8F%B7/</link><pubDate>Sat, 01 Apr 2023 18:23:15 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E5%BA%8F%E5%88%97%E5%8F%B7/tcp%E5%BA%8F%E5%88%97%E5%8F%B7/</guid><description>序列号 Sequence Number 序列号指的是本报文段第一个字节的序列号 32位无符号整数 初始序列号 在建立连接之初，通信双方都会各自选择一个序列号，称之为初始序列号。</description></item><item><title>TCP Header</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-header/</link><pubDate>Sat, 01 Apr 2023 18:21:56 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp-header/</guid><description>TCP Options
-------------------------------- |type(1byte)|len(1byte)|content(len-2)| --------------------------------</description></item><item><title>TCP的特点</title><link>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E7%89%B9%E7%82%B9/</link><pubDate>Sat, 01 Apr 2023 17:39:06 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/jdxj/tcp/tcp%E7%89%B9%E7%82%B9/</guid><description>面向连接 可靠 校验和 序列号解决乱序, 重复 超时重传 流量控制, 拥塞控制 基于字节流 全双工</description></item><item><title>第9章TCP, QUIC和HTTP/3</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC4%E9%83%A8%E5%88%86-http%E7%9A%84%E6%9C%AA%E6%9D%A5/%E7%AC%AC9%E7%AB%A0tcp-quic-http3/</link><pubDate>Wed, 29 Mar 2023 20:56:14 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC4%E9%83%A8%E5%88%86-http%E7%9A%84%E6%9C%AA%E6%9D%A5/%E7%AC%AC9%E7%AB%A0tcp-quic-http3/</guid><description>9.1 TCP的低效率因素，以及HTTP TCP运行的基本方式会导致5个主要的问题，它们至少影响到了HTTP： 有一个连接创建的延迟。要在连接开始时协</description></item><item><title>5.9 HTTP/2推送的其他应用场景</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.9/</link><pubDate>Mon, 27 Mar 2023 21:12:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.9/</guid><description>如果不再严格要求只针对具体的请求响应推送，HTTP/2推送是否可以代替WebSockets或者SSE？ 当资源更新时，HTTP/2推送是否可以</description></item><item><title>5.8 对比推送和预加载</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.8/</link><pubDate>Mon, 27 Mar 2023 21:11:21 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.8/</guid><description>图5.18 使用状态码103告诉Web服务器更早推送资源 图5.19 使用带有preload首部的103状态码代替HTTP/2推送</description></item><item><title>5.7 HTTP/2推送对性能的影响</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.7/</link><pubDate>Mon, 27 Mar 2023 21:03:22 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.7/</guid><description>高效使用HTTP/2推送的关键是利用连接未被使用时的空闲带宽。 图5.17 HTTP/2推送的资源和主动请求的资源响应时间不同</description></item><item><title>5.6 HTTP/2推送常见问题</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.6/</link><pubDate>Mon, 27 Mar 2023 20:59:53 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.6/</guid><description>你在使用HTTP/2吗？ 你的服务器支持HTTP/2推送吗？ 你的服务器在其他基础架构之后吗？如果你的服务器之前有负载均衡器，或者其他中断HTT</description></item><item><title>5.5 推送什么</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.5/</link><pubDate>Mon, 27 Mar 2023 20:49:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.5/</guid><description>5.5.1 你能推送什么 规范规定了一些HTTP/2推送的基本规则： 在SETTINGS帧中将SETTINGS_ENABLE_PUSH设置为0，客户端可以</description></item><item><title>5.4 如何实现条件推送</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.4/</link><pubDate>Mon, 27 Mar 2023 20:30:35 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.4/</guid><description>使用HTTP/2推送的风险是推送浏览器不需要的资源 5.4.1 在服务端跟踪推送的资源 需要记状态, 比较复杂 会遇到资源限制 负载均衡问题 5.4.2 使用HTTP条件请</description></item><item><title>5.06 差速器锁Differential Lock</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.06/</link><pubDate>Sun, 26 Mar 2023 18:32:27 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.06/</guid><description>差速器锁 为什么越野型汽车要配差速器锁？ 限滑差速器只能部分阻止车轮的差速，而对于强调越野性的车型来说，在越野时最好是将差速器锁死，使其完全失去</description></item><item><title>5.5 差速限制器 Differential Limiter</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.05/</link><pubDate>Sun, 26 Mar 2023 18:21:49 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.05/</guid><description>为什么差速器会导致车轮打滑？ 四驱汽车差速器作用示意图 什么是差速限制器？ 我们将用来限制差速器差速功能的装置，称为差速限制器。差速限制器根据行驶</description></item><item><title>5.4 差速器 Differential</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.04/</link><pubDate>Sun, 26 Mar 2023 18:10:15 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.04/</guid><description>为什么汽车需要差速器？ 对于驱动轮来讲，由于左右两侧的车轮都接受来自发动机和变速器的同样的力，要想让它们在接受同样驱动力的情况下又能和谐运转，</description></item><item><title>5.3 传动轴和半轴 Drive Shaft and Half Shaft</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.03/</link><pubDate>Sun, 26 Mar 2023 17:42:55 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.03/</guid><description>传动轴和半轴起什么作用？ 发动机的动力经变速器调整，最后要传递到驱动轮上。如果是前置发动机、后轮驱动的车辆，要用一根传动轴将动力从车辆前部传递</description></item><item><title>5.2 离合器 Clutch</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.02/</link><pubDate>Sun, 26 Mar 2023 17:29:17 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.02/</guid><description>为什么说离合器是动力开关？ 传动系统 为了让发动机的动力能够平顺地传递到变速器，离合器必须采用摩擦方式进行接触，而不能采用刚性连接。因此，才出现</description></item><item><title>第2章 银行的资产业务</title><link>https://jdxj.github.io/posts/books/%E7%9C%8B%E9%80%8F%E9%93%B6%E8%A1%8C-%E6%8A%95%E8%B5%84%E9%93%B6%E8%A1%8C%E8%82%A1%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/%E7%AC%AC2%E7%AB%A0-%E9%93%B6%E8%A1%8C%E7%9A%84%E8%B5%84%E4%BA%A7%E4%B8%9A%E5%8A%A1/</link><pubDate>Sun, 26 Mar 2023 14:06:28 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E7%9C%8B%E9%80%8F%E9%93%B6%E8%A1%8C-%E6%8A%95%E8%B5%84%E9%93%B6%E8%A1%8C%E8%82%A1%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/%E7%AC%AC2%E7%AB%A0-%E9%93%B6%E8%A1%8C%E7%9A%84%E8%B5%84%E4%BA%A7%E4%B8%9A%E5%8A%A1/</guid><description>2.1 资产业务概述 银行通过网点服务客户获得的各种负债，最终必须通过配置到不同类别的资产中，进而获得利息收入。 收益与风险的平衡 通常银行的资产收益率</description></item><item><title>5.3 HTTP/2推送在浏览器中如何运作</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.3/</link><pubDate>Sun, 26 Mar 2023 12:13:30 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.3/</guid><description>具体和实现有关, 服务器推送的资源, 大多数浏览器不会立即使用, 而是放到缓存中, 如果浏览器需要某资源先去缓存中查找. 5.3.1 查看推送缓存如何工作 推送的</description></item><item><title>5.1 传动形式 Drive Type</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.01/</link><pubDate>Sat, 25 Mar 2023 17:55:14 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC5%E7%AB%A0-%E4%BC%A0%E5%8A%A8%E7%B3%BB%E7%BB%9F/5.01/</guid><description>汽车都有哪些传动形式？ 前置发动机、前轮驱动车型（F F），对车内空间安排比较有利，发动机、变速器、传动机构都整合在车头部位，甚至都在前车轴上方</description></item><item><title>4.11 变速器档位数</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.11/</link><pubDate>Sat, 25 Mar 2023 17:46:59 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.11/</guid><description>变速器档位数的多少对汽车性能有什么影响？ 对于汽车来说，变速器的档位数较多，那么汽车加速时更顺畅、省力，加速时的顿挫感也较小，舒适性会更好，同</description></item><item><title>4.10 自动离合变速器（AMT）</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.10/</link><pubDate>Sat, 25 Mar 2023 17:45:15 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.10/</guid><description>自动离合变速器是怎样变速的？ 自动离合变速器是在手动变速器的基础上加装一套自动换档装置，它可以替代驾驶人进行离合器分离及更换档位的动作。它的基</description></item><item><title>4.9 序列式变速器（SMG）</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.09/</link><pubDate>Sat, 25 Mar 2023 17:39:36 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.09/</guid><description>序列式变速器是怎样变速的？ 序列式变速器简称为SMG（Sequential Manual Gearbox），全称为序列式手动变速器。 序列式变速器（SMG）构</description></item><item><title>4.8 双离合变速器（DCT）</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.08/</link><pubDate>Sat, 25 Mar 2023 17:30:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.08/</guid><description>双离合变速器是怎样变速的？ 双离合变速器（Double Clutch Transmission，简称DCT）是从手动变速器进化而来的，它的变速结构和原理与手</description></item><item><title>5.2 如何推送</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.2/</link><pubDate>Sat, 25 Mar 2023 11:32:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.2/</guid><description>5.2.1 使用HTTP link首部推送 nginx 例子来源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 server { listen 443 ssl http2 default_server; ssl_certificate ssl/certificate.pem; ssl_certificate_key ssl/key.pem; root /var/www/html; http2_push_preload on; location = /demo.html { add_header Set-Cookie &amp;#34;session=1&amp;#34;; add_header Link $resources; } } map $http_cookie $resources {</description></item><item><title>5.1 什么是HTTP/2服务端推送</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.1/</link><pubDate>Sat, 25 Mar 2023 11:17:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC5%E7%AB%A0-%E5%AE%9E%E7%8E%B0http2%E6%8E%A8%E9%80%81/5.1/</guid><description>HTTP/2服务端推送（以下称为HTTP/2推送）允许服务器发回客户端未请求的额外资源。 HTTP/2多路复用技术允许在同一连接上并行请求所有</description></item><item><title>4.3 HTTP/2帧</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC4%E7%AB%A0-http2%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/4.3/</link><pubDate>Sat, 25 Mar 2023 11:09:37 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC4%E7%AB%A0-http2%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/4.3/</guid><description>4.3.1 查看HTTP/2帧 使用Chrome net-export 抓包chrome://net-export 查看日志 https://netlog-viewer.appspot.com/#import 图4.7 在Chrome中查看HTTP/2帧 以下输出</description></item><item><title>4.2 如何创建一个HTTP/2连接</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC4%E7%AB%A0-http2%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/4.2/</link><pubDate>Sat, 25 Mar 2023 11:05:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC4%E7%AB%A0-http2%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/4.2/</guid><description>使用HTTPS协商。 使用HTTP Upgrade首部。 和之前的连接保持一致。 理论上，HTTP/2支持基于未加密的HTTP（也就是h2c）创建连</description></item><item><title>4.1 为什么是HTTP/2而不是HTTP/1.2</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC4%E7%AB%A0-http2%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/4.1/</link><pubDate>Sat, 25 Mar 2023 11:02:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC2%E9%83%A8%E5%88%86-%E4%BD%BF%E7%94%A8http2/%E7%AC%AC4%E7%AB%A0-http2%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/4.1/</guid><description>新版本的协议与原来的协议有很大的不同，新增了如下概念： 二进制协议 多路复用 流量控制功能 数据流优先级 首部压缩 服务端推送 HTTP/1.0的Web服</description></item><item><title>第3章 升级到HTTP/2</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC1%E9%83%A8%E5%88%86-%E5%90%91http2%E9%9D%A0%E6%8B%A2/%E7%AC%AC3%E7%AB%A0-%E5%8D%87%E7%BA%A7%E5%88%B0http2/</link><pubDate>Mon, 20 Mar 2023 21:58:08 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC1%E9%83%A8%E5%88%86-%E5%90%91http2%E9%9D%A0%E6%8B%A2/%E7%AC%AC3%E7%AB%A0-%E5%8D%87%E7%BA%A7%E5%88%B0http2/</guid><description>3.1 HTTP/2的支持 你能否在网站上使用新的网络技术，主要取决于三点： 浏览器是否支持这项技术？ 你的基础设施是否支持？ 如果这项技术未获得支持，是</description></item><item><title>直接展示结果到终端而不是pager</title><link>https://jdxj.github.io/posts/cmd/git/%E7%9B%B4%E6%8E%A5%E5%B1%95%E7%A4%BA%E7%BB%93%E6%9E%9C%E5%88%B0%E7%BB%88%E7%AB%AF%E8%80%8C%E4%B8%8D%E6%98%AFpager/</link><pubDate>Mon, 20 Mar 2023 16:18:51 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E7%9B%B4%E6%8E%A5%E5%B1%95%E7%A4%BA%E7%BB%93%E6%9E%9C%E5%88%B0%E7%BB%88%E7%AB%AF%E8%80%8C%E4%B8%8D%E6%98%AFpager/</guid><description>要不还得按&lt;code>q&lt;/code>退出</description></item><item><title>4.7 无级变速器（CVT）</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.07/</link><pubDate>Sun, 19 Mar 2023 18:47:45 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.07/</guid><description>无级变速器如何实现无级变速的？ 无级变速器的主要部件是两个滑轮和一条金属带，金属带套在两个滑轮上。 无级变速器 奥迪无级变速器工作原理示意图 无级变</description></item><item><title>4.6 行星齿轮变速系统</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.06/</link><pubDate>Sun, 19 Mar 2023 18:33:23 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.06/</guid><description>自动变速器是怎样利用行星齿轮变速的？ 自动变速器由两大部分组成：一是前面介绍的液力变矩器；二是下面要介绍的行星齿轮变速系统。 从发动机输出的动力</description></item><item><title>4.5 液力变矩器 Hydraulic Torque Converter</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.05/</link><pubDate>Sun, 19 Mar 2023 18:22:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.05/</guid><description>液力变矩器是怎样工作的？ 液力变矩器主要由三个“轮”组成：泵轮、导轮和涡轮。在三个轮之间充满了液压油。泵轮与发动机曲轴相连，当发动机旋转时，泵</description></item><item><title>4.4 自动变速器（AT）Automatic Transmission</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.04/</link><pubDate>Sun, 19 Mar 2023 18:03:49 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.04/</guid><description>奥迪汽车6速自动变速器构造示意图 为什么自动变速器没有离合器？ 自动变速器组成: 液力变矩器、控制器、电磁控制机构、多片离合器和行星齿轮等 液力变矩</description></item><item><title>4.3 同步器 Synchronizer</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.03/</link><pubDate>Sun, 19 Mar 2023 17:36:41 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.03/</guid><description>为什么手动变速器需要同步器？ 在手动变速器上，所有档位的主动齿轮和从动齿轮副都一直处于啮合状态并持续旋转，但只有一个档位的齿轮副与动力输出轴相</description></item><item><title>4.2 手动变速器 (MT) Manual Transmission</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.02/</link><pubDate>Sun, 19 Mar 2023 17:05:05 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.02/</guid><description>手动变速器 手动变速器是怎样变速的？ 当离合器接合时，不管是在空档还是在任何档位，变速器中每个档位的主动齿轮（红色齿轮）以及每个档位的从动齿轮（</description></item><item><title>4.1 变速原理 Transmission Principle</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.01/</link><pubDate>Sun, 19 Mar 2023 16:36:06 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC4%E7%AB%A0-%E5%8F%98%E9%80%9F%E5%99%A8/4.01/</guid><description>为什么汽车需要变速器？ 自行车变速原理示意图 当主动链轮的直径和转速固定不变时，从动链轮越小，从动链轮的转速也会越高，输出的转矩也会越小；反之亦</description></item><item><title>第1章 银行的负债业务</title><link>https://jdxj.github.io/posts/books/%E7%9C%8B%E9%80%8F%E9%93%B6%E8%A1%8C-%E6%8A%95%E8%B5%84%E9%93%B6%E8%A1%8C%E8%82%A1%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/%E7%AC%AC1%E7%AB%A0-%E9%93%B6%E8%A1%8C%E7%9A%84%E8%B4%9F%E5%80%BA%E4%B8%9A%E5%8A%A1/</link><pubDate>Sun, 19 Mar 2023 14:19:36 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E7%9C%8B%E9%80%8F%E9%93%B6%E8%A1%8C-%E6%8A%95%E8%B5%84%E9%93%B6%E8%A1%8C%E8%82%A1%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/%E7%AC%AC1%E7%AB%A0-%E9%93%B6%E8%A1%8C%E7%9A%84%E8%B4%9F%E5%80%BA%E4%B8%9A%E5%8A%A1/</guid><description>1.1 负债概述 银行负债业务的主要目标就是给银行提供放贷用的资金。 现代银行的业务模式和我们日常生活中的个人借贷不同，平时我们借钱给亲戚朋友是用我们</description></item><item><title>第10章 典型消费品企业财报分析</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC10%E7%AB%A0-%E5%85%B8%E5%9E%8B%E6%B6%88%E8%B4%B9%E5%93%81%E4%BC%81%E4%B8%9A%E8%B4%A2%E6%8A%A5%E5%88%86%E6%9E%90/</link><pubDate>Sun, 19 Mar 2023 13:09:04 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC10%E7%AB%A0-%E5%85%B8%E5%9E%8B%E6%B6%88%E8%B4%B9%E5%93%81%E4%BC%81%E4%B8%9A%E8%B4%A2%E6%8A%A5%E5%88%86%E6%9E%90/</guid><description>跳过</description></item><item><title>http archive</title><link>https://jdxj.github.io/posts/data/httparchive/</link><pubDate>Sun, 19 Mar 2023 10:08:11 +0800</pubDate><guid>https://jdxj.github.io/posts/data/httparchive/</guid><description>主页</description></item><item><title>3.19 转子发动机 Rotary Engine</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.19/</link><pubDate>Sat, 18 Mar 2023 18:46:28 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.19/</guid><description>转子发动机是怎样产生动力的？ 现在所说的转子发动机，是指德国工程师菲利克斯·汪克尔在20世纪50年代设计的三角形活塞式转子发动机。因此，转子发</description></item><item><title>3.18 柴油发动机 Diesel Engine</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.18/</link><pubDate>Sat, 18 Mar 2023 16:01:14 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.18/</guid><description>奔驰V6柴油发动机构造图 柴油发动机 为什么柴油发动机没有点火系统？ 柴油发动机是一种压燃式内燃机，是以柴油为燃料的内燃机。柴油发动机利用气体被压</description></item><item><title>3.17 润滑系统 Lubrication System</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.17/</link><pubDate>Sat, 18 Mar 2023 15:37:00 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.17/</guid><description>发动机润滑系统示意图 发动机润滑过程 机油在发动机内是怎样流动的？ 当发动机不工作时，机油主要储存在油底壳。当发动机运转时，机油从油底壳经机油集滤</description></item><item><title>3.16 冷却系统 Coolant System</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.16/</link><pubDate>Sat, 18 Mar 2023 14:32:02 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.16/</guid><description>发动机都有哪些冷却方式？ 风冷是在气缸体周围设计散热片，利用自然风或风扇来吹散发动机的热气，达到降低发动机温度的目的。 水冷是指利用冷却液来降低</description></item><item><title>3.15 发动机主运动部件 Engine Major Moving Parts</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.15/</link><pubDate>Sat, 18 Mar 2023 13:37:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.15/</guid><description>活塞的直线运动怎样转变成曲轴的旋转运动？ 与我们骑自行车的情况类似。 活塞相当于人的膝盖，连杆相当于人的小腿，曲轴相当于脚蹬子，当活塞上下运动时</description></item><item><title>3.14 发动机整体构造 Engine Structure</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.14/</link><pubDate>Sat, 18 Mar 2023 13:36:35 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.14/</guid><description>发动机共有多少个部件？ 根据构造复杂程度的不同，一台发动机不可拆解的零部件总数，大概为300～600个。据称，一辆法拉利跑车的发动机约有800</description></item><item><title>3.13 点火起动系统 Ignition Starting System</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.13/</link><pubDate>Sat, 18 Mar 2023 13:35:35 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.13/</guid><description>为什么说火花塞像闪电？ 火花塞构造图 要想产生燃烧，必须满足三个条件：燃料、氧气和温度。 柴油发动机上没有火花塞，它是先将气缸内的空气强力压缩，直</description></item><item><title>3.12 燃油供给系统 Fuel Supply System</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.12/</link><pubDate>Sat, 18 Mar 2023 13:34:41 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.12/</guid><description>多点喷射和单点喷射有什么不同？ 如果每个气缸的进气歧管上都单独装配一个喷油器，每个喷油器只向一个气缸喷射燃油，那么就称之为多点喷射（M P I）。</description></item><item><title>3.11 机械增压器 Supercharger</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.11/</link><pubDate>Sat, 18 Mar 2023 13:34:05 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.11/</guid><description>机械增压器 机械增压器是怎样工作的？ 机械增压（Supercharger）与涡轮增压的原理完全不同，它并不是依靠排出的废气来压缩进气，而是通过一</description></item><item><title>3.10 涡轮增压器 Turbocharger</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.10/</link><pubDate>Sat, 18 Mar 2023 13:33:05 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.10/</guid><description>涡轮增压器 涡轮增压器如何增压？ 涡轮增压（Turbocharger）发动机，是指利用排气冲击涡轮来压缩进气的增压发动机，简称Turbo或T。如</description></item><item><title>3.9 可变气缸 Variable Cylinder</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.09/</link><pubDate>Sat, 18 Mar 2023 13:32:26 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.09/</guid><description>可变气缸和可变排量是怎么回事？ 每个厂商的可变气缸技术并不完全相同，但基本都是采用关闭气门和停止喷油的方式来关闭气缸的。 Did You Know? 在进排气凸轮轴上</description></item><item><title>3.8 可变气门技术 Variable Valve Technology</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.08/</link><pubDate>Sat, 18 Mar 2023 13:31:36 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.08/</guid><description>可变气门有什么优点？ 当高转速时，需要吸入更多的空气（混合气），因此如果能把气门提得更高些（改变升程）或延长气门的打开时间（改变正时），便能满</description></item><item><title>3.7 气门和气门正时 Valve and Valve Timing</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.07/</link><pubDate>Sat, 18 Mar 2023 13:30:22 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.07/</guid><description>气缸内部构造图 进气门和排气门 进气门为什么比排气门大？ 因为进气是被“吸”进去的，而排气是被“推”出去的，所以进气比排气更困难，而且进气越多，燃</description></item><item><title>3.6 进气和排气系统 Intake and Exhaust System</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.06/</link><pubDate>Sat, 18 Mar 2023 13:28:38 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.06/</guid><description>为什么发动机要进气和排气？ 空气由进气口进入，通过空气滤清器过滤后，经进气歧管进入气缸，并在进气歧管内布置有节气门和空气流量计来控制和调节进气</description></item><item><title>3.5 发动机工作循环 Engine Working Cycle</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.05/</link><pubDate>Sat, 18 Mar 2023 13:27:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.05/</guid><description>为什么发动机会发出有节奏的声音？ 活塞在气缸中要完成吸气、压缩、燃烧和排气四个行程，才算是完成一个工作循环。在此期间，活塞要在气缸内上下各两次</description></item><item><title>3.4 发动机燃烧原理 Engine Combustion Principle</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.04/</link><pubDate>Sat, 18 Mar 2023 13:26:31 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.04/</guid><description>为什么发动机需要吸入大量的空气？ 书中没直接描述原因, 猜测是氧气不足时会导致能量转换效率不高. 汽油蕴含巨大能量 同等重量情况下，汽油所含能量大约</description></item><item><title>3.3 发动机工作过程 Engine Working Process</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.03/</link><pubDate>Sat, 18 Mar 2023 13:25:05 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.03/</guid><description>汽油在气缸内燃烧爆炸示意图 为什么说发动机动力来自于爆炸？ 如果将汽油和空气按照最适合的燃烧比例（1∶14.7）混合，并对它们进行大力压缩使之温</description></item><item><title>3.2 气缸排列形式 Cylinder Arrangement</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.02/</link><pubDate>Sat, 18 Mar 2023 13:23:44 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.02/</guid><description>发动机的气缸有哪几种排列形式？ 最常见的有3种气缸排列形式：直列、V形和水平对置。 还有一种W形气缸排列形式，但这种形式较为少见，而且与V形发动</description></item><item><title>3.1 发动机基本原理 Engine Principle</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.01/</link><pubDate>Sat, 18 Mar 2023 13:22:16 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC3%E7%AB%A0-%E5%8F%91%E5%8A%A8%E6%9C%BA/3.01/</guid><description>汽车动力从哪里来？ 汽车动力来源于它的“心脏”，也就是发动机。那么发动机的“心脏”是什么？气缸！ 汽油发动机构造剖视图 直列4缸汽油发动机构造图 发</description></item><item><title>第9章 未来消费品新机会</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC9%E7%AB%A0-%E6%9C%AA%E6%9D%A5%E6%B6%88%E8%B4%B9%E5%93%81%E6%96%B0%E6%9C%BA%E4%BC%9A/</link><pubDate>Sat, 18 Mar 2023 13:07:53 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC9%E7%AB%A0-%E6%9C%AA%E6%9D%A5%E6%B6%88%E8%B4%B9%E5%93%81%E6%96%B0%E6%9C%BA%E4%BC%9A/</guid><description>9.1 新消费主张带来新品牌崛起 我们通常把1995～2010年出生的一代人称为“Z世代”。 “Z世代”是注重个体、追求悦己的一代。追求品质, 强调个性</description></item><item><title>红人点集</title><link>https://jdxj.github.io/posts/data/hh1024/</link><pubDate>Sat, 18 Mar 2023 12:56:57 +0800</pubDate><guid>https://jdxj.github.io/posts/data/hh1024/</guid><description>主页</description></item><item><title>第2章 通向http2之路</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC1%E9%83%A8%E5%88%86-%E5%90%91http2%E9%9D%A0%E6%8B%A2/%E7%AC%AC2%E7%AB%A0-%E9%80%9A%E5%90%91http2%E4%B9%8B%E8%B7%AF/</link><pubDate>Sat, 18 Mar 2023 11:23:11 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC1%E9%83%A8%E5%88%86-%E5%90%91http2%E9%9D%A0%E6%8B%A2/%E7%AC%AC2%E7%AB%A0-%E9%80%9A%E5%90%91http2%E4%B9%8B%E8%B7%AF/</guid><description>2.1 HTTP/1.1和当前的万维网 图2.1 网站加载内容平均大小（2014年—2018年） 表2.1 美国访问量排名前10网站 2.1.1 HTTP/1.1根本</description></item><item><title>第1章 万维网与HTTP</title><link>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC1%E9%83%A8%E5%88%86-%E5%90%91http2%E9%9D%A0%E6%8B%A2/%E7%AC%AC1%E7%AB%A0-%E4%B8%87%E7%BB%B4%E7%BD%91%E4%B8%8Ehttp/</link><pubDate>Thu, 16 Mar 2023 21:40:27 +0800</pubDate><guid>https://jdxj.github.io/posts/books/http2-in-action/%E7%AC%AC1%E9%83%A8%E5%88%86-%E5%90%91http2%E9%9D%A0%E6%8B%A2/%E7%AC%AC1%E7%AB%A0-%E4%B8%87%E7%BB%B4%E7%BD%91%E4%B8%8Ehttp/</guid><description>1.1 万维网的原理 HTTP是访问远程Web应用和资源的关键技术。 1.1.1 因特网与万维网 因特网(Internet)和万维网(World Wide Web或Web)</description></item><item><title>2-10 SQL中的层级</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-10-sql%E4%B8%AD%E7%9A%84%E5%B1%82%E7%BA%A7/</link><pubDate>Thu, 16 Mar 2023 20:55:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-10-sql%E4%B8%AD%E7%9A%84%E5%B1%82%E7%BA%A7/</guid><description>谓词逻辑中的层级、集合论中的层级 对于EXISTS来说，层级的差别与EXISTS谓词及其参数有关，因此属于谓词逻辑中的阶。而GROUP BY中的</description></item><item><title>2-9 消灭NULL委员会</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-9-%E6%B6%88%E7%81%ADnull%E5%A7%94%E5%91%98%E4%BC%9A/</link><pubDate>Thu, 16 Mar 2023 20:23:52 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-9-%E6%B6%88%E7%81%ADnull%E5%A7%94%E5%91%98%E4%BC%9A/</guid><description>~告全体数据库工程师书~ NULL这个怪物最可怕的地方：一开始会让我们觉得很好用，于是在设计系统时，我们会非常自然地保留它，但当注意到问题的时</description></item><item><title>2-8 人类的逻辑学</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-8-%E4%BA%BA%E7%B1%BB%E7%9A%84%E9%80%BB%E8%BE%91%E5%AD%A6/</link><pubDate>Wed, 15 Mar 2023 22:17:32 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-8-%E4%BA%BA%E7%B1%BB%E7%9A%84%E9%80%BB%E8%BE%91%E5%AD%A6/</guid><description>适当地抛开命题的真假吧 历史上最早提出三值逻辑（three-valued-logic）体系的是波兰的著名逻辑学家卢卡西维茨（Jan Lukasiewicz, 1878—</description></item><item><title>2-7 SQL和递归集合</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-7-sql%E5%92%8C%E9%80%92%E5%BD%92%E9%9B%86%E5%90%88/</link><pubDate>Wed, 15 Mar 2023 21:54:43 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-7-sql%E5%92%8C%E9%80%92%E5%BD%92%E9%9B%86%E5%90%88/</guid><description>实际工作中的递归集合 冯·诺依曼究竟是如何想到“用集合定义自然数”这样非同寻常的方法的呢？ 冯·诺依曼的前辈们 冯·诺依曼提出用递归集合定义自然数</description></item><item><title>2-6 从面向过程思维向声明式思维, 面向集合思维转变的7个关键点</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-6-%E4%BB%8E%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</link><pubDate>Tue, 14 Mar 2023 21:29:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-6-%E4%BB%8E%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</guid><description>不管是面向过程语言还是文件系统，都是将复杂的东西看成是由简单单元组合而成的——这是一种还原论的思维方式。 SQL中没有赋值或者循环的处理，数据</description></item><item><title>2-4 地址这一巨大的怪物</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-4-%E5%9C%B0%E5%9D%80%E8%BF%99%E4%B8%80%E5%B7%A8%E5%A4%A7%E7%9A%84%E6%80%AA%E7%89%A9/</link><pubDate>Tue, 14 Mar 2023 21:07:48 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-4-%E5%9C%B0%E5%9D%80%E8%BF%99%E4%B8%80%E5%B7%A8%E5%A4%A7%E7%9A%84%E6%80%AA%E7%89%A9/</guid><description>写在前面 关系数据库中不存在编程语言中一般被称为“指针”的物理性数据结构。但是严格来说，它其实是存在的，只不过被隐藏了，因而对用户不可见。 不过</description></item><item><title>Go工程化 - 手摸手带你理解依赖注入</title><link>https://jdxj.github.io/posts/articles/weixin/di/</link><pubDate>Tue, 14 Mar 2023 16:01:17 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/di/</guid><description>原文</description></item><item><title>一文搞定Containerd的使用</title><link>https://jdxj.github.io/posts/articles/weixin/%E4%B8%80%E6%96%87%E6%90%9E%E5%AE%9Acontainerd%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 14 Mar 2023 15:29:06 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/%E4%B8%80%E6%96%87%E6%90%9E%E5%AE%9Acontainerd%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>了解啥是libcontainer、runc、containerd、CRI、OCI 原文</description></item><item><title>2-3 开始于关系, 结束于关系</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-3-%E5%BC%80%E5%A7%8B%E4%BA%8E%E5%85%B3%E7%B3%BB-%E7%BB%93%E6%9D%9F%E4%BA%8E%E5%85%B3%E7%B3%BB/</link><pubDate>Mon, 13 Mar 2023 21:29:13 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-3-%E5%BC%80%E5%A7%8B%E4%BA%8E%E5%85%B3%E7%B3%BB-%E7%BB%93%E6%9D%9F%E4%BA%8E%E5%85%B3%E7%B3%BB/</guid><description>从运算角度审视集合 “封闭性”（closure property）, 这个性质简单地说就是“运算的输入和输出都是关系” 多亏了关系的封闭性，这些运算</description></item><item><title>2-2 为什么叫关系模型</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-2-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 13 Mar 2023 20:47:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-2-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B/</guid><description>为什么不叫“表”模型 Codd: 当初思考关系模型的时候，从事数据处理工作的人们有一种普遍的观点，即认为多个对象之间的关系（或者关联）必须通过一种链接数</description></item><item><title>第8章 渠道变革的真相</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC8%E7%AB%A0-%E6%B8%A0%E9%81%93%E5%8F%98%E9%9D%A9%E7%9A%84%E7%9C%9F%E7%9B%B8/</link><pubDate>Sun, 12 Mar 2023 16:11:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC8%E7%AB%A0-%E6%B8%A0%E9%81%93%E5%8F%98%E9%9D%A9%E7%9A%84%E7%9C%9F%E7%9B%B8/</guid><description>8.1 为什么中国没有本土大型连锁便利店 电商改变了中国零售行业的发展路径 图8-1 2021年我国消费品零售渠道分布 电商的出现改变了我国零售行业的发展</description></item><item><title>魔镜市场情报</title><link>https://jdxj.github.io/posts/data/mktindex/</link><pubDate>Sun, 12 Mar 2023 14:41:24 +0800</pubDate><guid>https://jdxj.github.io/posts/data/mktindex/</guid><description>主页</description></item><item><title>多多情报通</title><link>https://jdxj.github.io/posts/data/mobduos/</link><pubDate>Sun, 12 Mar 2023 14:35:31 +0800</pubDate><guid>https://jdxj.github.io/posts/data/mobduos/</guid><description>主页</description></item><item><title>2-1 关系数据库的历史</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-1-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8E%86%E5%8F%B2/</link><pubDate>Sun, 12 Mar 2023 13:40:10 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-1-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8E%86%E5%8F%B2/</guid><description>写在前面 关系模型的创始人E.F.Codd（1923—2003）。 下面的内容主要依据C.J.Date的著作The Database Relation Model。 两篇论文 Cod</description></item><item><title>飞瓜数据</title><link>https://jdxj.github.io/posts/data/feigua/</link><pubDate>Sat, 11 Mar 2023 11:29:54 +0800</pubDate><guid>https://jdxj.github.io/posts/data/feigua/</guid><description>主页</description></item><item><title>小葫芦大数据</title><link>https://jdxj.github.io/posts/data/coonav/</link><pubDate>Sat, 11 Mar 2023 11:14:36 +0800</pubDate><guid>https://jdxj.github.io/posts/data/coonav/</guid><description/></item><item><title>壁虎看看</title><link>https://jdxj.github.io/posts/data/bihukankan/</link><pubDate>Sat, 11 Mar 2023 11:08:25 +0800</pubDate><guid>https://jdxj.github.io/posts/data/bihukankan/</guid><description>主页</description></item><item><title>前瞻产业研究院</title><link>https://jdxj.github.io/posts/data/qianzhan/</link><pubDate>Sat, 11 Mar 2023 11:06:48 +0800</pubDate><guid>https://jdxj.github.io/posts/data/qianzhan/</guid><description>主页</description></item><item><title>1-12 SQL编程方法</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-12-sql%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 11 Mar 2023 10:29:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-12-sql%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95/</guid><description>写在前面 下面两张卡片上各画了几个圆圈，哪个更容易数清楚呢？ 编程行为就像是一种沟通方式。因此，对编程风格的研究也可以看成是对提高系统开发中沟通</description></item><item><title>链路追踪（Tracing）的前世今生（上）</title><link>https://jdxj.github.io/posts/articles/weixin/tracing/</link><pubDate>Fri, 10 Mar 2023 14:41:18 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/tracing/</guid><description>原文</description></item><item><title>高可用Redis服务架构分析与搭建</title><link>https://jdxj.github.io/posts/articles/xuning/redis/</link><pubDate>Fri, 10 Mar 2023 14:19:36 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/xuning/redis/</guid><description>原文</description></item><item><title>如何获取客户端真实 IP？从 Gin 的一个 "Bug" 说起</title><link>https://jdxj.github.io/posts/articles/weixin/ip/</link><pubDate>Fri, 10 Mar 2023 13:56:11 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/ip/</guid><description>边缘节点应该用以下方法来设置 proxy_set_header X-Forwarded-For $remote_addr; 原文</description></item><item><title>1-11 让SQL飞起来</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-11-%E8%AE%A9sql%E9%A3%9E%E8%B5%B7%E6%9D%A5/</link><pubDate>Thu, 09 Mar 2023 21:13:35 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-11-%E8%AE%A9sql%E9%A3%9E%E8%B5%B7%E6%9D%A5/</guid><description>推荐看</description></item><item><title>1-10 HAVING子句又回来了</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-10-having%E5%AD%90%E5%8F%A5%E5%8F%88%E5%9B%9E%E6%9D%A5%E4%BA%86/</link><pubDate>Wed, 08 Mar 2023 21:39:31 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-10-having%E5%AD%90%E5%8F%A5%E5%8F%88%E5%9B%9E%E6%9D%A5%E4%BA%86/</guid><description>各队，全体点名 你需要做的是查出现在可以出勤的队伍。可以出勤即队伍里所有队员都处于“待命”状态。 Teams “所有队员都处于‘待命’状态”这个条件是全称</description></item><item><title>1-9 用SQL处理数列</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-9-%E7%94%A8sql%E5%A4%84%E7%90%86%E6%95%B0%E5%88%97/</link><pubDate>Tue, 07 Mar 2023 21:49:48 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-9-%E7%94%A8sql%E5%A4%84%E7%90%86%E6%95%B0%E5%88%97/</guid><description>生成连续编号 谜题：00～99的100个数中，0, 1, 2, …, 9这10个数字分别出现了多少次？ 00～99的数中，数字0～9各出现了20次 无论多大的</description></item><item><title>1-8 EXISTS谓词的用法</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-8-exists%E8%B0%93%E8%AF%8D%E7%9A%84%E7%94%A8%E6%B3%95/</link><pubDate>Mon, 06 Mar 2023 21:42:02 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-8-exists%E8%B0%93%E8%AF%8D%E7%9A%84%E7%94%A8%E6%B3%95/</guid><description>理论篇 什么是谓词 谓词是一种特殊的函数，返回值是真值。 true false unknown 在关系数据库里，表中的一行数据可以看作是一个命题。 Tbl_A 实体的阶层 同样是谓词，但是与=</description></item><item><title>1-7 用SQL进行集合运算</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-7-%E7%94%A8sql%E8%BF%9B%E8%A1%8C%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97/</link><pubDate>Thu, 02 Mar 2023 21:38:49 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-7-%E7%94%A8sql%E8%BF%9B%E8%A1%8C%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97/</guid><description>导入篇：集合运算的几个注意事项 注意事项1: SQL能操作具有重复行的集合，可以通过可选项ALL来支持 一般的集合论不允许集合中存在重复元素 关系数</description></item><item><title>1-6 用关联子查询比较行与行</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-6-%E7%94%A8%E5%85%B3%E8%81%94%E5%AD%90%E6%9F%A5%E8%AF%A2%E6%AF%94%E8%BE%83%E8%A1%8C%E4%B8%8E%E8%A1%8C/</link><pubDate>Wed, 01 Mar 2023 21:54:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-6-%E7%94%A8%E5%85%B3%E8%81%94%E5%AD%90%E6%9F%A5%E8%AF%A2%E6%AF%94%E8%BE%83%E8%A1%8C%E4%B8%8E%E8%A1%8C/</guid><description>使用SQL进行行间比较时，发挥主要作用的技术是关联子查询，特别是与自连接相结合的“自关联子查询” 增长、减少、维持现状 Sales 年营业额的趋势 使用SQ</description></item><item><title>2-5 GROUP BY和PARTITION BY.md</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-5-group-by%E5%92%8Cpartition-by/</link><pubDate>Wed, 01 Mar 2023 21:54:29 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%96%E7%95%8C/2-5-group-by%E5%92%8Cpartition-by/</guid><description>本节将以集合论和群论中的“类”这一重要概念为核心，阐明GROUP BY和PARTITION BY的意义。 SQL的语句中具有分组功能的是GROUP</description></item><item><title>1-5 外连接的用法</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-5-%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%94%A8%E6%B3%95/</link><pubDate>Tue, 28 Feb 2023 21:44:37 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-5-%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%94%A8%E6%B3%95/</guid><description>用外连接进行行列转换(1)（行→列）：制作交叉表 员工学习过的培训课程的表Courses 课程学习记录一览表（表头：课程；侧栏：员工姓名） 用外连</description></item><item><title>1-4 HAVING子句的力量</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-4-having%E5%AD%90%E5%8F%A5%E7%9A%84%E5%8A%9B%E9%87%8F/</link><pubDate>Mon, 27 Feb 2023 21:44:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-4-having%E5%AD%90%E5%8F%A5%E7%9A%84%E5%8A%9B%E9%87%8F/</guid><description>sql是面向集合的语言 寻找缺失的编号 SeqTbl 用面向过程语言查询缺失的编号的过程 对“连续编号”列按升序或者降序进行排序。 循环比较每一行和下一行的编号</description></item><item><title>第7章 什么是品牌力</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC7%E7%AB%A0-%E4%BB%80%E4%B9%88%E6%98%AF%E5%93%81%E7%89%8C%E5%8A%9B/</link><pubDate>Sun, 26 Feb 2023 14:44:30 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC7%E7%AB%A0-%E4%BB%80%E4%B9%88%E6%98%AF%E5%93%81%E7%89%8C%E5%8A%9B/</guid><description>7.1 定价能力是衡量品牌力的重要标准 既然不赚钱，为何商家要花大力气宣传、促销、做销售额、发战报呢？ 答案是：“卖货”和“卖价格带”是品牌经营的两大</description></item><item><title>U.S. Department of Commerce</title><link>https://jdxj.github.io/posts/data/commerce/</link><pubDate>Sun, 26 Feb 2023 14:25:22 +0800</pubDate><guid>https://jdxj.github.io/posts/data/commerce/</guid><description>主页</description></item><item><title>艾瑞咨询</title><link>https://jdxj.github.io/posts/data/iresearch/</link><pubDate>Sun, 26 Feb 2023 14:16:43 +0800</pubDate><guid>https://jdxj.github.io/posts/data/iresearch/</guid><description>主页</description></item><item><title>智研咨询</title><link>https://jdxj.github.io/posts/data/zhiyan/</link><pubDate>Sun, 26 Feb 2023 13:34:56 +0800</pubDate><guid>https://jdxj.github.io/posts/data/zhiyan/</guid><description>主页</description></item><item><title>申万宏源研究</title><link>https://jdxj.github.io/posts/data/swsresearch/</link><pubDate>Sun, 26 Feb 2023 13:25:30 +0800</pubDate><guid>https://jdxj.github.io/posts/data/swsresearch/</guid><description>主页</description></item><item><title>FROST &amp; SULLIVAN</title><link>https://jdxj.github.io/posts/data/frost/</link><pubDate>Sun, 26 Feb 2023 13:15:19 +0800</pubDate><guid>https://jdxj.github.io/posts/data/frost/</guid><description>主页</description></item><item><title>1-3 三值逻辑和NULL</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-3-%E4%B8%89%E5%80%BC%E9%80%BB%E8%BE%91%E5%92%8Cnull/</link><pubDate>Sun, 26 Feb 2023 12:06:38 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-3-%E4%B8%89%E5%80%BC%E9%80%BB%E8%BE%91%E5%92%8Cnull/</guid><description>SQL是三值逻辑(three-valued logic) 理论篇 两种NULL、三值逻辑还是四值逻辑 未知(unknown). 以“不知道戴墨镜的人眼睛是什么颜</description></item><item><title>Visual Representation of SQL Joins</title><link>https://jdxj.github.io/posts/articles/moffatt/sql-joins/</link><pubDate>Sun, 26 Feb 2023 11:54:11 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/moffatt/sql-joins/</guid><description>原文</description></item><item><title>A Visual Explanation of SQL Joins</title><link>https://jdxj.github.io/posts/articles/codinghorror/sql-joins/</link><pubDate>Sun, 26 Feb 2023 11:47:22 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/codinghorror/sql-joins/</guid><description>原文</description></item><item><title>1-2 自连接的用法</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-2-%E8%87%AA%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%94%A8%E6%B3%95/</link><pubDate>Sat, 25 Feb 2023 18:47:15 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-2-%E8%87%AA%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%94%A8%E6%B3%95/</guid><description>可重排列、排列、组合 Products 有序对(排列) &amp;lt;1, 2&amp;gt; != &amp;lt;2, 1&amp;gt; 无序对(组合) {1, 2} == {2, 1} 通过交叉连接生成笛卡儿积（直积）生成有序对 1 2 3 --用于获取可重排列的</description></item><item><title>1-1 CASE表达式</title><link>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-1-case%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><pubDate>Sat, 25 Feb 2023 16:27:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/sql%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0-%E7%A5%9E%E5%A5%87%E7%9A%84sql/1-1-case%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid><description>CASE表达式概述 CASE表达式的写法 1 2 3 4 5 6 7 8 9 10 --简单CASE表达式 CASE sex WHEN &amp;#39;1&amp;#39; THEN ’男’ WHEN &amp;#39;2&amp;#39; THEN ’女’ ELSE ’其他’ END --搜索CASE表达</description></item><item><title>Smantic</title><link>https://jdxj.github.io/posts/articles/smantic/</link><pubDate>Thu, 23 Feb 2023 10:06:23 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/smantic/</guid><description>主页</description></item><item><title>第8章 堆</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC8%E7%AB%A0-%E5%A0%86/</link><pubDate>Wed, 22 Feb 2023 21:08:46 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC8%E7%AB%A0-%E5%A0%86/</guid><description>8.1 内存分配 在Go的runtime中，有一系列函数被用来分配内存。 例如与new语义相对应的有newobject()函数和newarray()函</description></item><item><title>如何维护更新日志</title><link>https://jdxj.github.io/posts/docs/keepachangelog/</link><pubDate>Tue, 21 Feb 2023 15:13:58 +0800</pubDate><guid>https://jdxj.github.io/posts/docs/keepachangelog/</guid><description>原文</description></item><item><title>Go交叉编译支持的系统与架构</title><link>https://jdxj.github.io/posts/docs/syslist/</link><pubDate>Tue, 21 Feb 2023 15:07:01 +0800</pubDate><guid>https://jdxj.github.io/posts/docs/syslist/</guid><description>代码地址</description></item><item><title>The Best Golang Blogs</title><link>https://jdxj.github.io/posts/articles/karllhughes/the-best-golang-blogs/</link><pubDate>Tue, 21 Feb 2023 14:47:48 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/karllhughes/the-best-golang-blogs/</guid><description>原文</description></item><item><title>Plan9 Assembly</title><link>https://jdxj.github.io/posts/articles/cch123/plan9/</link><pubDate>Tue, 21 Feb 2023 14:36:40 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/cch123/plan9/</guid><description>原文</description></item><item><title>约定式提交</title><link>https://jdxj.github.io/posts/docs/conventionalcommits/</link><pubDate>Tue, 21 Feb 2023 14:24:16 +0800</pubDate><guid>https://jdxj.github.io/posts/docs/conventionalcommits/</guid><description>原文</description></item><item><title>Intellij Ideavim Repeat Key</title><link>https://jdxj.github.io/posts/articles/fillmem/intellij-ideavim-repeat-key/</link><pubDate>Tue, 21 Feb 2023 14:12:49 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/fillmem/intellij-ideavim-repeat-key/</guid><description>ideavim中没法长按按键重复字符解决办法</description></item><item><title>Golang Developer Roadmap</title><link>https://jdxj.github.io/posts/articles/alikhll/golang-developer-roadmap/</link><pubDate>Tue, 21 Feb 2023 13:51:24 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/alikhll/golang-developer-roadmap/</guid><description>原文</description></item><item><title>第7章 同步</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC7%E7%AB%A0-%E5%90%8C%E6%AD%A5/</link><pubDate>Mon, 20 Feb 2023 21:55:24 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC7%E7%AB%A0-%E5%90%8C%E6%AD%A5/</guid><description>7.1 Happens Before 多核情况下避免并发读写的条件 w happens before r。 没有其他针对v的写操作happens after w且before r。 图7-1 多线程并发事件示意图 7.1.1 并发 1 2</description></item><item><title>MySQL的COUNT是怎么执行的</title><link>https://jdxj.github.io/posts/articles/weixin/mysql%E7%9A%84count%E6%98%AF%E6%80%8E%E4%B9%88%E6%89%A7%E8%A1%8C%E7%9A%84/</link><pubDate>Mon, 20 Feb 2023 17:28:18 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/mysql%E7%9A%84count%E6%98%AF%E6%80%8E%E4%B9%88%E6%89%A7%E8%A1%8C%E7%9A%84/</guid><description>COUNT函数用于统计在符合搜索条件的记录中，指定的表达式expr不为NULL的行数有多少。 对于COUNT(*)、COUNT(常数)、COU</description></item><item><title>第6章 供应链 中国消费的底气</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC6%E7%AB%A0-%E4%BE%9B%E5%BA%94%E9%93%BE-%E4%B8%AD%E5%9B%BD%E6%B6%88%E8%B4%B9%E7%9A%84%E5%BA%95%E6%B0%94/</link><pubDate>Sun, 19 Feb 2023 16:07:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC6%E7%AB%A0-%E4%BE%9B%E5%BA%94%E9%93%BE-%E4%B8%AD%E5%9B%BD%E6%B6%88%E8%B4%B9%E7%9A%84%E5%BA%95%E6%B0%94/</guid><description>6.1 数解中国供应链 在我国强大的商品供应链之下，质量过硬的商品能以低廉的成本大量产出。 图6-1 拼多多、1688上有许多高性价比的消费品 图6-2 2</description></item><item><title>中国互联网络信息中心</title><link>https://jdxj.github.io/posts/data/cnnic/</link><pubDate>Sun, 19 Feb 2023 14:41:11 +0800</pubDate><guid>https://jdxj.github.io/posts/data/cnnic/</guid><description>主页</description></item><item><title>Euromonitor</title><link>https://jdxj.github.io/posts/data/euromonitor/</link><pubDate>Sun, 19 Feb 2023 13:55:29 +0800</pubDate><guid>https://jdxj.github.io/posts/data/euromonitor/</guid><description>主页</description></item><item><title>第6章 Goroutine</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC6%E7%AB%A0-goroutine/</link><pubDate>Sun, 19 Feb 2023 13:24:14 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC6%E7%AB%A0-goroutine/</guid><description>6.2 IO多路复用写的不是特别详细</description></item><item><title>Hello Hugo!</title><link>https://jdxj.github.io/posts/hello/</link><pubDate>Sat, 18 Feb 2023 19:52:22 +0800</pubDate><guid>https://jdxj.github.io/posts/hello/</guid><description>用于测试hugo特性.</description></item><item><title>第5章 渠道 互联网和电商是中国消费行业的核心变量</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC5%E7%AB%A0-%E6%B8%A0%E9%81%93-%E4%BA%92%E8%81%94%E7%BD%91%E5%92%8C%E7%94%B5%E5%95%86%E6%98%AF%E4%B8%AD%E5%9B%BD%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A%E7%9A%84%E6%A0%B8%E5%BF%83%E5%8F%98%E9%87%8F/</link><pubDate>Sat, 18 Feb 2023 18:23:46 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC5%E7%AB%A0-%E6%B8%A0%E9%81%93-%E4%BA%92%E8%81%94%E7%BD%91%E5%92%8C%E7%94%B5%E5%95%86%E6%98%AF%E4%B8%AD%E5%9B%BD%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A%E7%9A%84%E6%A0%B8%E5%BF%83%E5%8F%98%E9%87%8F/</guid><description>5.1 中国零售渠道概览 我国的零售渠道分布情况在世界范围内都很独特，其独特性主要归为两点。 我国电商渠道无比发达。 我国传统零售渠道的占比仍然很高。 图</description></item><item><title>Bloomberg</title><link>https://jdxj.github.io/posts/news/bloomberg/</link><pubDate>Sat, 18 Feb 2023 18:08:30 +0800</pubDate><guid>https://jdxj.github.io/posts/news/bloomberg/</guid><description>主页</description></item><item><title>Socket是并发安全的吗</title><link>https://jdxj.github.io/posts/articles/weixin/socket%E6%98%AF%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84%E5%90%97/</link><pubDate>Fri, 17 Feb 2023 14:51:20 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/weixin/socket%E6%98%AF%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84%E5%90%97/</guid><description>多线程并发读/写同一个TCP socket是线程安全的，因为TCP socket的读/写操作都上锁了。虽然线程安全，但依然不建议你这么做，因为T</description></item><item><title>RabbitMQ与Kafka选型对比</title><link>https://jdxj.github.io/posts/articles/skychen1218/rabbitmq%E4%B8%8Ekafka%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94/</link><pubDate>Thu, 16 Feb 2023 16:52:53 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/skychen1218/rabbitmq%E4%B8%8Ekafka%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94/</guid><description>主要看下模型对比. 原文</description></item><item><title>缓存与数据库一致性问题深度剖析</title><link>https://jdxj.github.io/posts/articles/rude3knife/%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</link><pubDate>Thu, 16 Feb 2023 16:32:16 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/rude3knife/%E7%BC%93%E5%AD%98%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</guid><description>原文</description></item><item><title>老板要我开发一个简单的工作流引擎</title><link>https://jdxj.github.io/posts/articles/duck-and-duck/%E8%80%81%E6%9D%BF%E8%A6%81%E6%88%91%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%BC%95%E6%93%8E/</link><pubDate>Thu, 16 Feb 2023 15:47:09 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/duck-and-duck/%E8%80%81%E6%9D%BF%E8%A6%81%E6%88%91%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%BC%95%E6%93%8E/</guid><description>原文</description></item><item><title>DDD兴起的原因以及与微服务的关系</title><link>https://jdxj.github.io/posts/articles/courage129/ddd%E5%85%B4%E8%B5%B7%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%85%B3%E7%B3%BB/</link><pubDate>Thu, 16 Feb 2023 14:59:43 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/courage129/ddd%E5%85%B4%E8%B5%B7%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%85%B3%E7%B3%BB/</guid><description>DDD 是一种架构设计方法，微服务是一种架构风格，两者从本质上都是为了追求高响应力，而从业务视角去分离应用系统建设复杂度的手段。 原文</description></item><item><title>第5章 接口</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC5%E7%AB%A0-%E6%8E%A5%E5%8F%A3/</link><pubDate>Wed, 15 Feb 2023 21:29:46 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC5%E7%AB%A0-%E6%8E%A5%E5%8F%A3/</guid><description>5.1 空接口 是指不包含任何方法的接口interface{} 5.1.1 一个更好的void∗ 如果用unsafe.Sizeof()函数获取一个interfac</description></item><item><title>第4章 方法</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC4%E7%AB%A0-%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 14 Feb 2023 20:38:20 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC4%E7%AB%A0-%E6%96%B9%E6%B3%95/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 第4章 code_4_1.go package gom type Point struct { x float64 } func (p Point) X() float64 { return p.x } func (p *Point) SetX(x float64) { p.x = x } 4.1 接收者类型 为了排除编译器内联优化造成的干扰，</description></item><item><title>第2章 车身 Body</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC2%E7%AB%A0-%E8%BD%A6%E8%BA%AB/</link><pubDate>Mon, 13 Feb 2023 22:30:40 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC2%E7%AB%A0-%E8%BD%A6%E8%BA%AB/</guid><description>2.1 车身规格 Body Specification 车宽尺寸包括后视镜吗？ 现在，全世界各汽车厂商在汽车车身规格的标注方面基本上都统一了，尤其是车身总长、轴距、轮距、前悬和后悬等规</description></item><item><title>第4章 品牌 消费行业的皇冠明珠</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC4%E7%AB%A0-%E5%93%81%E7%89%8C-%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A%E7%9A%84%E7%9A%87%E5%86%A0%E6%98%8E%E7%8F%A0/</link><pubDate>Sun, 12 Feb 2023 16:32:07 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC4%E7%AB%A0-%E5%93%81%E7%89%8C-%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A%E7%9A%84%E7%9A%87%E5%86%A0%E6%98%8E%E7%8F%A0/</guid><description>4.1 品牌是一种什么样的资产 图4-1 时代集团控股的手袋及小皮具平均出厂价 总之，奢侈品包的制造成本，与其定价相去甚远。 奢侈品皮具代工行业相对分散，</description></item><item><title>巨潮资讯</title><link>https://jdxj.github.io/posts/data/cninfo/</link><pubDate>Sun, 12 Feb 2023 14:30:16 +0800</pubDate><guid>https://jdxj.github.io/posts/data/cninfo/</guid><description>主页</description></item><item><title>Win.d</title><link>https://jdxj.github.io/posts/data/wind/</link><pubDate>Sat, 11 Feb 2023 17:06:34 +0800</pubDate><guid>https://jdxj.github.io/posts/data/wind/</guid><description>主页</description></item><item><title>eMarketer</title><link>https://jdxj.github.io/posts/data/insiderintelligence/</link><pubDate>Sat, 11 Feb 2023 17:02:23 +0800</pubDate><guid>https://jdxj.github.io/posts/data/insiderintelligence/</guid><description>主页</description></item><item><title>国家统计局</title><link>https://jdxj.github.io/posts/data/stats/</link><pubDate>Sat, 11 Feb 2023 14:37:16 +0800</pubDate><guid>https://jdxj.github.io/posts/data/stats/</guid><description>主页</description></item><item><title>超全面 MySQL语句加锁分析</title><link>https://jdxj.github.io/posts/articles/zhangdetalk/%E8%B6%85%E5%85%A8%E9%9D%A2-mysql%E8%AF%AD%E5%8F%A5%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90/</link><pubDate>Tue, 07 Feb 2023 16:03:48 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/zhangdetalk/%E8%B6%85%E5%85%A8%E9%9D%A2-mysql%E8%AF%AD%E5%8F%A5%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90/</guid><description>原文</description></item><item><title>第3章 函数</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC3%E7%AB%A0-%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 06 Feb 2023 21:40:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC3%E7%AB%A0-%E5%87%BD%E6%95%B0/</guid><description>本章建议最多读到3.4, 到这里已经看不太懂了</description></item><item><title>惊! 史上最全的select加锁分析(Mysql)</title><link>https://jdxj.github.io/posts/articles/rjzheng/%E6%83%8A-%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84select%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90-mysql/</link><pubDate>Mon, 06 Feb 2023 16:49:26 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/rjzheng/%E6%83%8A-%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84select%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90-mysql/</guid><description>该文章展示了事务隔离级别与锁的关系, 推荐阅读</description></item><item><title>第1章 整车 Automobile</title><link>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC1%E7%AB%A0-%E6%95%B4%E8%BD%A6/</link><pubDate>Sun, 05 Feb 2023 21:26:55 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B1%BD%E8%BD%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%B7%91-%E5%9B%BE%E8%A7%A3%E6%B1%BD%E8%BD%A6%E6%9E%84%E9%80%A0%E4%B8%8E%E5%8E%9F%E7%90%86-%E7%B2%BE%E8%A3%85%E5%85%B8%E8%97%8F%E7%89%88/%E7%AC%AC1%E7%AB%A0-%E6%95%B4%E8%BD%A6/</guid><description>1.1 整车构造组成 Vehicle Structure 四大组成 车身部分包括车身骨架、车身钣金件以及座椅、仪表、天窗、车外后视镜等车身附件。 动力系统由发动机和变速器组成。 底盘由传</description></item><item><title>第3章 消费品投资剑招</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC3%E7%AB%A0-%E6%B6%88%E8%B4%B9%E5%93%81%E6%8A%95%E8%B5%84%E5%89%91%E6%8B%9B/</link><pubDate>Sun, 05 Feb 2023 17:09:48 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC3%E7%AB%A0-%E6%B6%88%E8%B4%B9%E5%93%81%E6%8A%95%E8%B5%84%E5%89%91%E6%8B%9B/</guid><description>3.1 如何发现好赛道 必选消费中有食品饮料、日用品、卫生用品、烟酒等，可选消费有珠宝首饰、房地产、汽车 如何从种类繁多的领域中找到成长性强、模式优秀</description></item><item><title>第2章 消费品投资心法</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC2%E7%AB%A0-%E6%B6%88%E8%B4%B9%E5%93%81%E6%8A%95%E8%B5%84%E5%BF%83%E6%B3%95/</link><pubDate>Sun, 05 Feb 2023 15:12:25 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC2%E7%AB%A0-%E6%B6%88%E8%B4%B9%E5%93%81%E6%8A%95%E8%B5%84%E5%BF%83%E6%B3%95/</guid><description>品牌投资的三条主要逻辑 行业规模、渗透率提升：行业增长可由消费人群的增长或人均消费的增长驱动，渗透率指的是现有消费群体在潜在消费群体中的占比，</description></item><item><title>第2章 指针</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC2%E7%AB%A0-%E6%8C%87%E9%92%88/</link><pubDate>Sun, 05 Feb 2023 13:55:47 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC2%E7%AB%A0-%E6%8C%87%E9%92%88/</guid><description>2.1 指针构成 1 var p *int 无论指针的元素类型是什么，指针变量本身的格式都是一致的，即一个无符号整型，变量大小能够容纳当前平台的地址。例如在386架构</description></item><item><title>第1章 为何选择消费品投资</title><link>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC1%E7%AB%A0-%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9%E6%B6%88%E8%B4%B9%E5%93%81%E6%8A%95%E8%B5%84/</link><pubDate>Sat, 04 Feb 2023 15:46:54 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E5%90%B4%E5%8A%B2%E8%8D%89%E8%AE%B2%E6%B6%88%E8%B4%B9%E8%A1%8C%E4%B8%9A-%E5%8F%91%E7%8E%B0%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%9A%84%E9%95%BF%E7%BA%BF%E5%A4%A7%E7%89%9B%E8%82%A1/%E7%AC%AC1%E7%AB%A0-%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9%E6%B6%88%E8%B4%B9%E5%93%81%E6%8A%95%E8%B5%84/</guid><description>1.1 消费行业的特点 消费涵盖了人们生活的方方面面，范围广、韧性强 消费对应了大多数行业的终端需求 不论是上游周期行业，还是中游科技制造行业，最终都将</description></item><item><title>第1章 汇编基础</title><link>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC1%E7%AB%A0-%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 04 Feb 2023 10:37:02 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2go%E8%AF%AD%E8%A8%80--%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%E4%B8%8Eruntime%E7%9A%84%E5%8E%9F%E7%90%86%E7%89%B9%E6%80%A7%E5%8F%8A%E5%BA%94%E7%94%A8/%E7%AC%AC1%E7%AB%A0-%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</guid><description>1.1 x86通用寄存器 32位x86是intel推出的,64位x86_64是amd推出的(amd64) 1.1.1 32位架构 在汇编中使用名称来引用寄存器. 表</description></item><item><title>第十章 聪明投资者的投资准则</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-%E5%81%9A%E4%B8%AA%E8%81%AA%E6%98%8E%E7%9A%84%E6%8A%95%E8%B5%84%E8%80%85/%E7%AC%AC%E5%8D%81%E7%AB%A0-%E8%81%AA%E6%98%8E%E6%8A%95%E8%B5%84%E8%80%85%E7%9A%84%E6%8A%95%E8%B5%84%E5%87%86%E5%88%99/</link><pubDate>Wed, 01 Feb 2023 21:48:33 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-%E5%81%9A%E4%B8%AA%E8%81%AA%E6%98%8E%E7%9A%84%E6%8A%95%E8%B5%84%E8%80%85/%E7%AC%AC%E5%8D%81%E7%AB%A0-%E8%81%AA%E6%98%8E%E6%8A%95%E8%B5%84%E8%80%85%E7%9A%84%E6%8A%95%E8%B5%84%E5%87%86%E5%88%99/</guid><description>全书总结</description></item><item><title>第九章 投资者常犯的错误</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-%E5%81%9A%E4%B8%AA%E8%81%AA%E6%98%8E%E7%9A%84%E6%8A%95%E8%B5%84%E8%80%85/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E6%8A%95%E8%B5%84%E8%80%85%E5%B8%B8%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/</link><pubDate>Sun, 08 Jan 2023 10:13:08 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-%E5%81%9A%E4%B8%AA%E8%81%AA%E6%98%8E%E7%9A%84%E6%8A%95%E8%B5%84%E8%80%85/%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E6%8A%95%E8%B5%84%E8%80%85%E5%B8%B8%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/</guid><description>把股市当作赌场 资本市场的三类钱 聪明钱是那些有深刻洞察力、前瞻判断力的资金。一般来说，聪明钱赚的是上市公司成长的钱。中国A股市场有很多公司给投</description></item><item><title>压缩其他分支提交到本分支</title><link>https://jdxj.github.io/posts/cmd/git/%E5%8E%8B%E7%BC%A9%E5%85%B6%E4%BB%96%E5%88%86%E6%94%AF%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%88%86%E6%94%AF/</link><pubDate>Sat, 07 Jan 2023 12:13:10 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/%E5%8E%8B%E7%BC%A9%E5%85%B6%E4%BB%96%E5%88%86%E6%94%AF%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%88%86%E6%94%AF/</guid><description>1 $ git merge --squash &amp;lt;branch&amp;gt;</description></item><item><title>terminal prompts disabled</title><link>https://jdxj.github.io/posts/cmd/git/terminal-prompts-disabled/</link><pubDate>Wed, 04 Jan 2023 21:55:38 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/git/terminal-prompts-disabled/</guid><description>解决could not read Username for &amp;lsquo;https://github.com&amp;rsquo;: terminal prompts disabled 1 $ git config --global --add url.&amp;#34;git@github.com:&amp;#34;.insteadOf &amp;#34;https://github.com/&amp;#34;</description></item><item><title>第八章 跟踪股票基本面的变化</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E8%B7%9F%E8%B8%AA%E8%82%A1%E7%A5%A8%E5%9F%BA%E6%9C%AC%E9%9D%A2%E7%9A%84%E5%8F%98%E5%8C%96/</link><pubDate>Tue, 03 Jan 2023 22:36:39 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E8%B7%9F%E8%B8%AA%E8%82%A1%E7%A5%A8%E5%9F%BA%E6%9C%AC%E9%9D%A2%E7%9A%84%E5%8F%98%E5%8C%96/</guid><description>识别关键驱动因素 对股价有持续、重要影响的因素 鉴别信号和噪声，就是要判断某个信息会不会对公司的收入、成本、业绩等产生比较大的持续影响。 不同的行</description></item><item><title>第七章 买入之前做好充分决策</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E4%B9%B0%E5%85%A5%E4%B9%8B%E5%89%8D%E5%81%9A%E5%A5%BD%E5%85%85%E5%88%86%E5%86%B3%E7%AD%96/</link><pubDate>Sat, 31 Dec 2022 22:00:12 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E4%B9%B0%E5%85%A5%E4%B9%8B%E5%89%8D%E5%81%9A%E5%A5%BD%E5%85%85%E5%88%86%E5%86%B3%E7%AD%96/</guid><description>设定买入股票的条件 一般来说，买入股票的条件包括股价进入合理区间，一些重要的基本面因素发生积极变化（“催化剂”事件发生）。 等股价下跌到预期价格</description></item><item><title>Redis administration</title><link>https://jdxj.github.io/posts/docs/redis/managing-redis/administration/</link><pubDate>Fri, 30 Dec 2022 14:22:21 +0800</pubDate><guid>https://jdxj.github.io/posts/docs/redis/managing-redis/administration/</guid><description>Redis setup tips Linux 设置内核参数 vm.overcommit_memory = 1 表示 Always overcommit 写到 /etc/sysctl.conf 配置中后重启 或者直接激活 sysctl vm.overcommit_memory=1 linux的vm.overcommit_memory的内存分配参数详解 理</description></item><item><title>Redis FAQ</title><link>https://jdxj.github.io/posts/docs/redis/getting-started/faq/</link><pubDate>Fri, 30 Dec 2022 10:22:21 +0800</pubDate><guid>https://jdxj.github.io/posts/docs/redis/getting-started/faq/</guid><description>How is Redis different from other key-value stores? 拥有复杂的数据类型, 及其上的原子操作 是可持久化的内存型数据库, 在数据集比内存大的限制下可以权衡读写速度 What&amp;rsquo;s the Redis memory footprint? 空实例~3M</description></item><item><title>Dave Cheney</title><link>https://jdxj.github.io/posts/articles/cheney/</link><pubDate>Wed, 28 Dec 2022 10:56:47 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/cheney/</guid><description>主页</description></item><item><title>How to Ask Questions The Smart Way</title><link>https://jdxj.github.io/posts/articles/ryanhanwu/how-to-ask-questions/</link><pubDate>Sat, 24 Dec 2022 12:42:21 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/ryanhanwu/how-to-ask-questions/</guid><description>原文 在提问之前 尝试在你准备提问的论坛的旧文章中搜索答案。 尝试上网搜索以找到答案。 尝试阅读手册以找到答案。 尝试阅读常见问题文件（FAQ）以找到</description></item><item><title>Go1.18快讯 新的IP包</title><link>https://jdxj.github.io/posts/articles/polarisxu/go1.18%E5%BF%AB%E8%AE%AF-%E6%96%B0%E7%9A%84ip%E5%8C%85/</link><pubDate>Fri, 23 Dec 2022 18:03:09 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/polarisxu/go1.18%E5%BF%AB%E8%AE%AF-%E6%96%B0%E7%9A%84ip%E5%8C%85/</guid><description>原文</description></item><item><title>第六章 四大工具验证好股票</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%9B%9B%E5%A4%A7%E5%B7%A5%E5%85%B7%E9%AA%8C%E8%AF%81%E5%A5%BD%E8%82%A1%E7%A5%A8/</link><pubDate>Wed, 21 Dec 2022 21:41:56 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%9B%9B%E5%A4%A7%E5%B7%A5%E5%85%B7%E9%AA%8C%E8%AF%81%E5%A5%BD%E8%82%A1%E7%A5%A8/</guid><description>用“望远镜”验证公司的赛道 好股票的标准可以用“好赛道+好公司+好价格（估值）”来概括 什么是赛道？赛道是公司所处的行业或者业务领域。 赛道吸引力</description></item><item><title>聊一个 string 和 []byte 转换问题</title><link>https://jdxj.github.io/posts/articles/huoding/%E8%81%8A%E4%B8%80%E4%B8%AAstring%E5%92%8Cbyte%E8%BD%AC%E6%8D%A2%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 20 Dec 2022 14:18:18 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/huoding/%E8%81%8A%E4%B8%80%E4%B8%AAstring%E5%92%8Cbyte%E8%BD%AC%E6%8D%A2%E9%97%AE%E9%A2%98/</guid><description>错误的使用uintptr转换结果可能被 GC. 原文</description></item><item><title>Designing Go Libraries</title><link>https://jdxj.github.io/posts/articles/abhinavg/designing-go-libraries/</link><pubDate>Tue, 20 Dec 2022 10:17:23 +0800</pubDate><guid>https://jdxj.github.io/posts/articles/abhinavg/designing-go-libraries/</guid><description>原文 1. Primary Concerns 1.1. Usability 建立惯例使库的特性可发现 潜在的错误使用 易于完成常见任务 Case Study: net/http 看起来有些繁琐 1 2 3 4 5 6 7 8 9 10 // import &amp;#34;net/http&amp;#34; req, err := http.NewRequest(http.MethodGet, &amp;#34;http://example.com&amp;#34;, nil /* body */) if err != nil</description></item><item><title>17 Explain详解(下)</title><link>https://jdxj.github.io/posts/books/mysql%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E4%BB%8E%E6%A0%B9%E5%84%BF%E4%B8%8A%E7%90%86%E8%A7%A3mysql/17-explain%E8%AF%A6%E8%A7%A3%E4%B8%8B/</link><pubDate>Mon, 19 Dec 2022 10:54:28 +0800</pubDate><guid>https://jdxj.github.io/posts/books/mysql%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E4%BB%8E%E6%A0%B9%E5%84%BF%E4%B8%8A%E7%90%86%E8%A7%A3mysql/17-explain%E8%AF%A6%E8%A7%A3%E4%B8%8B/</guid><description>各列详解 Extra 展示额外信息 No tables used 没有 from 子句 1 2 3 4 5 6 7 mysql&amp;gt; EXPLAIN SELECT 1; +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | 1 | SIMPLE | NULL | NULL | NULL | NULL |</description></item><item><title>第五章 选出潜力好股票的"7种武器"</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E9%80%89%E5%87%BA%E6%BD%9C%E5%8A%9B%E5%A5%BD%E8%82%A1%E7%A5%A8%E7%9A%847%E7%A7%8D%E6%AD%A6%E5%99%A8/</link><pubDate>Sat, 17 Dec 2022 20:18:59 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E6%8A%95%E8%B5%84%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E9%80%89%E5%87%BA%E6%BD%9C%E5%8A%9B%E5%A5%BD%E8%82%A1%E7%A5%A8%E7%9A%847%E7%A7%8D%E6%AD%A6%E5%99%A8/</guid><description>A股上市公司数量接近4000只 有研究报告覆盖的公司数量也不超过2000家 第一种武器：跟着券商研报选股 基本方法: 三看两不看 三看: 一看基本情况分</description></item><item><title>第四章 与时俱进发展自己的盈利体系</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E4%B8%8E%E6%97%B6%E4%BF%B1%E8%BF%9B%E5%8F%91%E5%B1%95%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/</link><pubDate>Sat, 17 Dec 2022 19:30:28 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E4%B8%8E%E6%97%B6%E4%BF%B1%E8%BF%9B%E5%8F%91%E5%B1%95%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/</guid><description>“知—择—行”，构建自己的投资体系 知 清楚自己的能力圈, 包括专业背景, 知识结构 清楚自己的风险承受能力, 年龄, 收入, 投资占收入和其他资产的比重 形</description></item><item><title>16 Explain详解(上)</title><link>https://jdxj.github.io/posts/books/mysql%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E4%BB%8E%E6%A0%B9%E5%84%BF%E4%B8%8A%E7%90%86%E8%A7%A3mysql/16-explain%E8%AF%A6%E8%A7%A3%E4%B8%8A/</link><pubDate>Sat, 17 Dec 2022 11:57:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/mysql%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E4%BB%8E%E6%A0%B9%E5%84%BF%E4%B8%8A%E7%90%86%E8%A7%A3mysql/16-explain%E8%AF%A6%E8%A7%A3%E4%B8%8A/</guid><description>示例表 使用例子 1 2 3 4 5 6 7 mysql&amp;gt; EXPLAIN SELECT 1; +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | 1 | SIMPLE | NULL | NULL | NULL | NULL | NULL | NULL | NULL | NULL | NULL | No tables</description></item><item><title>第三章 股票投资常见的盈利体系</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%B8%B8%E8%A7%81%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/</link><pubDate>Thu, 15 Dec 2022 20:33:57 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E5%B8%B8%E8%A7%81%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/</guid><description>技术分析 所有的技术分析都是建立在三大假设之上的。 第一，市场行为包含一切。这句话的含义是所有的基础事件——经济事件、社会事件、战争、自然灾害等</description></item><item><title>第二章 我们需要构建什么样的盈利体系</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E6%9E%84%E5%BB%BA%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/</link><pubDate>Mon, 12 Dec 2022 22:28:27 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E6%9E%84%E5%BB%BA%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/</guid><description>盈利体系的基石：正确认知 对股票的认知: 投资股票靠什么赚钱 对风险的认知: 如何应对投资亏损 对股票的认知 一种认知是：股票就是博弈的筹码。 零和游戏 另</description></item><item><title>第一章 盈利体系为什么重要</title><link>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E8%A6%81/</link><pubDate>Mon, 12 Dec 2022 21:05:32 +0800</pubDate><guid>https://jdxj.github.io/posts/books/%E9%95%BF%E6%9C%9F%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%9A%84%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%9E%84%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%9B%88%E5%88%A9%E4%BD%93%E7%B3%BB%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E8%A6%81/</guid><description>股票投资看似简单却很复杂 股票投资难，在于股票投资是一个概率游戏，正确决策（过程）未必带来好的结果，错误决策（过程）有时候会让你赚钱。也就是说</description></item><item><title>Chapter15 The InnoDB Storage Engine</title><link>https://jdxj.github.io/posts/docs/mysql/chapter15-the-innodb-storage-engine/</link><pubDate>Thu, 08 Dec 2022 15:50:12 +0800</pubDate><guid>https://jdxj.github.io/posts/docs/mysql/chapter15-the-innodb-storage-engine/</guid><description>15.1 Introduction to InnoDB 15.1.2 Best Practices for InnoDB Tables 使用索引 关闭自动提交 (写速度限制) 15.1.3 Verifying that InnoDB is the Default Storage Engine DEFAULT 字样 1 2 SHOW ENGINES; SELECT * FROM INFORMATION_SCHEMA.ENGINES; 15.2 InnoDB and the ACID Model A: atomicity. C: consistency. I: isolation. D: durability. 15.3 InnoDB Multi-Versioning InnoDB 在每行记录</description></item><item><title>curl</title><link>https://jdxj.github.io/posts/cmd/curl/</link><pubDate>Tue, 06 Dec 2022 10:28:45 +0800</pubDate><guid>https://jdxj.github.io/posts/cmd/curl/</guid><description>原文 Options -K, --config &amp;lt;file&amp;gt; 在文件中指定 curl 的参数 选项和其参数可以用 空格, :, = 分隔 如果选项前有 - 或 --, 则可以省略 :, = 长选项可省略 -- 参数中包含空格 (或者以 :, = 开头</description></item></channel></rss>